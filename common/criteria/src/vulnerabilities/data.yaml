---
'001':
  en:
    title: SQL injection - C Sharp SQL API
    description: >
      Dynamic SQL statements are generated
      without the required data validation
      and without using parameterized statements
      or stored procedures.
    impact: >
      Inject SQL statements,
      with the possibility
      of obtaining information about the database,
      as well as extract information from it.
    recommendation: >
      Perform queries to the database
      through sentences or parameterized procedures.
    threat: Authenticated attacker from the Internet.
  es:
    title: SQL injection - C Sharp SQL API
    description: >
      Se generan sentencias SQL dinámicas
      sin la validación requerida de datos
      y sin utilizar sentencias parametrizadas
      o procedimientos almacenados.
    impact: >
      Inyectar sentencias SQL,
      con la posibilidad de obtener información
      sobre la base de datos,
      así como extraer información de la misma.
    recommendation: >
      Realizar las consultas a la base de datos
      por medio de sentencias
      o procedimientos parametrizados.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      An open query that could get injected to get sensitive information
      ```c {3,7,15}
      using Microsoft.AspNetCore.Mvc;
      using Microsoft.EntityFrameworkCore;
      using WebApplication1.Controllers;

      namespace WebApplicationDotNetCore.Controllers{
        public class RSPEC3649SQLiNoncompliant{
          public IActionResult Authenticate(UserAccountContext context, string user){
            //This query does not validate input data
            string insecure_query = "SELECT * FROM Users WHERE Username = user;
            insecure_obj = new SqlCommand(insecure_query);
            insecure_methd = sqcontext.Database.ExecuteSqlCommand(insecure_query);
          }
        }
      }
      ```
    compliant: |
      The application should use parameterized queries to avoid SQL injections
      ```c {3,7,15}
      using Microsoft.AspNetCore.Mvc;
      using Microsoft.EntityFrameworkCore;
      using WebApplication1.Controllers;

      namespace WebApplicationDotNetCore.Controllers{
        public class RSPEC3649SQLiNoncompliant{
          public IActionResult Authenticate(UserAccountContext context, string user){
            string secure_query = "UPDATE Sales.Store SET Demographics = @demographics " + "WHERE CustomerID = @ID;";
            secure_obj = new SqlCommand(secure_query);
            secure_methd = sqcontext.Database.ExecuteSqlCommand(secure_query);
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['169', '173']
  metadata:
    en:
      details: |
        In **Spring Data JPA** framework
        you can create SQL queries in many ways:

        ```c {3,7,15}
        public interface UserRepository extends JpaRepository<User, Long> {
          // Using Java Persistence Query Language (JPQL)
          @Query("select u from User u where u.emailAddress = ?1")
          List<User> findByEmailAddress1(String emailAddress);

          // Using Spring Expression Language (SpEL)
          @Query("select u from User u where u.emailAddress = :#{[0]}")
          List<User> findByEmailAddress2(@Param("emailAddress") String emailAddress);
        }

        @Entity
        // Using named queries
        @NamedQuery(
          name = "User.findByEmailAddress3",
          query = "select u from User u where u.emailAddress = ?1"
        )
        public class User { /* ... */ }
        ```

        ### Abuse cases

        No framework is silver-bullet, though.

        #### Java Persistence Query Language

        By default,
        the `JPQL` engine will escape
        the following user-supplied input parameters

        - `JPQL` Positional Parameters: `?1`
        - `JPQL` Named Parameters: `:emailAddress`

        In other words,
        `emailAddress` will be interpreted
        by the SQL engine as a string literal,
        with possible special characters
        in a SQL context escaped.

        However,
        if you write a `JPQL` query like this one:

        ```c {1}
        @Query("select u from User u where u.emailAddress like %?1")
        User findByEmailAddress(String emailAddress);
        ```

        Notice the `%` we added
        in front of the JPQL positional parameter `?1`.

        An attacker that manages to supply
        an `emailAddress` equal to `a`
        will fetch all email addresses from the database
        that end with the letter `a`.
        The resulting query will be:

        ```sql
        SELECT u FROM User u WHERE u.emailAddress LIKE '%a'
        ```

        We highly recommend you avoid mixing

        - `LIKE` conditions (or similar in its kind)
        - hard-coded special wildcard characters
        - user-supplied input

        As noted in the example,
        sanitizing is no solution at all.
        The problem is having a hard-coded `%` in the `JPQL` statement.

        #### Spring Expression Language

        By default,
        `SpEL` Expressions are **not escaped**.
        This happens because `SpEL` is designed
        as an expression language,
        not a SQL language.

        In other words `SpEL Expressions Bindings`
        like `:#{[0]}` or `?#{[0]}`
        will just copy the value of `[0]`
        into the SQL operation
        to be executed by the database.

        If you write a `SpEL` query like this one:

        ```c
        @Query("select u from User u where u.emailAddress = :#{[0]}")
        List<User> findByEmailAddress2(@Param("emailAddress") String emailAddress);
        ```

        An attacker that manages to supply an `emailAddress` equal to `%`,
        will fetch all email addresses from the database.
        The evaluated query will be

        ```sql
        SELECT u FROM User u WHERE u.emailAddress LIKE '%'
        ```

        We highly recommend you to use the `escape` function
        from `SpEL` context as follow:

        ```c {3-4}
        @Query(
          "select u from User u " +
          "where u.emailAddress like ?#{escape([0])} " +
          "escape ?#{escapeCharacter()}"
        )
        List<User> findByEmailAddress2(@Param("emailAddress") String emailAddress);
        ```

        In this case the evaluated query would be:

        ```sql
        SELECT u FROM User u WHERE u.emailAddress LIKE '\%' ESCAPE '\'
        ```
'002':
  en:
    title: Asymmetric denial of service
    description: >
      The server is rendered unresponsive
      as a result of one of the following:

      - An amplification attack,
      which uses a single request
      to produce multiple responses.

      - A single malicious request
      that breaks the application
      or consumes an enormous amount of resources.
    impact: >
      Deny temporary or permanently the access to one
      or several application services.
    recommendation: >
      Define a time-out when a query
      or a search is taking a lot of time
      processing the information.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Asymmetric denial of service
    description: >
      Se genera la caída del servidor
      como resultado de ataques de amplificación,
      en donde una petición genera
      múltiples respuestas.
    impact: >
      Denegar temporal o permanentemente el acceso
      a uno o varios servicios de la aplicación.
    recommendation: >
      Definir un time-out cuando una consulta
      o una búsqueda se está demorando mucho
      en procesar la información.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application contains queries that retrieve possible large amounts of information without any limits
      ```java
      public class QueryTimeout {
        private static final String URL = "mydburl";
        private static final String USERNAME = "root";
        private static final String PASSWORD = "";

        public static void main(String[] args) {
          Statement stmt = connection.createStatement();

          // Possible sql query that could crash the server
          ResultSet rs = stmt.executeQuery("select * from products");

          while (rs.next()) {
            System.out.println("code: " + rs.getString("code")
                    + " ,product: " + rs.getString("name")
                    + " ,price: " + rs.getDouble("price"));
          }
        }
      }
      ```
    compliant: |
      If a very large query needs to be used, include a time-out limit to avoid crashing the server
      ```java
      public class QueryTimeout {
        private static final String URL = "mydburl";
        private static final String USERNAME = "root";
        private static final String PASSWORD = "";

        public static void main(String[] args) {
          try (Connection connection =
            DriverManager.getConnection(URL, USERNAME, PASSWORD)) {
            Statement stmt = connection.createStatement();

            //Set a query timeout limit
            stmt.setQueryTimeout(60);

            // Execute sql query
            ResultSet rs = stmt.executeQuery("select * from products");

            while (rs.next()) {
              System.out.println("code: " + rs.getString("code")
                      + " ,product: " + rs.getString("name")
                      + " ,price: " + rs.getDouble("price"));
            }
          } catch (SQLException e) {
              //Code to handle exception
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'003':
  en:
    title: Symmetric denial of service
    description: >
      The server is rendered unresponsive
      by successively repeating a request
      which consumes a lot of resources
      or takes too long to be processed.
    impact: >
      Deny temporary or permanently the access to one
      or several application services.
    recommendation: >
      Define a time-out when a query
      or a search is taking a lot of time
      processing the information
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Symmetric denial of service
    description: >
      Se genera la caída del servidor
      con múltiples peticiones
      a una funcionalidad específica
      la cual consume muchos recursos
      o se demora en procesar la información.
    impact: >
      Denegar temporal o permanentemente el acceso
      a uno o varios servicios de la aplicación.
    recommendation: >
      Definir un time-out cuando una consulta
      o una búsqueda se está demorando mucho
      en procesar la información.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application contains queries that retrieve possible large amounts of information without any limits
      ```java
      public class QueryTimeout {
        public static void main(String[] args) {
          Statement stmt = connection.createStatement();

          // Execute sql query
          ResultSet rs = stmt.executeQuery("select * from products");

          while (rs.next()) {
            System.out.println("code: " + rs.getString("code")
                    + " ,product: " + rs.getString("name")
                    + " ,price: " + rs.getDouble("price"));
          }
        }
      }
      ```
    compliant: |
      If a very large query needs to be used, include a time-out limit to avoid crashing the server
      ```java
      public class QueryTimeout {
        public static void main(String[] args) {
          try {
            Statement stmt = connection.createStatement();
            //Set a query timeout limit
            stmt.setQueryTimeout(60);

            // Execute sql query
            ResultSet rs = stmt.executeQuery("select * from products");

            while (rs.next()) {
              System.out.println("code: " + rs.getString("code")
                      + " ,product: " + rs.getString("name")
                      + " ,price: " + rs.getDouble("price"));
            }
          } catch (SQLException e) {
              //Code to handle exception
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'004':
  en:
    title: Remote command execution
    description: >
      The system builds OS commands
      using inputs that can be
      manipulated externally,
      it does not correctly neutralize
      special elements
      that could modify the OS command.
    impact: Execute unauthorized code or commands.
    recommendation: >
      - If at all possible,
      use standard library calls rather
      than external processes
      to recreate the desired functionality.

      - Keep as much data
      as possible used to generate
      command outside of external control.

      - Properly escape the arguments used
      to generate the command
      and avoid special characters.
    threat: Authenticated attacker from the Internet.
  es:
    title: Remote command execution
    description: >
      El sistema construye comandos de sistema
      utilizando entradas
      que puden ser manipuladas externamente,
      no neutraliza correctamente
      elementos especiales
      que podrían modificar
      el comando del sistema.
    impact: Ejecutar secuencias de comandos no autorizados.
    recommendation: >
      - Si es posible,
      utilizar llamadas a la biblioteca estándar
      en lugar de procesos externos
      para recrear la funcionalidad deseada.

      - Mantener la mayor
      cantidad posible de datos
      usados para generar comando
      fuera del control externo.

      - Escapar correctamente los argumentos
      usados para generar el comando
      y evite los caracteres especiales.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      ```c {3,7,15}
      public void bad() throws Throwable{
        String data;
        /* POTENTIAL FLAW: Read data from an environment variable */
        data = System.getenv("ADD");

        String osCommand;
        if(System.getProperty("os.name").toLowerCase().indexOf("win") >= 0){
          osCommand = "c:\\WINDOWS\\SYSTEM32\\cmd.exe /c dir ";
        }
        else{
          osCommand = "/bin/ls ";
        }

        /* POTENTIAL FLAW: command injection */
        Process process = Runtime.getRuntime().exec(osCommand + data);
        process.waitFor();
      }
      ```
    compliant: |
      ```c {3,7,15}
      private void goodG2B() throws Throwable
      {
        String data;
        /* FIX: Use a hardcoded string */
        data = "foo";
        String osCommand;
        if(System.getProperty("os.name").toLowerCase().indexOf("win") >= 0){
          /* running on Windows */
          osCommand = "c:\\WINDOWS\\SYSTEM32\\cmd.exe /c dir ";
        }
        else{
          /* running on non-Windows */
          osCommand = "/bin/ls ";
        }

        /* POTENTIAL FLAW: command injection */
        Process process = Runtime.getRuntime().exec(osCommand + data);
        process.waitFor();
      }
      ```
      Source Code: https://raw.githubusercontent.com/find-sec-bugs/juliet-test-suite/master/src/testcases/CWE78_OS_Command_Injection/CWE78_OS_Command_Injection__Environment_01.java
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '265', '266']
  metadata:
    en:
      details: __empty__
'005':
  en:
    title: Privilege escalation
    description: >
      Due to an insecure role configuration,
      it is possible to obtain
      administrative access
      or privileges using
      a standard user account.
    impact: >
      Get access to information and operations
      that should not be available for the current role.
    recommendation: >
      The roles must be controlled
      with users tokens
      or the exposure of user ID
      must be avoided.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Privilege escalation
    description: >
      Los roles administrativos son accedidos
      desde funciones de un usuario estándar
      debido a una mala configuración de los roles
      dentro de la aplicación.
    impact: >
      Obtener acceso a información y operaciones
      que no deberían estar disponibles para el rol actual.
    recommendation: >
      Los roles deben ser controlados
      con tokens de usuario
      o se debe evitar la exposición
      de identificadores de usuario.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application uses a resource with unrestricted access or not correctly configured restrictions
      ```yaml
      Resources:
        BucketPolicy1:
          Type: AWS::S3::BucketPolicy
          Properties:
            Bucket: DOC-EXAMPLE-BUCKET
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Action:
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - ''
                    - - 'arn:aws:s3:::'
                      - DOC-EXAMPLE-BUCKET
                      - /*
                  Principal: '*'
                  Condition:
                    StringLike:
                      'aws:Referer':
                        - 'http://www.example.com/*'
                        - 'http://example.net/*'
      ```
      An IAM configuration with a PassRole that uses a wild card access
      ```yaml
      Resources:
        AWS_IAM_Role_1:
          Type: AWS::IAM::Role
          Properties:
            AssumeRolePolicyDocument:
              Statement:
                - Effect: Allow
                  Action: iam:PassRole
                  Resource: '*'
                  Condition:
                    StringEquals:
                      iam:PassedToService: myhost.com
      ```
    compliant: |
      Every user role should have clearly defined authorization restrictions to resources
      ```json
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "arn:aws:::123456789012:role/user"
          "arn:aws:::123456789012:role/admin"
        ]
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['035']
  metadata:
    en:
      details: __empty__
'006':
  en:
    title: Authentication mechanism absence or evasion
    description: >
      The system lacks an authentication mechanism
      or has one that can be bypassed.
      Therefore,
      an attacker can access resources
      that should be protected
      without having an active session.
    impact: >
      Bypass the login mechanism a
      nd get unauthorized access to the application
    recommendation: >
      Each criticial functionality resource
      for the organization must have
      a strong authentication process
      and it needs to be assured
      that each user trying to access
      has an initialized session.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Authentication mechanism absence or evasion
    description: >
      El sistema carece de un mecanismo
      de autenticación
      o tiene uno que puede ser evadido.
      Por lo tanto,
      un atacante puede acceder
      a recursos compartidos
      sin tener una sesión activa.
    impact: >
      Sobrepasar el mecanismo de autenticación
      y obtener acceso no autorizado a la aplicación
    recommendation: >
      Poner para todo recurso
      con una funcionalidad crítica
      para el negocio un proceso
      de autenticación fuerte
      y asegurarse de que cada usuario
      que intente acceder
      tenga una sesión iniciada.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      No authentication restrictions provided for a given cloud resource
      ```terraform
      provider "aws" {
        region     = "us-west-2"
        access_key = "*"
      }
      ```
    compliant: |
      Specify iam policies according to the strictest access requirements
      ```terraform
      resource "aws_iam_policy" "policy" {
        name        = "test_policy"
        path        = "/mypath"
        description = "My test policy"

        policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Action = [
                "ec2:Describe*",
              ]
              Effect   = "Allow"
              Resource = "db_critical"
            },
          ]
        })
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'007':
  en:
    title: Cross-site request forgery
    description: >
      The applications configuration
      allows an attacker
      to trick authenticated users
      into executing actions
      without their consent.
    impact: >
      Impersonate a user request
      to execute malicious actions in the application.
    recommendation: >
      Use of tokens in forms to verify requests
      done by legitimate users.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Cross-site request forgery
    description: >
      La aplicación permite engañar
      a un usuario autenticado
      por medio de links manipulados
      para ejecutar acciones sobre la aplicación
      sin su consentimiento.
    impact: >
      Suplantar las peticiones de un usuario
      para ejecutar acciones maliciosas en la aplicación.
    recommendation: >
      Hacer uso de tokens en los formularios
      para la verificación
      de las peticiones realizadas
      por usuarios legítimos.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Vulnerable request that could be potentially handled by the application, it defines a set value for a cookie session which would be shared among all the subdomains. It is also using a GET request to change state data
      ```http
      GET /email/change HTTP/1.1
      Host: vulnerable-website.com
      Content-Type: application/x-www-form-urlencoded
      Content-Length: 30
      Cookie: session=yvthwsztyeQkAPzeQ5gHgTvlyxHfsAfE
      email=wiener@normal-user.com
      ```
    compliant: |
      The application should make use of unique tokens included in the forms, to validate requests and avoid manipulated data
      ```html
      <html>
        <body>
          <input type="hidden" name="csrf-token" value="CIwNZNlR4XbisJF39I8yWnWX9wX4WFoz" />
          <input type="text" name="name" id="name" placeholder="Name" required/>
          <label id="icon" for="name"><i class="fas fa-unlock-alt"></i></label>
          <input type="password" name="name" id="name" placeholder="Password" required/>
        </body>
      </html>
      ```
      Other options would be to use frameworks with built-in CSRF protection
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['029', '174']
  metadata:
    en:
      details: __empty__
'008':
  en:
    title: Reflected cross-site scripting (XSS)
    description: >
      The web application
      dynamically generates web content
      without validating the source
      of the potentially untrusted data.
    impact: >
      Generate web pages
      that could contain malicious scripts
      injected into untrusted data.
    recommendation: >
      Perform input data validations on the server-side
      to avoid common script injection attacks.
    threat: Authenticated attacker from the Internet.
  es:
    title: Reflected cross-site scripting (XSS)
    description: >
      La aplicación web genera contenido web dinámico
      sin validar el origen de los datos
      potencialmente maliciosos.
    impact: >
      Generar páginas web
      que podrían contener
      scripts maliciosos
      inyectados en datos que
      no son de confianza.
    recommendation: >
      Realice la validaciones
      de datos de entrada
      en el lado del servidor
      para evitar los ataques más comunes
      de inyección de scripts.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      A method that generates web content does not properly validate the client input, so an XSS attack could be executed
      ```c {3,7,15}
      public override void Bad(HttpRequest req, HttpResponse resp)
      {
        string data;
        data = ""; /* Initialize data */
        /* Read data using an outbound tcp connection */
        {
          try
          {
            /* Read data using an outbound tcp connection */
            using (TcpClient tcpConn = new TcpClient("host.example.org", 39544))
            {
              /* read input from socket */
              using (StreamReader sr = new StreamReader(tcpConn.GetStream()))
              {
                /* POTENTIAL FLAW: Read data using an outbound tcp connection */
                data = sr.ReadLine();
              }
            }
          }
          catch (IOException exceptIO)
          {
              IO.Logger.Log(NLog.LogLevel.Warn, exceptIO, "Error with stream reading");
          }
        }
        if (data != null)
        {
          /* POTENTIAL FLAW: Display of data in web page after using Replace() to remove script tags, which will still allow XSS with strings like <scr<script>ipt> (CWE 182: Collapse of Data into Unsafe Value) */
          resp.Write("<br>Bad(): data = " + data.Replace("(<script>)", ""));
        }
      }
      ```
      Java example
      ```java
      @WebServlet(value = "/xss-00/BenchmarkTest00013")
      public class BenchmarkTest00013 extends HttpServlet {

        private static final long serialVersionUID = 1L;

        @Override
        public void doGet(HttpServletRequest request, HttpServletResponse response)
          throws ServletException, IOException {
          doPost(request, response);
        }

        @Override
        public void doPost(HttpServletRequest request, HttpServletResponse response)
          throws ServletException, IOException {
          // some code
          response.setContentType("text/html;charset=UTF-8");

          String param = "";
          java.util.Enumeration<String> headers = request.getHeaders("Referer");

          if (headers != null && headers.hasMoreElements()) {
              param = headers.nextElement(); // just grab first element
          }

          // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
          param = java.net.URLDecoder.decode(param, "UTF-8");

          response.setHeader("X-XSS-Protection", "0");
          Object[] obj = {"a", "b"};
          response.getWriter().format(java.util.Locale.US, param, obj);
        }
      }
      ```
    compliant: |
      Implement hardcoded data. If not possible, ensure correct and secure validation of input data
      C# example
      ```c {3,7,15}
      public override void Good(HttpRequest req, HttpResponse resp)
      {
        GoodG2B(req, resp);
      }

      private void GoodG2B(HttpRequest req, HttpResponse resp)
      {
        string data;
        /* FIX: Use a hardcoded string */
        data = "Hello world";
        if (data != null)
        {
          resp.Write("<br>Good(): data = " + data ""));
        }
      }
      ```
      Java example
      ```java
      @WebServlet(value = "/xss-00/BenchmarkTest00150")
      public class BenchmarkTest00150 extends HttpServlet {
        private static final long serialVersionUID = 1L;

        @Override
        public void doGet(HttpServletRequest request, HttpServletResponse response)
          throws ServletException, IOException {
          doPost(request, response);
        }

        @Override
        public void doPost(HttpServletRequest request, HttpServletResponse response)
          throws ServletException, IOException {
          response.setContentType("text/html;charset=UTF-8");

          String bar = LocalDateTime.now();
          response.setHeader("X-XSS-Protection", "0");
          Object[] obj = {"a", bar};
          // Avoid using user parameters to generate web content
          response.getWriter().printf(java.util.Locale.US, "Formatted like: %1$s and %2$s.", obj);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: C
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['029', '173']
  metadata:
    en:
      details: __empty__
'009':
  en:
    title: Sensitive information in source code
    description: >
      The source code repository
      contains sensitive information
      such as usernames, passwords, email addresses
      and IP addresses, among others.
      Alternatively,
      while values may be password=123
      o aws.secret_key=test,
      they reveal the bad practice
      of storing sensitive information
      in the repository with no encryption,
      and sooner or later they can be replaced
      for real sensitive values.
    impact: >
      Get sensitive information or private secrets.
    recommendation: >
      - Delete all hardcoded sensitive information.

      - Change all affected access credentials.

      - Remove sensitive information from git logs.

      - Load sensitive data from safe sources
      such as, key vault services,
      configuration files properly encrypted
      or administrative environment variables.
    threat: Anonymous attacker with access to the source-code from the Internet.
  es:
    title: Sensitive information in source code
    description: >
      En el repositorio
      se encuentra almacenada (sin cifrar)
      información sensible
      como usuarios, contraseñas, correos electrónicos,
      credenciales de API, entre otros.
      Alternativamente,
      a pesar de que algunos valores
      pueden ser password=123
      o aws.secret_key=prueba,
      estos revelan la mala práctica
      de almacenar información sensible
      en el repositorio sin cifrar,
      y tarde o temprano pueden ser reemplazados
      por valores realmente sensibles.
    impact: >
      Obtener información sensible o secretos privados.
    recommendation: >
      - Eliminar la información sensible
      quemada en el código fuente.

      - Cambiar las credenciales de acceso
      que se vieron comprometidas.

      - Purgar el historial de git
      de la información sensible afectada.

      - Cargar los datos sensibles
      desde fuentes seguras como:
      servicios de bóveda de claves,
      archivos de configuración
      que estén debidamente cifrados
      o variables de entorno administrativas.
    threat: Atacante anónimo con acceso al código fuente desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Sensitive access keys and passwords can be seen as plain text in the source code
      ```yaml
      azon.aws.accesskey = AKIA0000000000000000
      sonar.password     = 123
      ```
      An example of an insecure Dockerfile configuration
      ```yaml
      version: "3.9"  # optional since v1.27.0
      services:
        web:
          build: .
          ports:
            - "5000:5000"
          volumes:
            - .:/code
            - logvolume01:/var/log
          links:
            - redis
          environment:
          - DEBUG=${VAR}
          - API_KEY='123'
          - API_KEY
          - API_KEY_CLOUD_CLIENT_SECRET=${APIKEY_CLIENT_SECRET}
        redis:
          image: redis
          environment:
          - API_NAME=name1
        db:
          image: "postgres:${POSTGRES_VERSION}"
          environment:
          - API_PASSWORD=pass
      volumes:
        logvolume01: {}
      ```
    compliant: |
      Sensitive information should be handled by some form of secrets encryption service
      ```yaml
      azon.aws.accesskey = ${aws_access_key}
      sonar.password     = ENC(something-base64-encoded-but-encrypted)
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['145', '156', '266']
  metadata:
    en:
      details: |
        ### Why

        When secret credentials are compromised,
        we always generate a vulnerability report
        either the credentials are mocks,
        or are functional only in specific scenarios
        such as local environments.
        The risk of this scenario is usually considered in the severity tab.
        For local environment credentials the risk is low but not zero.

        Hence to solve this vulnerabilty
        we recommend to remove the credentials from the source code,
        change the compromised credentials
        and ideally remove the credentials from the git log.
        In some cases the last recommendation cannot be applied
        to avoid traceability issues.
        If that's the case,
        in addition to removing the credentials from the code,
        we require a customer confirmation
        that the credentials were changed to close the vulnerability.
'010':
  en:
    title: Stored cross-site scripting (XSS)
    description: >
      It is possible to persistently
      inject JavaScript code
      into the application fields.
      This could allow an attacker
      to compromise the session
      of any user who enters the platform
      or to distribute malicious software.
    impact: Inject malicious JavaScript code persistently.
    recommendation: >
      Filter the information that receives
      and sends the application using white lists.
    threat: Authorized attacker from the Internet.
  es:
    title: Stored cross-site scripting (XSS)
    description: >
      Los campos de la aplicación
      permiten inyectar código
      de forma persistente para que posteriormente
      cualquier usuario que ingrese
      a la plataforma sea afectado,
      permitiendo el robo de información
      o la distribución de software malicioso.
    impact: Inyectar código JavaScript malicioso de forma persistente
    recommendation: >
      Filtrar la información que recibe
      y envía la aplicación
      por medio de listas blancas.
    threat: Atacante autorizado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are some clases in the applicatin that do not have any validation for the inputs
      ```java
      class ContactForm{
        public function configure(InputsMeta $inputs){
          addWidgets(
            new sfWidgetFormInput($inputs->name),
            new sfWidgetFormInput($inputs->email),
            new sfWidgetFormSelect($inputs->subject),
            new sfWidgetFormTextarea($inputs->message)
          );
        }
      }
      ```
    compliant: |
      The application defines parameters and limitations for input information.
      ```java
      class ContactController {
          /**
          * @input("name", type = "string", singleLine = true, required = false)
          * @input("email", type = "email")
          * @input("subject", type = "string", alternatives = ['Subject A', 'Subject B', 'Subject C'])
          * @input("message", type = "string", range = [4,])
          */
          public function post(Inputs $inputs){
            //Validates inputs and throw error when they are not included in the allowed and pre defined lists values
          }
      }

      class ContactForm extends sfFormX {
        public function configure(InputsMeta $inputs){
          //Bind the form to the input list of the @controller.@method
          //throws error when the @controller.@method.@input is not defined for a widget
          $this->addWidgets(
            new sfWidgetFormInput($inputs->name),
            new sfWidgetFormInput($inputs->email),
            new sfWidgetFormSelect($inputs->subject),
            new sfWidgetFormTextarea($inputs->message)
          );
          $this->widgetSchema->setNameFormat('contact[%s]');
        }
      }

      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: R
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['029', '173']
  metadata:
    en:
      details: __empty__
'011':
  en:
    title: Use of software with known vulnerabilities
    description: >
      The system uses the version
      of a software or dependency
      with known vulnerabilities.
    impact: >
      Exploit found vulnerabilities
      in the affected components.
    recommendation: >
      Update the affected software
      to the versions recommended
      by the vendor.
    threat: Authenticated attacker from the Internet.
  es:
    title: Use of software with known vulnerabilities
    description: >
      El sistema usa la versión
      de un software o dependencia
      con vulnerabilidades conocidas.
    impact: >
      Explotar vulnerabilidades encontradas
      en los componentes afectados.
    recommendation: >
      Actualizar el software afectado
      a las versiones recomendadas
      por el fabricante.
    threat: Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Example importing dependencies with known vulnerabilities
      ```json
      {
        "name": "test",
        "version": "1.0.0",
        "description": "nothing",
        "main": "index.js",
        "author": "Luis Saavedra",
        "license": "MIT",
        "private": false,
        "dependencies": {
          "@angular/core": "^13.3.3",
          "cloudron-sysadmin": "1.0.0",
          "script-manager": "0.8.6",
          "slug": "0.9.0"
        },
        "devDependencies": {
          "xmldom": "0.4.0"
        }
      }
      ```
      ```json
      dependencies {
        compile "io.springfox:springfox-swagger-ui:2.6.1"
        compile("io.springfox:springfox-swagger-ui")
        compile(group: 'javax.mail', name: 'mail')
        compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.2'
        implementation group: 'org.json', name: 'json', version: '20160810'
        implementation(group: 'javax.mail', name: 'mail', version: '1.4')
      }
      ```
      Examples using software with known vulnerabilities
      ```c {3,7,15}
      using System;
      class ExampleClass{
        public void ExampleMethod(){
          //Is the URI is tainted, it may lead to parsing of a malicious XML schema
          XmlSchemaCollection xsc = new XmlSchemaCollection();
          xsc.Add("urn: bookstore - schema", "books.xsd");
        }
      }
      ```
      ```c {3,7,15}
      using System;
      using System;
      using System.Xml;
      using System.Xml.XPath;
      using System.Xml.Xsl;

      namespace TestForXslTransform{
        class Program{
          static void Main(string[] args){
            XslTransform xslt = new XslTransform();
            xslt.Load("https://server/favorite.xsl");
            XPathDocument mydata = new XPathDocument("inputdata.xml");
            XmlWriter writer = new XmlTextWriter(Console.Out);
            xslt.Transform(mydata, null, writer, null);
          }
        }
      }
      ```
    compliant: |
      Search for known vulnerabilities of any dependencies used on the code, replace them for safer alternatives
      ```json
      {
        "name": "test",
        "version": "1.0.0",
        "description": "nothing",
        "main": "index.js",
        "author": "Luis Saavedra",
        "license": "MIT",
        "private": false,
        "dependencies": {
          "@angular/core": "^13.3.3",
          "cloudron-sysadmin": "1.0.0",
        },
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['262']
  metadata:
    en:
      details: __empty__
'012':
  en:
    title: SQL injection - Java Persistence API
    description: >
      Dynamic SQL statements are generated
      without the required data validation
      and without using parameterized statements
      or stored procedures.
      When using LIKE-conditions with values
      that are coming from a not secure source
      in the Java Persistence API,
      the values should be sanitized
      so they can't contain any wildcards
      and thereby allow attackers
      to select more data
      than they should be able to.
      For this purpose
      the escape(String) method is available.
    impact: >
      Extract sensitive information from the Database.
    recommendation: >
      Perform queries to the database
      through sentences
      or parameterized procedures.
      Alternatively use escape(String)
      built-in function.
    threat: Authenticated attacker from the Internet.
  es:
    title: SQL injection - Java Persistence API
    description: >
      Se generan sentencias SQL dinámicas
      sin la validación requerida de datos
      y sin utilizar sentencias parametrizadas
      o procedimientos almacenados.
      Cuando se utilizan condiciones LIKE
      con valores que provienen
      de una fuente no segura
      en la API de persistencia de Java,
      los valores deben sanitizarse
      para que no contengan comodines
      y, por lo tanto,
      permitan a los atacantes
      seleccionar más datos de lo debido.
      Para este propósito,
      se puede usar el método escape(String).
    impact: >
      Extraer información sensible de la base de datos.
    recommendation: >
      Realizar las consultas a la base de datos
      por medio de sentencias
      o procedimientos parametrizados,
      o alternativamente usar
      la función escape(String) del framework.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application performsa query statement without validating input data
      ```java
      import org.skife.jdbi.v2.sqlobject.SqlQuery;
      import org.springframework.data.jpa.repository.JpaRepository;
      import org.springframework.data.jpa.repository.Query;
      import java.util.List;

      public interface ParametersJpaRepository extends JpaRepository<Parameter, String> {
        // Unsafe LIKE statement injection
        @SqlQuery("select u from User u where u.lastname like %:#{[0]}%")
        List<User> findByLastnameWithSpelExpression(@Param("lastname") String lastname);
      }
      ```
    compliant: |
      The query statements are performed in a parameterized way, validating input data with at least a escape() call
      ```java
      import org.skife.jdbi.v2.sqlobject.SqlQuery;
      import org.springframework.data.jpa.repository.JpaRepository;
      import org.springframework.data.jpa.repository.Query;

      import java.util.List;
      public interface ParametersJpaRepository extends JpaRepository<Parameter, String> {
        /* Secure */
        @Query("select u from User u where u.firstname like %?#{escape([0])}% escape ?#{escapeCharacter()}")
        List<User> findContainingEscaped(String namePart);
      }
      ```
  remediation_time: '10'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'013':
  en:
    title: Insecure object reference
    description: >
      The systems authorization mechanism
      does not prevent one user
      from accessing another users data
      by modifying the key value that identifies it.
    impact: Obtain, modify or delete information from other users.
    recommendation: >
      - Validate that unprivileged users can access
      and modify only their own information.

      - Handle the user operations using
      session objects.
    threat: >
      Authenticated user from the Internet.
  es:
    title: Insecure object reference
    description: >
      El sistema permite saltar mecanismos de autenticación
      y modificar información de otros usuarios
      al alterar los identificadores únicos que distinguen a cada usuario.
    impact: Obtener, modificar o eliminar información de otros usuarios.
    recommendation: >
      - Validar que los usuarios sin privilegios solo puedan acceder
      y modificar su propia información.

      - Manejar las operaciones de los usuarios
      utilizando objetos de sesión.
    threat: >
      Usuario autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The roles defined have excessive privileges which could be easily exploited by an attacker
      ```javascript
      const roles = {
        ADMIN: "ADMIN",
        EDITOR: "EDITOR",
        GUEST: "GUEST"
      };

      mappings.set(actions.MODIFY_FILE, [roles.ADMIN, roles.EDITOR, roles.GUEST]);
      ```
    compliant: |
      Correctly set editing policies according to roles
      ```javascript
      const roles = {
        ADMIN: "ADMIN",
        EDITOR: "EDITOR",
        GUEST: "GUEST"
      };

      mappings.set(actions.MODIFY_FILE, [roles.ADMIN, roles.EDITOR]);
      mappings.set(actions.VIEW_FILE, [roles.ADMIN, roles.EDITOR, roles.GUEST]);
      mappings.set(actions.DELETE_FILE, [roles.ADMIN]);
      mappings.set(actions.CREATE_FILE, [roles.ADMIN, roles.EDITOR]);
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'014':
  en:
    title: Insecure functionality
    description: >
      A functionality that is part of the system
      can be leveraged by an attacker
      in order to negatively impact it.
    impact: >
      Change the password after the
      security code has been compromised.
    recommendation: >
      Validate on the server side that the
      answers to the questions are correct.
    threat: >
      Any customer of the organization
      authorized from the Internet.
  es:
    title: Insecure functionality
    description: >
      Una funcionalidad que es parte del sistema
      puede ser ejecutada por un atacante
      con el fin de impactarlo negativamente.
    impact: >
      Cambiar la contraseña una vez se haya
      comprometido el código de seguridad.
    recommendation: >
      Validar del lado del servidor que las
      respuestas a las preguntas sean correctas.
    threat: >
      Cualquier cliente de la organización
      autorizado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application allows to change a password only with the plain security code, which could be compromised or easily exploited
      ```php
      <?php
      if(isset($_POST['Submit'])){

        $answer_1=trim($_POST["CODE"]);

        if (confirm_code($CODE)) {
          echo 'Password has been changed!';
        } else {
          echo 'Invalid answer';
        }
      }
      ?>
      ```
    compliant: |
      Use some form of extra confirmation when changing passwords, for example, a hashed security code
      ```php
      <?php
      if(isset($_POST['Submit'])){

        $answer_1=trim($_POST["answer_1"]);

        if (answer_verify($answer_1, $hash)) {
          echo 'Password has been changed!';
        } else {
          echo 'Invalid answer';
        }
      }
      ?>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'015':
  en:
    title: Insecure authentication method - Basic
    description: >
      The server uses Basic authentication
      over an insecure channel.
    impact: Gather base 64 coded credentials.
    recommendation: >
      Use stronger authentication mechanisms
      like Bearer and OAuth.
    threat: >
      Unauthorized attacker from adjacent network
      performing a Sniffing attack.
  es:
    title: Insecure authentication method - Basic
    description: >
      El servidor usa autenticación de tipo Basic
      sobre un canal inseguro.
    impact: Obtener credenciales codificadas en base 64.
    recommendation: >
      Usar mecanismos de autenticación fuertes
      como Bearer y OAuth.
    threat: >
      Atacante sin autorización desde red adyacente
      ejecutando un ataque de Sniffing.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      Examples with virtual machines without strong auth mechanism defined
      ```terraform
      resource "azurerm_linux_virtual_machine" "vulnerable" {
        name           = "example-machine"
        size           = "Standard_F2"
        admin_username = "adminuser"
      }
      ```
      ```terraform
      resource "azurerm_virtual_machine" "vulnerable" {
        name                  = "${var.prefix}-vm"
        location              = azurerm_resource_group.main.location
        resource_group_name   = azurerm_resource_group.main.name
        network_interface_ids = [azurerm_network_interface.main.id]
        vm_size               = "Standard_DS1_v2"

        os_profile_linux_config {
          disable_password_authentication = false
        }
      }
      ```
    compliant: |
      Implement a SSH key authentication for the sensitive resource
      ```terraform
      resource "azurerm_linux_virtual_machine" "not_vulnerable" {
        name           = "example-machine"
        size           = "Standard_F2"
        admin_username = "adminuser"

        admin_ssh_key {
          username   = "adminuser"
          public_key = file("~/.ssh/id_rsa.pub")
        }
      }
      ```
      ```terraform
      resource "azurerm_virtual_machine" "not_vulnerable" {
        name                  = "${var.prefix}-vm"
        location              = azurerm_resource_group.main.location
        resource_group_name   = azurerm_resource_group.main.name
        network_interface_ids = [azurerm_network_interface.main.id]
        vm_size               = "Standard_DS1_v2"

        os_profile_linux_config {
          disable_password_authentication = false
          ssh_keys                        = ["${var.ssh_keys}"]
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['030', '228', '319']
  metadata:
    en:
      details: __empty__
'016':
  en:
    title: Insecure encryption algorithm - SSL/TLS
    description: >
      The server allows
      the usage of insecure TLS protocol versions.
    impact: >
      Compromise sensitive information
      that travels between client and server.
    recommendation: >
      Update TLS protocol to version
      TLSv1.2 or TLSv1.3 if possible.
    threat: >
      Unauthorized attacker from adjacent network.
  es:
    title: Insecure encryption algorithm - SSL/TLS
    description: >
      El servidor permite
      utilizar versiones inseguras del protocolo TLS.
    impact: >
      Comprometer la información sensible
      que viaja entre cliente y servidor.
    recommendation: >
      Actualizar el protocolo TLS a la versión
      TLSv1.2 o TLSv1.3 de ser posible.
    threat: >
      Atacante sin autorización desde red adyacente.
  category: Information Collection
  examples:
    non_compliant: |
      #### Examples with insecure TLS protocol configuration on resources
      Using IaC on terraform and other options
      ```terraform
      resource "azurerm_storage_account" "insecure_example" {
        name                     = "storageaccountname"
        resource_group_name      = azurerm_resource_group.example.name
        location                 = azurerm_resource_group.example.location
        account_tier             = "Standard"
        account_replication_type = "GRS"
        min_tls_version          = "TLS1_0"

        tags = {
          environment = "staging"
        }
      }
      ```
      ```yaml
      Resources:
        distribution1:
          Type: AWS::CloudFront::Distribution
          Properties:
            DistributionConfig:
              Enabled: 'true'
              DefaultCacheBehavior:
                TargetOriginId: def1
                ForwardedValues:
                  QueryString: 'false'
                  Cookies:
                    Forward: all
              Origins:
              - CustomOriginConfig:
                  OriginSSLProtocols:
                  - SSLv3
                  - TLSv1
                  - TLSv1.1
                  - TLSv1.2
      ```
      Using the AWS CLI with the following comands
      ```
      $ aws cloudfront get-distribution --id {distribution_id}
            --query 'Distribution.DistributionConfig.Origins.Items[*].CustomOriginConfig'
      ```
      The configuration metadata is obtained. An insecure configuration would show the following code:
      ```
      [
        {
          "OriginProtocolPolicy": "https-only",
          "HTTPPort": 80,
          "OriginSslProtocols": {
            "Items": [
              "SSLv3",
              "TLSv1",
              "TLSv1.1",
              "TLSv1.2"
            ],
            "Quantity": 4
          },
          "HTTPSPort": 443
        }
      ]
      ```
      #### Examples on source code
      Using method to generate a Shared Access Signature (SAS) with specifying protocols as HttpsOrHttp
      ```c {3,7,15}
      using System;
      using Microsoft.WindowsAzure.Storage;
      using Microsoft.WindowsAzure.Storage.File;

      class ExampleClass{
        public void ExampleMethod(SharedAccessFilePolicy policy, SharedAccessFileHeaders headers, string groupPolicyIdentifier, IPAddressOrRange ipAddressOrRange){
          CloudFile cloudFile = new CloudFile(null);
          SharedAccessProtocol protocols = SharedAccessProtocol.HttpsOrHttp;
          cloudFile.GetSharedAccessSignature(policy, headers, groupPolicyIdentifier, protocols, ipAddressOrRange);
        }
      }
      ```
      Example with service point manager disabled
      ```c {3,7,15}
      using System;
      public class ExampleClass{
        public void ExampleMethod(){
          AppContext.SetSwitch("Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols", true);
        }
      }
      ```
      Example using http client without revocation list
      ```c {3,7,15}
      using System.Net.Http;
      class ExampleClass{
        void ExampleMethod(){
          WinHttpHandler winHttpHandler = new WinHttpHandler();
          winHttpHandler.CheckCertificateRevocationList = false;
          HttpClient httpClient = new HttpClient(winHttpHandler);
        }
      }
      ```
      Example using weak security protocols
      ```c {3,7,15}
      using System;
      namespace Example{
        public class InvokeService{
          public InvokeService(){
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls;
          }
        }
      }
      ```
    compliant: |
      Implement a secure TLS protocol version in the resources
      ```terraform
      resource "azurerm_storage_account" "secure_example" {
        name                     = "storageaccountname"
        resource_group_name      = azurerm_resource_group.example.name
        location                 = azurerm_resource_group.example.location
        account_tier             = "Standard"
        account_replication_type = "GRS"
        min_tls_version          = "TLS1_3"

        tags = {
          environment = "staging"
        }
      }
      ```
  remediation_time: '100'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['148', '149', '150', '181', '336']
  metadata:
    en:
      details: |
        SSL (Secure Sockets Layer) and its successor,
        TLS (Transport Layer Security),
        are protocols for establishing authenticated
        and encrypted links
        between networked computers.

        The most common and well-known use of SSL/TLS
        is secure web browsing via the HTTPS protocol.
        Users visiting an HTTPS website
        can be assured of:

        - **Authenticity**,
        The server presenting the certificate
        is in possession of the private key
        that matches the public key
        in the certificate.

        - **Integrity**,
        Documents signed by the certificate
        (e.g. web pages)
        have not been altered in transit
        by a man in the middle.

        - **Encryption**,
        Communications between the client
        and server are encrypted.

        Because of these properties,
        SSL/TLS and HTTPS allow users
        to securely transmit
        confidential information
        such as credit card numbers,
        social security numbers,
        and login credentials over the internet,
        and be sure that the website
        they are sending them to is authentic.

        With an insecure HTTP website,
        these data are sent as plain text,
        readily available to any eavesdropper
        with access to the data stream.
        Furthermore,
        users of these unprotected websites
        have no trusted third-party assurance
        that the website they are visiting
        is what it claims to be.
'017':
  en:
    title: Sensitive information sent insecurely
    description: >
      The system sends sensitive information
      through a channel or method
      which does not guarantee its confidentiality
      or integrity.
    impact: >
      Compromise sensitive information
      traveling in a insecure channel
    recommendation: >
      Guarantee that credentials be sent
      through a more secure channel,
      such as session variables
      or using HTTP POST method.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Sensitive information sent insecurely
    description: >
      El sistema envía información sensible
      a través de un canal o método
      que no garantiza su confidencialidad
      o integridad.
    impact: >
      Comprometer información sensible
      que viaje por un canal inseguro
    recommendation: >
      Garantizar que las credenciales
      sean enviadas por un canal más seguro
      como variables de sesión
      o por el método HTTP POST.
    threat: >
      Atacante anónimo desde una red adyacente.
  category: Information Collection
  examples:
    non_compliant: |
      Example using an insecurely generated decode for the application
      ```c {3,7,15}
      using System;
      class jwtbuild {
        public static void Main() {
          IJwtDecoder decoder = new JwtDecoder(serializer, validator, urlEncoder, algorithm);
          var insecure_decode = decoder.Decode(token, secret, verify: false);
          //Code to use the insecure decode to send information
        }
      }
      ```
    compliant: |
      The decoder is securely configured with verification enabled
      ```c {3,7,15}
      using System;
      class jwtbuild {
        public static void Main() {
          IJwtDecoder decoder = new JwtDecoder(serializer, validator, urlEncoder, algorithm);
          var secure_decode = decoder.Decode(token, secret, verify: true);
          //Code that uses the secure decode to send information
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['032', '181']
  metadata:
    en:
      details: __empty__
'018':
  en:
    title: Improper authentication for shared folders
    description: >
      The folders that are shared over the network
      do not require any authentication
      to be accessed.
    impact: Access to sensitive information stored in folders.
    recommendation: >
      Limit the access to shared folders
      only to authorized users
      with their credentials.
    threat: Anonymous attacker from local network.
  es:
    title: Improper authentication for shared folders
    description: >
      Las carpetas de red pueden ser accedidas
      sin ningún tipo de credencial
      permitiendo el acceso
      a información confidencial.
    impact: Acceder a información sensible almacenada en carpetas.
    recommendation: >
      Limitar el acceso a carpetas compartidas
      solo a personal autorizado
      y con las credenciales respectivas.
    threat: Atacante anónimo desde red local.
  category: Access Subversion
  examples:
    non_compliant: |
      A shared folder that does not require authentication credentials
      ```java
      acl "https-<instance>";
      authenticate (user,group) {
      database = "default";
      method = "basic";
      };
      allow (all)
      ```
    compliant: |
      ```java
      acl "https-<instance>";
      authenticate (user,group) {
      database = "default";
      method = "basic";
      };
      deny absolute (all) user != "UserA";
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['229', '264']
  metadata:
    en:
      details: __empty__
'019':
  en:
    title: Administrative credentials stored in cache memory
    description: >
      It is possible to retrieve
      administrative credentials
      from the systems cache memory.
    impact: Obtain functional credetials for privileged users.
    recommendation: >
      Avoid the store of sensitive information
      in temporary files or cache.
    threat: Authenticated attacker from local network.
  es:
    title: Administrative credentials stored in cache memory
    description: >
      Es posible extraer
      credenciales administrativas
      desde la caché de los procesos.
    impact: Obtener credenciales funcionales de usuarios privilegiados.
    recommendation: >
      Evitar almacenar información sensible
      en archivos temporales o en caché.
    threat: Atacante autenticado desde la red local.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses functionalities like local storage to save sensitive data like a user password
      ```javascript
      localStorage.setItem('password',user_password);
      ```
    compliant: |
      Use secure verification methods like correctly set up cookies for session storage
      ```javascript
      // Use cookies to avoid storing sensitive information
      function setCookie(cname, cvalue, exdays) {
        const d = new Date();
        d.setTime(d.getTime() + (exdays*24*60*60*1000));
        let expires = "expires="+ d.toUTCString();
        document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
      }

      // Get cookie to restore session credentials
      function restoreSession(cname){
        userCookie = getcookies(cname);
        if(userCookie){
          restoreSession(user);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['177']
  metadata:
    en:
      details: __empty__
'020':
  en:
    title: Non-encrypted confidential information
    description: >
      Confidential information is stored in plain text
      allowing an attacker to view it
      without any type of encryption.
    impact: >
      Obtain sensitive information
      that may compromise system resources.
    recommendation: >
      Encrypt all sensitive information
      that is transported or stored
      within the application
      according to the organizations policies.
    threat: >
      Anonymous attacker with access
      to the source-code from the Internet.
  es:
    title: Non-encrypted confidential information
    description: >
      La información confidencial
      es almacenada en texto plano
      permitiendo a un atacante visualizarla
      sin ningún tipo de cifrado.
    impact: >
      Obtener información sensible
      que puede comprometer recursos del sistema.
    recommendation: >
      Cifrar toda información sensible
      que se transporte o se guarde
      dentro la aplicación
      de acuerdo a las políticas de la organización.
    threat: >
      Atacante anónimo con acceso al código fuente
      desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application saves sensitive data as plain text
      ```c {3,7,15}
      using Microsoft.AspNetCore.Mvc;
      using Microsoft.EntityFrameworkCore;
      using WebApplication1.Controllers;

      String ACCESS_KEY = "my_insecure_key";

      namespace WebApplicationDotNetCore.Controllers{
        public class Query{
          public IActionResult Authenticate(UserAccountContext context, string user){
            string query = "SELECT * FROM Users WHERE Username = user AND Key = ACCESS_KEY;
          }
        }
      }
      ```
    compliant: |
      Credentials should be stored as encrypted values
      ```c {3,7,15}
      using Microsoft.AspNetCore.Mvc;
      using Microsoft.EntityFrameworkCore;
      using WebApplication1.Controllers;

      namespace WebApplicationDotNetCore.Controllers{
        String access_key = "encrypted_key";
        public class Query{
          public IActionResult Authenticate(UserAccountContext context, string user){
            string query = "SELECT * FROM Users WHERE Username = user AND Key = access_key;
          }
        }
      }
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: |
        ### Why

        When secret credentials are compromised,
        we always generate a vulnerability report
        either the credentials are mocks,
        or are functional only in specific scenarios
        such as local environments.
        The risk of this scenario is usually considered in the severity tab.
        For local environment credentials the risk is low but not zero.

        Hence to solve this vulnerabilty
        we recommend to remove the credentials from the source code,
        change the compromised credentials
        and ideally remove the credentials from the git log.
        In some cases the last recommendation cannot be applied
        to avoid traceability issues.
        If that's the case,
        in addition to removing the credentials from the code,
        we require a customer confirmation
        that the credentials were changed to close the vulnerability.
'021':
  en:
    title: XPath injection
    description: >
      Dynamic XPath statements are generated
      without the required data validation.
    impact: >
      Inject queries to obtain
      sensitive information without authorization.
    recommendation: >
      Perform input data validations
      on the server-side
      to avoid common injection attacks.
    threat: Authenticated attacker from the Internet.
  es:
    title: XPath injection
    description: >
      Se generan sentencias XPath dinámicas
      sin la validación requerida de datos.
    impact: >
      Inyectar queries
      para obtener información sensible
      sin autorización.
    recommendation: >
      Realizar la validaciones
      de datos de entrada
      en el lado del servidor
      para evitar los ataques
      mas comunes de inyección.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      ```c {3,7,15}
      public void bad() throws Throwable{
        String data = "";
        /* Code not shown: Read data using an outbound tcp connection */

        if (data != null){
          /* assume username||password as source */
          String [] tokens = data.split("||");
          if (tokens.length < 2){
            return;
          }
          String username = tokens[0];
          String password = tokens[1];
          /* build xpath */
          XPath xPath = XPathFactory.newInstance().newXPath();
          InputSource inputXml = new InputSource(xmlFile);
          /* INCIDENTAL: CWE180 Incorrect Behavior Order: Validate Before Canonicalize
          *     The user input should be canonicalized before validation. */
          /* POTENTIAL FLAW: user input is used without validating */
          String query = "//users/user[name/text()='" + username +
                        "' and pass/text()='" + password + "']" +
                        "/secret/text()";
          String secret = (String)xPath.evaluate(query, inputXml, XPathConstants.STRING);
        }
      }
      ```
    compliant: |
      ```c {3,7,15}
      using System;
      using System.Xml.XPath;
      public partial class WebForm : System.Web.UI.Page{
        protected void Page_Load(){
          string operation = Request.Form["operation"];
          XPathNavigator AuthorizedOperations  = new XPathNavigator();
          // Must report
          XPathNavigator node = AuthorizedOperations.SelectSingleNode(operation);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'022':
  en:
    title: Use of an insecure channel
    description: >
      The system transmits information
      through a channel without encryption.
    impact: >
      Capture confidential information
      and credentials in plain text.
    recommendation: >
      Deploy the application
      over an encrypted communication channel,
      for instance, HTTPS with TLS.
    threat: >
      Anonymous attacker on adjacent network
      performing a man-in-the-middle.
  es:
    title: Use of an insecure channel
    description: >
      La información de los clientes
      es transmitida por un canal que no usa cifrado.
    impact: >
      Capturar información confidencial
      y credenciales en texto plano.
    recommendation: >
      Desplegar la aplicación
      sobre un canal de comunicación cifrado,
      por ejemplo, HTTPS utilizando TLS.
    threat: >
      Atacante anónimo en red adyacente
      ejecutando un ataque de hombre en el medio.
  category: Information Collection
  examples:
    non_compliant: |
      Some insecure channels are used to deploy the application
      ```kotlin
      import org.apache.commons.net.ftp.FTPClient
      import org.apache.commons.net.smtp.SMTPClient
      import org.apache.commons.net.telnet.TelnetClient

      fun main() {
        val telnet = TelnetClient()

        val ftpClient = FTPClient()
        val ftpsClient = FTPSClient()

        val smtpClient = SMTPClient()
        val smtpsClient = SMTPSClient()
      }
      ```
    compliant: |
      Use secure channels to deploy the application
      ```kotlin
      import org.apache.commons.net.ftp.FTPSClient
      import org.apache.commons.net.smtp.SMTPSClient

      fun main() {
        val ftpClient = FTPClient()
        val smtpsClient = SMTPSClient()
        val spec2: ConnectionSpec = ConnectionSpec.Builder(
          ConnectionSpec.MODERN_TLS
        )
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'023':
  en:
    title: Uncontrolled external site redirect - Host Header Injection
    description: >
      The server processes requests
      with the Host header set
      and redirects clients
      to any destination.
    impact: >
      - Enumerate the internal network
      via trial and error.

      - Perform a subset of Server Side
      Request Forgery attacks.
    recommendation: >
      Configure server
      to prevent third party
      hosts redirection.
    threat: Unauthorized attacker from internet network.
  es:
    title: Uncontrolled external site redirect - Host Header Injection
    description: >
      El servidor procesa peticiones
      con la cabecera Host configurada
      y redirige clientes a cualquier destino.
    impact: >
      - Enumerar la red interna
      a través de prueba y error.

      - Ejecutar un subconjunto de ataques
      de Server Side Request Forgery.
    recommendation: >
      Configurar el servidor
      para prevenir redirecciones a hosts de terceros.
    threat: Atacante sin autorización desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The server is wrongly configured to accept requests redirecting to other host
      ```http
      router.post("/", function (req, res, next) {
        ...code to handle the response not shown
        //UNSAFE: Redirecting users to third party website
        res.redirect("www.vulnerablehost.com")
      });

      module.exports = router;
      ```
    compliant: |
      The server should validate and prevent third party redirections. For example, by setting the correct http headers
      ```http
      GET http://localhost/
      Validate HOST from ALLOWED_HOSTS
      ```
  remediation_time: '10'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['173', '324']
  metadata:
    en:
      details: __empty__
'024':
  en:
    title: Unrestricted access between network segments - AWS
    description: >
      The infrastructure definition
      for network segments
      in the AWS context
      is too permissive.
    impact: >
      - Expose resources, processes and sensitive information
      that could be compromised.

      - Accept incoming or outcoming connections
      that should be restricted by design
    recommendation: >
      Limit network segments, ports, IP addresses,
      network protocols, and administrative services
      only to the required users.
    threat: Anonymous attacker from Internet.
  es:
    title: Unrestricted access between network segments - AWS
    description: >
      La definición de la infraestructura
      para la segmentación de redes
      en el contexto de AWS
      es demasiado permisiva.
    impact: >
      - Exponer recursos,
      procesos e información sensible
      que podrían ser comprometidos.

      - Admitir conexiones entrantes o salientes
      que deberían estar restringidas por diseño
    recommendation: >
      Limitar los segmentos de red,
      puertos, direcciones IP, protocolos de red,
      y servicios administrativos
      siguiendo el principio de mínimo privilegio.
    threat: Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Some example of resources configured  with large range number of ports available
      ```terraform
      resource "aws_security_group_rule" "vulnerable" {
        security_group_id = "sg-123456"
        type              = "ingress"
        from_port         = 0
        to_port           = 65535
        protocol          = "-1"
        cidr_blocks       = "0.0.0.0/0"
        prefix_list_ids   = ["pl-12c4e678"]
      }
      ```
      ```yaml
      Resources:
        InstanceSecurityGroup:
          Type: AWS::EC2::SecurityGroup
          Properties:
              GroupDescription: Allow http to client host
              VpcId:
                Ref: myVPC
              SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 0
                ToPort: 65535
                CidrIp: 0.0.0.0/0
              SecurityGroupEgress:
              - IpProtocol: tcp
                FromPort: 0
                ToPort: 65535
                CidrIp: 0.0.0.1/0
        OutboundRule:
          Type: AWS::EC2::SecurityGroupEgress
          Properties:
            IpProtocol: tcp
            FromPort: 0
            ToPort: 65535
            CidrIp: 0.0.0.0/0
            DestinationSecurityGroupId:
              Fn::GetAtt:
              - TargetSG
              - GroupId
            GroupId:
              Fn::GetAtt:
              - SourceSG
              - GroupId
        InboundRule:
          Type: AWS::EC2::SecurityGroupIngress
          Properties:
            IpProtocol: tcp
            FromPort: 0
            ToPort: 56
            SourceSecurityGroupId:
              Fn::GetAtt:
              - SourceSG
              - GroupId
            GroupId:
              Fn::GetAtt:
              - TargetSG
              - GroupId
      ```
      Example with no profile name defined for the EC2 service
      ```terraform
      resource "aws_instance" "web" {
        ami           = data.aws_ami.ubuntu.id
        instance_type = "t3.micro"

        tags = {
          Name = "HelloWorld"
        }
      }
      ```
      Using the AWS CLI with the following comands
      ```
      $ aws ec2 describe-security-groups
            --region us-east-1
            --filters Name=ip-permission.from-port,Values=53 Name=ip-permission.to-port,Values=53 Name=ip-permission.ipv6-cidr,Values='::/0'
            --query 'SecurityGroups[*].{Name:GroupName}'
      ```
      Returns any group that has an insecure DNS configuration
      ```
      [
        {
          "Name": "DNSServerSecurityGroup"
        }
      ]
      ```
      Similarly, the following command returns any group with unrestricted FTP access
      ```
      $ aws ec2 describe-security-groups
            --region us-east-1
            --filters Name=ip-permission.from-port,Values=20,21 Name=ip-permission.to-port,Values=20,21 Name=ip-permission.ipv6-cidr,Values='::/0'
            --query 'SecurityGroups[*].{Name:GroupName}'
      ```
      The following command checks if a security group has unrestricted outbound access on all ports
      ```
      $ aws ec2 describe-security-groups
            --region us-east-1
            --group-ids {group_id}
            --query 'SecurityGroups[*].IpPermissionsEgress[]'
      ```
    compliant: |
      Define a specific range of ports for the resource
      ```terraform
      resource "aws_security_group_rule" "not_vulnerable" {
        security_group_id = "sg-123456"
        type              = "ingress"
        from_port         = 443
        to_port           = 443
        protocol          = "tcp"
        cidr_blocks       = "127.0.0.1/32"
        prefix_list_ids   = ["pl-12c4e678"]
      }
      ```
      ```terraform
      resource "aws_security_group" "not_vulnerable" {
        name        = "allow_tls"
        description = "Allow TLS inbound traffic"
        vpc_id      = "someid"

        ingress {
          from_port   = 0
          to_port     = 8000
          protocol    = "tcp"
          cidr_blocks = "127.0.0.1/32"
        }

        egress {
          from_port       = 8080
          to_port         = 8080
          protocol        = "udp"
          cidr_blocks     = ["172.16.0.0/12"]
          prefix_list_ids = ["pl-12c4e678"]
        }

        tags = {
          method = "aws.terraform.ec2.allows_all_outbound_traffic"
          Name   = "aws.terraform.allows_all_outbound_traffic"
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'025':
  en:
    title: Call interception
    description: >
      It is possible to intercept calls made
      using the VoIP platform
      because the communication is not encrypted.
    impact: Get call information.
    recommendation: >
      Configure the channel
      with TLS or SRTP and TLS,
      or configure a firewall to cipher calls.
    threat: Attacker authenticated from the Internet.
  es:
    title: Call interception
    description: >
      Es posible interceptar las llamadas realizadas
      y recibidas a través de la plataforma VoIP
      debido a que la comunicación no viaja cifrada.
    impact: Obtener información de llamadas.
    recommendation: >
      Configurar el canal con TLS o SRTP
      y TLS o configurar un firewall
      para cifrar las llamadas.
    threat: Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Insecure resource configuration (No tls)
      ```yaml
      port: 8008
        tls: false
        type: http
        x_forwarded: true
        bind_addresses: ['::1', '127.0.0.1']
        resources:
          - names: [client, federation]
            compress: false
      ```
    compliant: |
      Modify resource configuration with tls
      ```yaml
      port: 8008
        tls: true
        type: https
        x_forwarded: true
        bind_addresses: ['::1', '127.0.0.1']
        resources:
          - names: [client, federation]
            compress: false
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'026':
  en:
    title: User enumeration
    description: >
      The system provides different responses
      for existent and non-existent users,
      allowing an attacker to enumerate valid users
      via error messages, response times, frames count,
      among other techniques.
    impact: Obtain valid application usernames.
    recommendation: >
      Set the same server response for existent
      and non-existent users.
    threat: Anonymous attacker from the Internet.
  es:
    title: User enumeration
    description: >
      El sistema proporciona respuestas diferentes
      para usuarios existentes y no existentes,
      permitiendo a un atacante enumerar usuarios válidos
      mediante mensajes de error, tiempos de respuesta,
      conteo de frames u otras técnicas.
    impact: Obtener usuarios válidos de la aplicación.
    recommendation: >
      Implementar las mismas respuestas del servidor
      para usuarios existentes y no existentes.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application sets different response messages that differ based on the user status
      ```javascript
      const logIn = (req, res) => {
        const user = req.body.user;
        const password = req.body.password;
        if (isValidUser(user)) {
          if(isValidCredentials(user, password)){
            //Code to handle log in
            res.redirect("/profile")
          }else{
            //The different message for existing and non existing users allows enumeration
            res.message("Invalid password")
          }
        }else{
          res.message("User does not exist");
        }
      }
      ```
    compliant: |
      The application sends the same response regardless of the credentials used
      ```javascript
      const logIn = (req, res) => {
        const user = req.body.user;
        const password = req.body.password;
        if (isValidUser(user) && isValidCredentials(user, password) ) {
            //Code to handle log in
            res.redirect("/profile")
        }else{
          //Use the same server response in case of invalid login to avoid enumeration
          res.message("Invalid credentials");
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['225']
  metadata:
    en:
      details: __empty__
'027':
  en:
    title: Insecure file upload
    description: >
      The system allows the upload of files
      with two extensions or with unsafe ones,
      such as .html, .php or .exe.
      Furthermore,
      the system does not validate
      whether or not the file
      is free from malicious code.
    impact: Upload malicious files to the server.
    recommendation: >
      - Validate with regular expressions
      that the file has only one extension.

      - Validate with an antivirus software
      that the file does not contain
      any type of malicious code.

      - Validate that Content Type corresponds
      to the files extension
      before upload it to the server.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure file upload
    description: >
      El sistema de carga de archivos
      permite cargar archivos con doble extensión
      y extensiones inseguras
      como (.html, .php, .exe),
      tampoco se valida si el archivo está libre
      de código malicioso o no.
    impact: Cargar archivos maliciosos al servidor.
    recommendation: >
      - Validar con expresiones regulares
      que el archivo corresponda
      con una sola extensión.

      - Validar con un antivirus
      que el archivo no contenga
      ningún tipo de código malicioso.

      - Validar que el Content Type
      corresponda a la extension del archivo
      antes de subirlo al servidor.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application uploads a file without validating data types
      ```javascript
      router.post("/", function (req, res, next) {
        const file = req.body.userFile;
        await uploadFile(file);
        res.send("200");
      });
      ```
    compliant: |
      Validate data types of files. If the file could be edited, validate the contents through some firewall
      ```python
      var uploadcontrol = document.getElementById('<%=FileUpload1.ClientID%>').value;
      def validateFile(str):
          regex = "^.*\.(jpg|JPG|gif|GIF|doc|DOC|pdf|PDF)$"
          p = re.compile(regex)
          if(re.search(p, str)):
            return True
          else:
            return False
      if validateFile(uploadControl):
        uploadFile(file);
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['040', '041']
  metadata:
    en:
      details: __empty__
'028':
  en:
    title: Insecure temporary files
    description: >
      The system uses temporary files
      to store sensitive information.
      Alternatively,
      the system deploys sensitive temporary files
      to the production environment.
    impact: Steal server secrets.
    recommendation: >
      Avoid saving sensitive information
      in server files.
    threat: >
      Authenticated attacker with
      local access to the server.
  es:
    title: Insecure temporary files
    description: >
      El sistema utiliza archivos temporales
      para almacenar información sensibles.
      Alternativamente,
      el sistema despliega
      archivos temporales sensibles
      en ambiente de protección.
    impact: Robar los secretos del servidor.
    recommendation: >
      Evitar guardar información sensible
      en archivos del servidor.
    threat: >
      Atacante autenticado con acceso
      local al servidor.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses temp files to store credentials
      ```java
      import java.io.File;

      public class Test {
          public static void main(String[] args){
            try {
              file = File.createTempFile(credentials, null));
              uploadFile(file)
            } catch (Exception e) {
              ...
            }
          }
      }
      ```
    compliant: |
      Sensitive data should always be stored encrypted and without the use of temporary files
      ```java
      import java.io.File;

      public class Test {
          public static void main(String[] args){
            try {
              encryptedHash = encryptInfo(credentials);
              addUser(user, encryptedHash);
            } catch (Exception e) {
              ...
            }
          }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['036', '177']
  metadata:
    en:
      details: __empty__
'029':
  en:
    title: Inadequate file size control
    description: >
      The system does not perform
      an adequate control
      of the size of the files
      that can be uploaded to the server.
    impact: >
      - Consume server resources and storage
      to upload large files.

      - Lead to denial of service attacks
      if the server storage capacity is overloaded.
    recommendation: >
      Implement controls
      to limit the maximum file size
      that can be uploaded to the server.
    threat: Authenticated attacker on the Internet.
  es:
    title: Inadequate file size control
    description: >
      No existe un control adecuado
      sobre el tamaño de los archivos
      que se pueden subir al servidor.
    impact: >
      - Consumir recursos y almacenamiento del servidor
      para subir archivos de gran tamaño.

      - Conducir a denegaciones de servicio
      si la capacidad de almacenamiento
      del servidor es sobrecargada.
    recommendation: >
      Implementar controles
      para limitar el máximo tamaño
      de archivos permitido.
    threat: Atacante autorizado desde Internet.
  category: System Manipulation
  examples:
    non_compliant: |
      There is no server side validation of file size before uploading it to the server
      ```javascript
      var storage = multer.diskStorage({
        destination: function (req, file, cb) {
          cb(null, "uploads")
        },
        filename: function (req, file, cb) {
          cb(null, file.fieldname + "-" + Date.now()+".jpg")
        }
      })

      var upload = multer({
        storage: storage,
        fileFilter: function (req, file, cb){
          var filetypes = /jpeg|jpg|png/;
          var mimetype = filetypes.test(file.mimetype);
          var extname = filetypes.test(path.extname(file.originalname).toLowerCase());
      }).single("mypic");
      ```
    compliant: |
      The file size is set to a strict limit based on business needs
      ```javascript
      var storage = multer.diskStorage({
        destination: function (req, file, cb) {
          cb(null, "uploads")
        },
        filename: function (req, file, cb) {
          cb(null, file.fieldname + "-" + Date.now()+".jpg")
        }
      })

      // Define the maximum size for uploading
      // picture i.e. 1 MB. it is optional
      const maxSize = 1 * 1000 * 1000;

      var upload = multer({
        storage: storage,
        limits: { fileSize: maxSize },
        fileFilter: function (req, file, cb){
          var filetypes = /jpeg|jpg|png/;
          var mimetype = filetypes.test(file.mimetype);
          var extname = filetypes.test(path.extname(file.originalname).toLowerCase());
      }).single("mypic");
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['039']
  metadata:
    en:
      details: __empty__
'030':
  en:
    title: Sensitive information sent via URL parameters
    description: >
      The system sends
      sensitive information
      via URL parameters using the GET method.
      These parameters are:

      - Stored in clear text
      in the browser history.

      - Sent to external sites
      via the referrer HTTP header.

      - Sent to external sites
      via the search bar if the browser
      interprets the URL as a query.

      - Visible to scripts running on the browser
      that may belong to third-parties.
    impact: Obtain sensitive information from application URLs.
    recommendation: >
      Guarantee that the sessions ID
      are sent through secure methods (POST)
      or obtain the cookies session.
    threat: >
      Anonymous attacker from adjacent network
      performing a sniffing attack.
  es:
    title: Sensitive information sent via URL parameters
    description: >
      La aplicación envía información sensible (Ej: El ID de sesión)
      como parte de los parámetros en el URL
      a través del método GET.
      Estos parámetros:

      - Son almacenados en el historial del navegador
      permitiendo su visualización.

      - Son enviados en la cabecera HTTP referer a otros sitios.

      - Son enviados como petición
      a sitios externos al poner la URL
      en la barra del navegador
      si este lo interpreta como consulta.

      - Son visibles por scripts
      corriendo en la página
      los cuales pueden pertenecer a terceros.
    impact: Obtener información sensible de los enlaces de la aplicación.
    recommendation: >
      Garantizar que los identificadores de sesión
      se envían por métodos seguros (POST)
      u obtener la sesión de las cookies.
    threat: >
      Atacante anónimo desde red adyacente
      ejecutando un ataque de sniffing.
  category: Information Collection
  examples:
    non_compliant: |
      The user Id is sent through the url parameters
      ```javascript
      // Get cookie to restore session credentials
      function restoreSession(cname){
        userCredentials = fetch('myurl/${userId}')
        restoreSession(userCredentials)
      }
      ```
    compliant: |
      The session should be restored using cookies and not other insecure methods
      ```javascript
      // Get cookie to restore session credentials
      function restoreSession(cname){
        userCookie = getcookies(cname);
        if(userCookie){
          restoreSession(user);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['032', '181']
  metadata:
    en:
      details: __empty__
'031':
  en:
    title: Excessive privileges - AWS
    description: >
      The application, a user or a role
      have more privileges than they require.
      This can be leveraged by an attacker
      to execute normally restricted actions
      on a system.
    impact: >
      Execute actions that should be restricted
      to other groups or roles.
    recommendation: >
      Explicitly assign permissions
      to the appropriate groups and roles
      following the principle of least privilege.
    threat: >
      Authenticated attacker from the Internet
      with access to a misconfigured role.
  es:
    title: Excessive privileges - AWS
    description: >
      La aplicación, un usuario o un rol
      tienen más privilegios/permisos
      que los que requieren.
      Esto puede ser aprovechado por un atacante
      para ejecutar acciones sobre un sistema
      que normalmente estarían restringidas.
    impact: >
      Ejecutar acciones que deberían
      estar restringidas
      a otros grupos o roles.
    recommendation: >
      Asignar permisos explícitamente
      a los grupos y roles adecuados
      siguiendo el principio
      del mínimo privilegio.
    threat: >
      Atacante desde Internet
      con acceso a cualquiera
      de los roles mal configurados.
  category: Access Subversion
  examples:
    non_compliant: |
      Resource with unrestricted access or not correctly configured restrictions
      ```yaml
      Resources:
        BucketPolicy1:
          Type: AWS::S3::BucketPolicy
          Properties:
            Bucket: DOC-EXAMPLE-BUCKET
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Action:
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - ''
                    - - 'arn:aws:s3:::'
                      - DOC-EXAMPLE-BUCKET
                      - /*
                  Principal: '*'
                  Condition:
                    StringLike:
                      'aws:Referer':
                        - 'http://www.example.com/*'
                        - 'http://example.net/*'
      ```
      Another vulnerable example: defining a user without a role based security configuration
      ```yaml
      Resources:
        myuser:
          Type: AWS::IAM::User
          Properties:
            Path: "/"
            LoginProfile:
              Password: myP@ssW0rd
            Policies:
            - PolicyName: giveaccesstoqueueonly
              PolicyDocument:
                Version: '2012-10-17'
                Statement:
                - Effect: Allow
                  Action:
                  - sqs:*
                  Resource:
                  - !GetAtt myqueue.Arn
                - Effect: Deny
                  Action:
                  - sqs:*
                  NotResource:
                  - !GetAtt myqueue.Arn
      ```
      An IAM configuration with an open pass role
      ```yaml
      Resources:
        AWS_IAM_Role_1:
          Type: AWS::IAM::Role
          Properties:
            AssumeRolePolicyDocument:
              Statement:
                - Effect: Allow
                  Action: iam:PassRole
                  Resource: '*'
                  Condition:
                    StringEquals:
                      iam:PassedToService: cloudwatch.amazonaws.com
                - Effect: Allow
                  Action: iam:PassRole
                  Resource: arn:aws:iam::*:role/EC2-roles-for-XYZ-*
                - Effect: Allow
                  Action: iam:Pass*
                  Resource: '*'
      ```
      Using the AWS CLI, the following command checks for Overly Permissive IAM Group Policies
      ```
      $ aws iam get-policy-version
            --policy-arn {arn_iam_policy}
            --version-id v1
            --query 'PolicyVersion.Document'
      ```
      This returns the policy version configuration. If the output contains any wildcards (*), the policy is too permisive, for example:
      ```
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Action": "*",
            "Resource": "*",
            "Effect": "Allow"
          }
        ]
      }
      ```
    compliant: |
      Every resource should have clearly defined authorization restrictions
      ```json
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "arn:aws:::123456789012:role/SomeRole"
          "arn:aws:::123456789012:role/OtherRole"
        ]
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: |
        To configure many AWS services,
        you must pass an IAM role to the service.
        This allows the service to later assume the role
        and perform actions on your behalf.

        By giving a role or user the `iam:PassRole` permission,
        you are saying:
        > this principal is allowed to assign AWS roles to resources
        and services in this account.

        You can limit which roles a user or service
        can pass to others by specifying the role ARN(s)
        in the Resource field of the policy
        that grants them `iam:PassRole`:

        ```json
        {
          "Effect": "Allow",
          "Action": "iam:PassRole",
          "Resource": [
            "arn:aws:::123456789012:role/SomeRole"
            "arn:aws:::123456789012:role/OtherRole"
          ]
        }
        ```

        As a rule of thumb,
        you should include **only** the roles
        required by your application.
        Wildcards and over-permissive resource grants
        highly increase the probability of (or completely allow)
        a privilege escalation.
'032':
  en:
    title: Spoofing
    description: >
      It is possible to perform actions in the application
      and make it look as if they were performed
      by the system or another user.
      Examples include sending messages
      that appear to come from the system
      and modifying data in the name of other users
      (who may have more privileges).
    impact: >
      Impersonate the application to increase the chances
      of a successful phishing or social engineering attack.
    recommendation: >
      Avoid the usage of custom system messages
      that can be tampered by an user.
    threat: Authenticated attacker from the Internet.
  es:
    title: Spoofing
    description: >
      Es posible realizar acciones
      en la aplicación y hacer que parezca
      que fueron realizadas
      por el sistema o por otro usuario.
      Por ejemplo,
      enviar mensajes que parecen venir del sistema
      o modificar datos a nombre de otros usuarios
      (quienes podrían tener más privilegios).
    impact: >
      Suplantar la aplicación para incrementar las posibilidades
      de un ataque exitoso de phishing o ingeniería social.
    recommendation: >
      Evitar usar mensajes de sistema personalizados
      que puedan ser modificados sin autorización por un usuario.
    threat: >
      Atacante autenticado desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      Using custom system messages that could be tampered
      ```java
      public class PrintingExceptionMessage {
        public static void main(String args[]) throws Exception {
          String msg = "This is my custom message";
          try{
            //Do something
          } catch (e){
            throw new Exception("CustomMessage: "+msg, e);
          }
        }
      }
      ```
    compliant: |
      ```java
      public class PrintingExceptionMessage {
        public static void main(String args[]) throws Exception {
          try{
            //Do something
          } catch (e){
            throw new Exception(e);
          }
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['035', '096', '173', '176', '265', '320']
  metadata:
    en:
      details: __empty__
'033':
  en:
    title: Password change without identity check
    description: >
      The system allows a user
      to change their password
      without requesting the previous one
      or enforcing another
      identity verification mechanism.
    impact: Gain total control over a user account.
    recommendation: >
      - Guarantee that the current password
      is needed when a password change
      is requested by users.

      - Use a second authentication mechanism
      to ensure the password change is performed
      by the account owner.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Password change without identity check
    description: >
      Al establecer una nueva contraseña para un usuario,
      el producto no requiere conocimiento
      de la contraseña original,
      o el uso de otro tipo de autenticación.
    impact: Obtener control total de la cuenta de un usuario.
    recommendation: >
      - Garantizar que al hacer el cambio de contraseña
      se ingrese la contraseña actual.

      - Establecer mecanismos como un segundo factor de autenticación
      para garantizar que el cambio de contraseña sea efectuado
      por el dueño de la cuenta.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not validate the user is authorized to reset the password
      ```java
      public void changePassword(userId, newPassword){
        if(isValidUser(userId)) {
          Account account = application.resetPassword(newPassword);
        }
      }
      ```
    compliant: |
      The application includes methods to validate the account owner is requesting the password change
      ```java
      public void changePassword(userCredentials, newPassword){
        Password password = userCredentials.password;
        if(isValid(userCredentials.user, password)) {
          Account account = application.resetPassword(newPassword);
          //Code to redirect user and change password not shown
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['238']
  metadata:
    en:
      details: __empty__
'034':
  en:
    title: Insecure generation of random numbers
    description: >
      The system uses insecure functions,
      insufficient ranges or low-entropy components
      to generate random numbers.
      This could allow an attacker
      to guess the generation sequence
      after a short time or predict results
      using probabilistic methods.
    impact: >
      Predict the secuence of random numbers
      to create new attack vectors.
    recommendation: >
      Use the most secure mechanisms
      offered by language
      to generate random numbers.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure generation of random numbers
    description: >
      El sistema usa funciones inseguras,
      rangos insuficientes o componentes
      de baja entropía
      para generar números aleatorios.
      Esto podría permitirle a un atacante
      averiguar la secuencia de generación
      o predecir resultados
      usando métodos probabilísticos.
    impact: >
      Predecir la secuencia de números aleatorios
      para crear nuevos vectores de ataque.
    recommendation: >
      Usar los mecanismos más seguros
      ofrecidos por el lenguaje
      para la generación de números aleatorios.
    threat: >
      Atacante autenticado desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      Insecure method to generate random numbers
      ```java
      public class BenchmarkTest00167 extends HttpServlet {
        @Override
        public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
          response.setContentType("text/html;charset=UTF-8");
          long l = new java.util.Random().nextLong();
          String rememberMeKey = Long.toString(l);
          String cookieName = "rememberMe";
          request.getSession().setAttribute(cookieName, rememberMeKey);
        }
      }
      ```
    compliant: |
      The application should implement secure randomization algorithms at every step
      ```java
      public class BenchmarkTest00167 extends HttpServlet {
        @Override
        public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
          response.setContentType("text/html;charset=UTF-8");
          // create instance of SecureRandom class
          SecureRandom rand = new SecureRandom();

          long l = new rand.nextInt().nextLong();
          String rememberMeKey = Long.toString(l);

          String cookieName = "rememberMe";
          request.getSession().setAttribute(cookieName, rememberMeKey);
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['223', '224']
  metadata:
    en:
      details: __empty__
'035':
  en:
    title: Weak credential policy
    description: >
      The systems credential policy
      is not compliant with security regulations.
    impact: >
      Increase the chances of getting valid credentials
      using brute force or dictionary attacks.
    recommendation: >
      Establish a policy
      for creation of credentials
      that uses phrases,
      not word based passwords.
    threat: >
      Anonymous user from the Internet.
  es:
    title: Weak credential policy
    description: >
      La política de credenciales
      presente en el sistema
      no cuenta con los parámetros recomendados.
    impact: >
      Incrementar las posibilidades de obtener credenciales válidas
      mediante ataques de fuerza bruta o diccionario.
    recommendation: >
      Establecer una política
      para la creación de credenciales
      que involucre frases
      y no contraseñas basadas en palabras.
    threat: >
      Atacante anónimo desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      Insecure method that allows any type of credentials to be used
      ```c {3,7,15}
      namespace Controllers {
        public class DBaccess {
          public void dbauth() {
            DbContextOptionsBuilder optionsBuilder = new DbContextOptionsBuilder();
            con_str = "Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=";
            optionsBuilder.UseSqlServer(con_str);

            DbContextOptionsBuilder optionsBuilder2 = new DbContextOptionsBuilder();
            optionsBuilder2.UseSqlServer("Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=");
          }
        }
      }
      ```
      Example with insecure password configuration requirements
      ```c {3,7,15}
      public class Startup {
        public void start(IServiceCollection services) {
          services.Configure<IdentityOptions>( options => {
            options.Password.RequireDigit = true;
            options.Password.RequireDigit = false;
            options.Password.RequiredLength = 8;
            options.Password.RequireNonAlphanumeric = true;
            options.Password.RequireUppercase = true;
            options.Password.RequireLowercase = true;
            options.Password.RequiredUniqueChars = 5;
          });
        }
      }
      ```
    compliant: |
      Perform strict standards of password configuration requirements
      ```c {3,7,15}
      public class Startup {
        public void start(IServiceCollection services) {
          services.Configure<IdentityOptions>( options => {
            options.Password.RequireDigit = true;
            options.Password.RequireDigit = true;
            options.Password.RequiredLength = 16;
            options.Password.RequireNonAlphanumeric = true;
            options.Password.RequireUppercase = true;
            options.Password.RequireLowercase = true;
            options.Password.RequiredUniqueChars = 10;
          });
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['130', '132', '133', '139', '332']
  metadata:
    en:
      details: __empty__
'036':
  en:
    title: ViewState not encrypted
    description: >
      The state information
      of application forms
      that is stored in the ViewState
      is not encrypted.
    impact: >
      Leak app state information
      through the ViewState value.
    recommendation: >
      Encrypt the ViewState
      in the application configuration.
    threat: >
      Anonymous attacker
      with local access to the victims browser.
  es:
    title: ViewState not encrypted
    description: >
      La información de estado de formularios
      almacenada en el ViewState
      no se encuentra cifrada.
    impact: >
      Fugar información de estado
      a través del valor del ViewState.
    recommendation: >
      Establecer cifrado del ViewState
      en la configuración de la aplicación.
    threat: >
      Atacante anónimo con acceso local
      al navegador de la víctima.
  category: Information Collection
  examples:
    non_compliant: |
      Incorrectly configured viewState Encryption
      ```html
      <configuration xmlns =https://myhost.com>
        <system.web>
          <pages viewStateEncryptionMode=”None”>
          …
        </system.web>
      </configuration>
      ```
    compliant: |
      ```html
      <configuration xmlns =https://myhost.com>
        <system.web>
          <pages viewStateEncryptionMode="Always"”>
          …
        </system.web>
      </configuration>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: C
  requirements: ['026']
  metadata:
    en:
      details: __empty__
'037':
  en:
    title: Technical information leak
    description: >
      It is possible to obtain
      technical information such as:

      - System component versions
      (HTTP headers, service banner, etc.)

      - Specific information
      about the configuration
      of server components (php.ini, web.config)
    impact: Obtain technical information to create new attack vectors.
    recommendation: >
      - Eliminate the services banner
      with information leakage.

      - Verify that HTTP headers
      do not display any name or version.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Technical information leak
    description: >
      Se obtiene información técnica
      del sistema, como:

      - Versión de los componentes
      que el sistema utiliza
      (encabezados HTTP, banner del servicio, etc).

      - Información específica
      sobre la configuración de componentes
      a nivel del servidor (php.ini, web.config).

      - Funcionalidades que arrojan
      información del servidor.
    impact: Obtener información técnica para crear nuevos vectores de ataque.
    recommendation: >
      - Eliminar el banner de los servicios
      con fuga de información.

      - Verificar que los encabezados HTTP
      no expongan ningún nombre o versión.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The system potentially exposes technical information through the use of functions like printStackTrace
      ```java
      import org.apache.logging.log4j.Logger;
      import org.apache.logging.log4j.LogManager;

      public class Test {
        private static Logger logger = LogManager.getLogger(Log4jExample.class);

        public static void main(String[ ] args) {
          try {
            int[] myNumbers = {1, 2, 3};
            System.out.println(myNumbers[10]);
          } catch (IndexException e) {
            if (e.toString() == "Error"){
              System.out.println("Error");
            }
            e.printStackTrace();
          }
        }
      }
      ```
    compliant: |
      Avoid the use of those functions in a production environment
      ```java
      import org.apache.logging.log4j.Logger;
      import org.apache.logging.log4j.LogManager;

      public class Test {
        private static Logger logger = LogManager.getLogger(Log4jExample.class);

        public static void main(String[ ] args) {
          try {
            int[] myNumbers = {1, 2, 3};
            System.out.println(myNumbers[10]);
          } catch (IndexException e) {
            if (e.toString() == "Error"){
              System.out.println("Error");
            }
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: C
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'038':
  en:
    title: Business information leak
    description: >
      It is possible to obtain business information,
      such as:

      - Username list

      - Strategic information

      - Employees information

      - Clients information

      - Providers information
    impact: Obtain sensitive information to create new attack vectors.
    recommendation: >
      Based on the classification
      of the information found,
      set the necessary controls
      to guarantee that information
      is accessible only to right users.
    threat: >
      Authenticathed attacker from the Internet.
  es:
    title: Business information leak
    description: >
      Se obtiene información de negocio, como:

      - Lista de usuarios

      - Información estratégica

      - Información de empleados

      - Información de clientes

      - Información de proveedores
    impact: Obtener información sensible para crear nuevos vectores de ataque.
    recommendation: >
      De acuerdo a la clasificación
      de la información encontrada,
      establecer los controles necesarios
      para que la información sea accesible
      sólo a las personas indicadas.
    threat: >
      Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There is a method in the application that displays userInformation without verifying proper credentials
      ```javascript
      function retrieveInfo(userId){
        if(userId != ""){
          usersInfo = getUserList();
          displayInfo(usersInfo);
        }
      }
      ```
    compliant: |
      Validate the user is authorized to access sensitive information
      ```javascript
      function retrieveInfo(userId, sessionCookie){
        if(isUserLoggedIn(userId, sessionCokie) && isUserAdmin(userId)){
          usersInfo = getUserList();
          displayInfo(usersInfo);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: U
      report_confidence: C
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'039':
  en:
    title: Improper authorization control for web services
    description: >
      The systems web services
      do not have an authorization control mechanism
      or the one in place can be bypassed.
    impact: Obtain confidential information from users.
    recommendation: >
      Validate through session cookies or
      tokens that users trying to access
      certain information are authenticated.
    threat: Anonymous attacker from the Internet.
  es:
    title: Improper authorization control for web services
    description: >
      Los web services del sistema
      pueden ser accedidos sin autorización
      o el mecanismo de control de acceso presente
      puede ser evitado.
    impact: Obtener información confidencial de los usuarios.
    recommendation: >
      Validar mediante cookies de sesión o tokens
      que los usuarios que intentan acceder a
      cierta información se encuentren autenticados.
    threat: Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      In this case, the userId is used to access sensitive session information, without verifying cookies
      ```javascript
      // Get cookie to restore session credentials
      function restoreSession(cname){
        userCredentials = fetch('myurl/${userId}')
        restoreSession(userCredentials)
      }
      ```
    compliant: |
      Correct use of cookies to restore session contents
      ```javascript
      // Get cookie to restore session credentials
      function restoreSession(cname){
        userCookie = getcookies(cname);
        if(userCookie){
          restoreSession(user);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['096', '176', '265', '320']
  metadata:
    en:
      details: __empty__
'040':
  en:
    title: Exposed web services
    description: >
      The systems WSDL file
      contains sensitive information
      and is exposed to a larger audience than required.
    impact: >
      - Obtain information from the application
      services.

      - Expand the attack surface.
    recommendation: >
      Restrict access to /_vti_bin resource
      to unauthorised users.
    threat: Anonymous attacker from the Internet.
  es:
    title: Exposed web services
    description: >
      El WSDL del sistema contiene
      información sensible
      y se encuentra expuesto
      para una audiencia mayor que la necesaria.
    impact: >
      - Obtener información de los servicios de
      la aplicación.

      - Ampliar la superficie de ataque.
    recommendation: >
      Restringir el acceso al recurso /_vti_bin
      para usuarios no autorizados.
    threat: Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The WSDL does not restrict access to the vti_bin resource
      ```html
       <location path="_layouts">
          <system.web>
            <authorization>
              <deny users="?" />
            </authorization>
          </system.web>
      </location>
      <location path="_vti_bin">
          <system.web>
            <authorization>
              <deny users=none />
            </authorization>
          </system.web>
      </location>
      ```
    compliant: |
      Restrict the access to the vti_bin resource only to authorized users
      ```html
       <location path="_layouts">
          <system.web>
            <authorization>
              <deny users="?" />
            </authorization>
          </system.web>
      </location>
      <location path="_vti_bin">
          <system.web>
            <authorization>
              <deny users="general"/>
            </authorization>
          </system.web>
      </location>
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '325']
  metadata:
    en:
      details: __empty__
'041':
  en:
    title: Enabled default credentials
    description: >
      It is possible to use low-strength,
      default credentials
      to access system resources,
      such as the database.
    impact: >
      Obtain unauthorized access to resources or services
      with public credentials
    recommendation: >
      Eliminate the credentials
      from the storage manager
      to avoid login attempts with those.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Enabled default credentials
    description: >
      Se encuentran credenciales
      por defecto de baja fortaleza
      las cuales aún están presentes
      en la base de datos de la aplicación.
    impact: >
      Obtener acceso no autorizado a recursos
      o servicio con credenciales públicas
    recommendation: >
      Eliminar las credenciales
      del gestor de almacenamiento
      para evitar inicios de sesión con estas.
    threat: >
      Atacante anónimo desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      Default password settings enabled in a resource
      ```terraform
      resource "aws_iam_user" "example" {
        name = "example"
      }

      resource "aws_iam_service_specific_credential" "example" {
        service_name     = "example"
        user_name        = admin
        service_password = default
      }
      ```
    compliant: |
      Correctly configure the aws key to access resources
      ```terraform
      resource "aws_iam_user" "example" {
        name = "example"
      }

      resource "aws_iam_service_specific_credential" "example" {
        service_name     = "example"
        user_name        = user_name
        service_password = "my_aws_key"
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['142']
  metadata:
    en:
      details: __empty__
'042':
  en:
    title: Insecurely generated cookies
    description: >
      The system does not set security attributes
      for sensitive cookies,
      which could cause them to be sent in plain text
      or disclosed by unauthorized users
      on the client side.
    impact: >
      Send plain text session cookies
      through insecure channels.
    recommendation: >
      The application must set
      the corresponding security attributes
      when cookies are generated.
    threat: Anonymous attacker from the Internet.
  es:
    title: Insecurely generated cookies
    description: >
      El sistema no establece
      los atributos de seguridad
      para las cookies sensibles,
      lo que podría hacer
      que se envíen en texto plano
      o sean visualizadas por usuarios
      no autorizados del lado del cliente.
    impact: >
      Enviar cookies de sesión en texto plano
      a través de canales inseguros.
    recommendation: >
      La aplicación debe establecer
      los correspondientes atributos de seguridad
      cuando se generan las cookies.
    threat: Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Incorrectly configured cookie settings
      ```c {3,7,15}
      using System.Net;
      using System;

      namespace cookies{
        public class CookieExample{
          public static void Main(string[] args) {
            var insecure_cookie = new HttpCookie(key , value);
            insecure_cookie.Expires = DateTime.Now.AddDays(expireDay);
            insecure_cookie.HttpOnly = true;

            var insecure = new HttpCookie(key , value);
          }
        }
      }
      ```
    compliant: |
      ```c {3,7,15}
      using System.Net;
      using System;

      namespace cookies {
        public class CookieExample {
          public static void Main(string[] args) {
            var secure_cookie = new HttpCookie(key , value);
            secure_cookie.Expires = DateTime.Now.AddDays(expireDay);
            secure_cookie.HttpOnly = true;
            secure_cookie.Secure = true;
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['029']
  metadata:
    en:
      details: __empty__
'043':
  en:
    title: Insecure or unset HTTP headers - Content-Security-Policy
    description: >
      The application has unnsafe configurations
      regarding the Content-Security-Policy header.
      This may be because:

      - Header is missing from server responses.

      - The header has not defined mandatory security policies.

      - Defined security policies contain insecure values.
    impact: >
      - Embed content, scripts, blobs
      or images from potentially
      malicious sources.

      - Make possible to carry attacks like
      Cross-Site Scripting,
      Cross-Site Leaks, among others.
    recommendation: >
      Set the Content-Security-Policy header
      in the server responses
      and configure it in a secure way.
    threat: Unauthorized attacker from Internet.
  es:
    title: Insecure or unset HTTP headers - Content-Security-Policy
    description: >
      La aplicación contiene configuraciones inadecuadas
      referentes a la cabecera Content-Security-Policy.
      Esto puede deberse a que:

      - La cabecera está ausente de las respuestas del servidor.

      - La cabecera no ha definido políticas de seguridad obligatorias.

      - Las políticas de seguridad definidas contienen valores inseguros.
    impact: >
      - Incluir contenido, scripts,
      binarios o imágenes desde fuentes
      potencialmente maliciosas.

      - Aumentar la probabilidad
      de llevar a cabo ataques como
      Cross-Site Scripting, Cross-Site Leaks,
      entre otros.
    recommendation: >
      Establecer la cabecera
      Content-Security-Policy
      en las respuestas del servidor
      y configurarla de forma segura.
    threat: Atacante sin autorización desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      After performing an HTTP GET request to the server, the CSP header
      is insecurely configured
      ```http
      HTTP/1.1 200 OK
      content-security-policy: style-src 'self'
      'unsafe-inline'; font-src 'self' https://fonts.gstatic.com;
      script-src 'unsafe-inline'; script-src-elem 'self';
      img-src 'self' https://fonts.googleapis.com;
      frame-ancestors https:; block-all-mixed-content;
      ```
      In this example, the CSP header has the following vulnerabilities:
      Unsafe https: wildcard in the frame-ancestors directive,
      Unsafe 'unsafe-inline' in the script-src directive,
      Does not have the object-src or default-src directive,
      Does not contain the upgrade-insecure-requests,
      Uses the deprecated block-all-mixed-content directive.
    compliant: |
      The server has the CSP header correctly configured
      ```http
      HTTP/1.1 200 OK
      content-security-policy: default-src 'self'; style-src 'self'
      'unsafe-inline'; font-src 'self' https://fonts.gstatic.com;
      object-src 'none'; script-src 'self' 'unsafe-eval';
      script-src-elem 'self'; img-src 'self' https://fonts.googleapis.com;
      upgrade-insecure-requests; frame-ancestors 'none';
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['062', '117', '175', '349']
  metadata:
    en:
      details: __empty__
'044':
  en:
    title: Insecure HTTP methods enabled
    description: >
      HTTP methods such as TRACE, PUT and DELETE
      are enabled on the server.
      These methods may allow an attacker
      to include and/or delete files,
      or perform cross-site tracing attacks.
    impact: >
      - Include content, scripts, binaries or
      images from potentially malicious sources.

      - Increase the probability of carrying
      out attacks such as Cross-Site Scripting,
      Cross-Site Leaks, and others.
    recommendation: >
      Configure secure methods
      for servers requests.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure HTTP methods enabled
    description: >
      Métodos como TRACE, PUT, DELETE
      se encuentran habilitados en el servidor
      permitiendo al atacante
      incluir y/o borrar archivos,
      permite saber cuales otros métodos
      son permitidos o usar la depuración
      en las página que lo permiten.
    impact: >
      - Incluir contenido, scripts, binarios o
      imagenes desde fuentes potencialmente
      maliciosas.

      - Aumentar la probabilidad de llevar
      a cabo ataques como Cross-Site Scripting,
      Cross-Site Leaks, entre otros.
    recommendation: >
      Configurar los métodos seguros
      para las peticiones en el servidor.
    threat: >
      Atacante autenticado desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      Unsafe http methods are allowed by the application
      ```http
      HTTP/1.1 200 OK
      Server: Microsoft-IIS/5.0
      Date: Tue, 31 Oct 2006 08:00:29 GMT
      Connection: close
      Allow: GET, HEAD, POST, PUT, DELETE
      Content-Length: 0
      ```
    compliant: |
      Safe methods shouls be allowed by the application
      ```http
      HTTP/1.1 200 OK
      Server: Microsoft-IIS/5.0
      Date: Tue, 31 Oct 2006 08:00:29 GMT
      Connection: close
      Allow: GET, POST
      Content-Length: 0
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'045':
  en:
    title: HTML code injection
    description: >
      The applications fields
      allow the injection of HTML code.
      This could enable attackers
      to modify the applications appearance
      in order to trick its users
      into performing undesired actions.
    impact: >
      - Allow an attacker to modify the page.

      - Craft malicious links, including
      his injected HTML content, and sends it to a
      user via email.
    recommendation: >
      Filter the information
      that comes from text fields
      with regular expressions
      or white lists to avoid injections.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: HTML code injection
    description: >
      Los campos de la aplicación
      permiten inyectar código HTML
      lo cual posibilita cambiar
      el aspecto de la página
      engañando a las víctimas
      una vez consultada
      la funcionalidad afectada.
    impact: >
      - Permite a un atacante modificar la página.

      - El atacante crea enlaces maliciosos,
      incluyendo su contenido HTML inyectado,
      y lo envía al usuario por correo electrónico.
    recommendation: >
      Filtrar la información
      que venga de los campos de texto
      con expresiones regulares
      o listas blancas para evitar inyecciones.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application does not verify some inputs on the server side
      ```python
      def my_form_post():
        text = request.form['text']
        processed_text = text.upper()
        return processed_text
      ```
    compliant: |
      Verify text input fields with regex or whitelists
      ```python
      def cleanStr(str):
        if (str == None):
          return False
        return re.sub(r'[-\(\)\"#\/@;:<>\{\}\-=~|\.\?]', '', str)

      def my_form_post():
        text = request.form['text']
        processed_text = cleanStr(txt)
        return processed_text
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'046':
  en:
    title: Missing secure obfuscation - APK
    description: >
      It is possible
      to obtain source code
      of the application
      because it has not been obfuscated
      using a secure mechanism.
      This could allow an attacker
      to understand the inner workings
      of the application
      or get technical
      or sensitive information.
    impact: >
      Get technical
      or sensitive information
      from the applications source code.
    recommendation: >
      Obfuscate the applications source code
      at deploy time
      with tools like:
      https://github.com/ClaudiuGeorgiu/Obfuscapk
      in its strongest configuration.
    threat: >
      Unauthorized attacker
      from Internet network
      with access to the APK.
  es:
    title: Missing secure obfuscation - APK
    description: >
      Es posible
      obtener el código fuente
      de la aplicación
      porque este no se ha ofuscado
      usando un mecanismo seguro.
      Esto podría permitir a un atacante
      entender el funcionamiento interno
      de la aplicación
      o obtener información técnica
      o sensible.
    impact: >
      Obtener información técnica
      o sensible
      a partir del código fuente de la aplicación.
    recommendation: >
      Ofuscar el código fuente de la aplicación
      al momento del despliegue
      con herramientas como:
      https://github.com/ClaudiuGeorgiu/Obfuscapk
      en su configuración más fuerte.
    threat: >
      Atacante sin autorización
      desde Internet
      con acceso a el APK.
  category: Information Collection
  examples:
    non_compliant: |
      The source code was not obfuscated before compiling
      ```java
      //Code before obfuscation
      private void calculatePay(SpecialList clientGroup){
        while(clientGroup.HasMore()){
          clientGroup.getNext(true);
          client.updatePay();
          makePay(client);
        }
      }
      ```
    compliant: |
      The code is correctly obfuscated using relevant secure tools
      ```java
      //Rename Obfuscation method
      private void calculatePay(a b){
        while(b.c()){
          b.a(true);
          c.a();
          b(c);
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['159']
  metadata:
    en:
      details: __empty__
'047':
  en:
    title: Automatic information enumeration
    description: >
      It is possible
      to automatically enumerate
      system information such as open ports,
      available services
      and users personal data.
    impact: >
      - Obtain information from
      internal users.

      - Obtain account information
      from partners and suppliers.
    recommendation: >
      Filter the information
      that is received through the ports
      avoiding the detection of services.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Automatic information enumeration
    description: >
      Es posible enumerar información del sistema
      como servicios disponibles
      e información de los usuarios
      mediante scripts o herramientas automatizadas
      que utilicen fuerza bruta.
    impact: >
      - Obtener información de los usuarios
      internos.

      - Obtener información de cuentas de
      socios y proveedores.
    recommendation: >
      Filtrar la información
      que se recibe por los puertos
      para que un escaneo no detecte los servicios
      que corren en dicho puerto.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Incorrectly configure a resource to not filter information by restricting ports
      ```yaml
      Resources:
        securityGroup1:
          Properties:
            GroupDescription: groupDescription1
            SecurityGroupIngress:
              - CidrIp: 34.229.161.227/16
                FromPort: 1
                IpProtocol: "-1"
                ToPort: 65535
            SecurityGroupEgress:
              - CidrIp: 34.229.161.227/16
                FromPort: 8080
                IpProtocol: "-1"
                ToPort: 8080
          Type: AWS::EC2::SecurityGroup
      ```
    compliant: |
      Correctly configure the filters of information according to port numbers
      ```yaml
      Resources:
        securityGroup1:
          Properties:
            GroupDescription: groupDescription1
            SecurityGroupIngress:
              - CidrIp: 34.229.161.227/16
                IpProtocol: "tcp"
            SecurityGroupEgress:
              - CidrIp: 34.229.161.227/16
                IpProtocol: "tcp"
          Type: AWS::EC2::SecurityGroup
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '327']
  metadata:
    en:
      details: __empty__
'048':
  en:
    title: Lack of root detection
    description: >
      The application does not check
      whether the Android system
      on which it is running
      has been rooted.
    impact: >
      Install malicious tools
      in order to cause unexpected behaviors.
    recommendation: >
      Validate that the device
      is not rooted
      at application startup.
    threat: >
      Unauthorized attacker
      with a rooted device
      and the APK installed.
  es:
    title: Lack of root detection
    description: >
      No se está detectando
      si el sistema Android
      se encuentra rooteado
      al utilizar la aplicación.
    impact: >
      Instalar herramientas maliciosas
      con el fin de causar
      comportamientos inesperados.
    recommendation: >
      Validar que el dispositivo
      no se encuentre rooteado
      al inicializar la aplicación.
    threat: >
      Atacante sin autorización
      con un dispositivo rooteado
      y el APK instalado.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A not recommended method to check for rooting could be testing for test-keys, which is correlated but does not guarantee root access
      ```java
      private static boolean checkRootMethod1() {
        String buildTags = android.os.Build.TAGS;
        return buildTags != null && buildTags.contains("test-keys");
      }
      ```
    compliant: |
      Better methods to check for root access include examples like this one, that runs the su command to verify root access
      ```java
      public static boolean isRootGiven(){
        if (isRootAvailable()) {
          Process process = null;
          try {
            process = Runtime.getRuntime().exec(new String[]{"su", "-c", "id"});
            BufferedReader in = new BufferedReader(new InputStreamReader(process.getInputStream()));
            String output = in.readLine();
            if (output != null && output.toLowerCase().contains("uid=0"))
              return false;
          } catch (Exception e) {
            e.printStackTrace();
          } finally {
            if (process != null)
              process.destroy();
          }
        }
        return true;
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['326']
  metadata:
    en:
      details: __empty__
'050':
  en:
    title: Guessed weak credentials
    description: >
      The system credentials low complexity
      considerably reduces the amount of time
      required to guess them.
      This allows an attacker
      to have quicker success
      when executing a brute force attack.
    impact: Obtain functional credentials for resources or services.
    recommendation: >
      Enforce strong password policy.
      A password security policy
      must contain the following attributes:

      - Configure a minimum and maximum length.

      - Do not use word based passwords.

      - Avoid usernames in the passwords.

      - Do not reuse passwords.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Guessed weak credentials
    description: >
      La falta de complejidad de las contraseñas
      reduce significativamente
      el tiempo de búsqueda
      cuando se trata de adivinar
      las contraseñas de los usuarios,
      por lo que un atacante
      puede realizar ataques de fuerza bruta
      y tener éxito más rápido.
    impact: >
      Obtener credenciales funcionales para recursos o servicios.
    recommendation: >
      Hacer cumplir el uso
      de contraseñas seguras.
      Una política de seguridad
      de la contraseña debe contener
      los siguientes atributos:

      - Configurar una longitud mínima y máxima.

      - No usar contraseñas basadas en palabras.

      - Evitar nombres de usuario en contraseñas.

      - No reutilizar contraseñas.
    threat: >
      Atacante anónimo desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      Weak credentials configuration
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 8
              ExcludeLowercase: true
              ExcludeNumbers: false
              ExcludePunctuation: true
              ExcludeUppercase: false
              IncludeSpace: true
              RequireEachIncludedType: false
      ```
    compliant: |
      Ensure the credentials configuration of the application is strong enough
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 16
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: false
              ExcludeNumbers: false
              ExcludePunctuation: false
              ExcludeUppercase: false
              IncludeSpace: false
              RequireEachIncludedType: true
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['132', '133', '139']
  metadata:
    en:
      details: __empty__
'051':
  en:
    title: Cracked weak credentials
    description: >
      The low complexity
      of the hashes stored in the database
      considerably reduces the amount of time
      required to crack them.
    impact: >
      Unauthorized access, or even the
      insufficient data validation can
      make the system vulnerable.
    recommendation: >
      Ensure that functions
      of password summary
      have a minimum size of 256 bits.
    threat: >
      Authenticated attacker from Internet
      with access to the hashes.
  es:
    title: Cracked weak credentials
    description: >
      La falta de complejidad
      de los hashes almacenados
      en la base de datos
      reduce significativamente
      el tiempo del proceso para revertirlos.
    impact: >
      Acceso no autorizado, o incluso la
      insuficiente validación de los datos
      puede hacer que el sistema sea vulnerable.
    recommendation: >
      Asegurarse de que las funciones
      de resumen de contraseñas
      tenga un tamaño mínimo de 256 bits.
    threat: >
      Atacante autenticado desde Internet
      con acceso a los hashes.
  category: Access Subversion
  examples:
    non_compliant: |
      Weak hashing algorithm used
      ```javascript
      function hashPassword(password) {
        const md5sum = crypto.createHash('md5');
        const res = md5sum.update(password);
        return res;
      };
      ```
    compliant: |
      The application should use strong hashing and encryption algorithms
      ```javascript
      function hashPassword(password) {
        this.salt = crypto.randomBytes(256).toString('hex');
        this.hash = crypto.pbkdf2Sync(password, this.salt,
        1000, 64, `sha512`).toString(`hex`);
        return
      };
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['134', '135', '150']
  metadata:
    en:
      details: __empty__
'052':
  en:
    title: Insecure encryption algorithm
    description: >
      The application uses
      insecure encryption algorithms.
    impact: >
      - Reverse the ciphertext
      and collect sensible information.

      - Tamper protected data
      by exploiting algorithm collisions.
    recommendation: >
      Use algorithms considered
      cryptographically secure.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Insecure encryption algorithm
    description: >
      La aplicación usa algoritmos
      de cifrado inseguros.
    impact: >
      - Revertir el texto cifrado
      para encontrar información sensible.

      - Alterar datos protegidos
      al aprovechar colisiones
      de la función resumen.
    recommendation: >
      Utilizar algoritmos considerados
      criptográficamente seguros.
    threat: >
      Atacante anónimo desde red interna.
  category: Information Collection
  examples:
    non_compliant: |
      Examples with an insecure encryption library
      ```javascript
      const crypto = require("crypto");

      let keyString = "*4wQZgn+U2RW_mb=";
      const key = Buffer.from(keyString.substring(0, 8), "utf8");

      const cipher = crypto.createCipheriv("des-ecb", key, "");
      ```
      Insecure hash examples
      ```c {3,7,15}
      using System.Security.Cryptography;

      namespace Cypher_Example{
        class CypherExample{
          public static void Main(){
            HMACMD5 myAes = HMACMD5.Create();
            DES myAes = DES.Create();
            TripleDES myAes = TripleDES.Create();
            var hashProvider3 = new RC2CryptoServiceProvider();
          }
        }
      }
      ```
      Example using an obsolete key derivation
      ```c {3,7,15}
      using System;
      class TestClass{
        public void TestMethod(Rfc2898DeriveBytes rfc2898DeriveBytes, string algname, string alghashname, int keySize, byte[] rgbIV){
          System.Security.Cryptography.rfc2898DeriveBytes.CryptDeriveKey(algname, alghashname, keySize, rgbIV);
          byte[] pwd = Encoding.Unicode.GetBytes(Console.ReadLine());
          byte[] salt = CreateRandomSalt(7);
          PasswordDeriveBytes pdb = new PasswordDeriveBytes(pwd, salt);
        }
      }
      ```
      ```java
      import org.springframework.security.crypto.password.NoOpPasswordEncoder;
      public class Main {
        public static void main(String[] args) {
          Hashing.md5().hashString(password,StandardCharsets.UTF_8).toString();
          Hashing.sha256().hashString(password,StandardCharsets.UTF_8).toString();
          Cipher c = Cipher.getInstance("AES");
          Cipher c = Cipher.getInstance("DES");
          Cipher c = Cipher.getInstance("DESede");
          Cipher c = Cipher.getInstance("RSA");
          Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
          Cipher c = Cipher.getInstance("AES/CBC/NoPadding");
          Cipher c = Cipher.getInstance("AES/ECB/NoPadding");
          Cipher c = Cipher.getInstance("AES/ECB/PKCS5Padding");
          Cipher c = Cipher.getInstance("DES/CBC/NoPadding");
          Cipher c = Cipher.getInstance("DES/CBC/PKCS5Padding");
          Cipher c = Cipher.getInstance("DES/ECB/NoPadding");
          Cipher c = Cipher.getInstance("DES/ECB/PKCS5Padding");
        }
      }
      ```
    compliant: |
      Secure encryption library
      ```javascript
      //Use alternative libraries that comply with the required security standards
      const forge = require('node-forge');

      let keyString = "*4wQZgn+U2RW_mb=";
      const key = Buffer.from(keyString.substring(0, 8), "utf8");

      const cipher = forge.cipher.createCipher('AES-CBC', key);
      ```
      Secure hash examples
      ```c {3,7,15}
      using System.Security.Cryptography;

      namespace Cypher_Example{
        class CypherExample{
          public static void Main(){
            var hashProvider3 = new RC2CryptoServiceProvider();
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: F
      remediation_level: O
      report_confidence: X
  requirements: ['148', '149', '150', '181', '336']
  metadata:
    en:
      details: __empty__
'053':
  en:
    title: Lack of protection against brute force attacks
    description: >
      The system does not have
      appropriate protection mechanisms
      against automated attacks designed
      to guess credentials.
    impact: >
      Obtain the passwords of the
      application users.
    recommendation: >
      Implement a control
      to avoid this type of attacks
      and to ensure that access
      is not made by a robot.
      E.g. Captcha,
      failed attempts blockout, etc.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Lack of protection against brute force attacks
    description: >
      La aplicación no tiene protección
      contra ataques automatizados
      para adivinar credenciales válidas.
    impact: >
      Obtener las contraseñas de los
      usuarios de la aplicación.
    recommendation: >
      Implementar un control
      para evitar este tipo de ataques
      y que garantice que el acceso
      no sea de un robot.
      Ej captcha,
      bloqueo por retardo en el número
      de intentos fallidos, etc.
    threat: >
      Atacante anónimo desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      There are forms in the application that do not implement any kind of security control against automation attacks
      ```javascript
      <div class="container">
        <label for="uname"><strong>Name</strong></label>
        <input type="text" placeholder="Enter Name" name="uname" required>
        <label for="psw"><strong>Password</strong></label>
        <input type="password" placeholder="Enter Password" name="psw" required>
        <button type="submit">Login</button>
      </div>
      ```
    compliant: |
      Implement some captcha controls in the registry forms
      ```jsx
      import ReCAPTCHA from "react-google-recaptcha"
      function onChange(value){
        return (
          <div className="App">
            <ReCAPTCHA
              sitekey="site_key"
              onChange={onChange}
            />
          </div>
        );
      }
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237', '327']
  metadata:
    en:
      details: __empty__
'054':
  en:
    title: Exposed administrative services
    description: >
      One or more of the systems
      administration consoles are exposed
      (possibly on the internet),
      which may lead
      to unauthorized access attempts.
    impact: Attempt to access the administrative site.
    recommendation: >
      Restrict the access
      to the administrative consoles,
      IP addresses
      or managements network segments
      explicitly allowed.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Exposed administrative services
    description: >
      Consola(s) de administración
      se encuentran expuestas,
      lo cual puede permitir
      intentos de acceso administrativo
      no autorizados.
    impact: Intentar acceder al sitio administrativo.
    recommendation: >
      Restringir el acceso
      a las consolas administrativas a direcciones IP
      o segmentos de red de gestión
      explícitamente permitidos.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The administrative consoles do not have any access restrictions
      ```yaml
      name: yournetwork
      dns_domain: 192.0.2.0
      subnets:
        subnet_admin:
          ip_subnet: 192.0.2.0
          allocation_pools:
            - start: 0.0.0.0
              end: 255.255.255.255
          gateway_ip: 192.0.2.0
      ```
    compliant: |
      Administrative consoles have specific access and entry restrictions
      ```yaml
      name: yournetwork
      dns_domain: 208.67.222.222
      subnets:
        subnet_admin:
          ip_subnet: 192.0.2.0/24
          allocation_pools:
            - start: 192.0.2.50
              end: 192.0.2.99
          gateway_ip: 192.0.2.1
          vlan: 101
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['033']
  metadata:
    en:
      details: __empty__
'055':
  en:
    title: Insecure service configuration - ADB Backups
    description: >
      The application allows backups via ADB
      (Android Debug Bridge).
      The backups performed
      by this functionality
      are not encrypted.
      Sensitive data of authenticated users
      can be included in the backup,
      and this data can be extracted
      by a non-authenticated attacker.
      Additionally,
      data can be copied into a USB stick
      and be moved out of the sphere of control
      of the application.
    impact: >
      Leak sensitive information
      through backups.
    recommendation: >
      Configure the attribute:
      application.android:allowBackup
      to false in the file: AndroidManifest.xml.
    threat: >
      Unauthorized attacker
      with the APK installed in a device.
  es:
    title: Insecure service configuration - ADB Backups
    description: >
      La aplicación permite
      realizar copias de seguridad
      a través de ADB (Android Debug Bridge).
      Las copias de seguridad realizadas
      por esta funcionalidad no están cifradas.
      Los datos sensibles
      de usuarios autenticados
      se puede incluir en la copia de seguridad,
      y estos datos se pueden extraer
      por un atacante no autenticado.
      Adicionalmente,
      los datos pueden copiarse en una memoria USB
      y llevarse fuera de la esfera de control
      de la aplicación.
    impact: >
      Filtrar información confidencial
      a través de copias de seguridad.
    recommendation: >
      Configurar el atributo:
      application.android:allowBackup
      a false en el archivo: AndroidManifest.xml.
    threat: >
      Atacante sin autorización
      con el APK instalado en un dispositivo.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application manifest does not allow backup
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
        <uses-permission android:name="android.permission.SEND_SMS"/>
        <application android:label="@7F040001" android:icon="@7F020002">
        </application>
      </manifest>
      ```
    compliant: |
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
        <uses-permission android:name="android.permission.SEND_SMS"/>
        <application android:label="@7F040001" android:icon="@7F020002" android:allowBackup="False">
        </application>
      </manifest>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['185', '266']
  metadata:
    en:
      details: __empty__
'056':
  en:
    title: Anonymous connection
    description: >
      Due to an improper configuration
      of the server
      (e.g., an FTP service with username:
      anonymous and password: guest
      or an SMTP open relay),
      it is possible
      to make anonymous connections to it
      and access otherwise protected resources.
    impact: Read and/or modify files within the service.
    recommendation: >
      Configure the services
      to avoid services enumeration
      or to connect to these anonymously.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Anonymous connection
    description: >
      Debido a una configuración inadecuada
      del servidor (ej: servicio FTP usuario:Anonymous
      y contraseña:guest o servicio SMTP
      con open relay),
      es posible conectarse anónimamente
      y acceder a recursos y funcionalidades
      que normalmente estarían protegidos.
    impact: Leer y/o modificar archivos dentro del servicio.
    recommendation: >
      Configurar los servicios
      para que no se pueda enumerar los servicios
      o conectarse a estos de forma anónima.
    threat: >
      Atacante anónimo desde red adyacente.
  category: Access Subversion
  examples:
    non_compliant: |
      A service is configured to allow anonymous authentication
      ```json
      {
        "$schema": "http://json.schemastore.org/launchsettings.json",
        "iisSettings": {
          "windowsAuthentication": false,
          "anonymousAuthentication": true,
        }
      }
      ```
    compliant: |
      Correctly configure services to deny anonymous authentication
      ```json
      {
        "$schema": "http://json.schemastore.org/launchsettings.json",
        "iisSettings": {
          "windowsAuthentication": false,
          "anonymousAuthentication": false,
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['142', '264', '265', '266', '319']
  metadata:
    en:
      details: __empty__
'057':
  en:
    title: Asymmetric denial of service - Content length
    description: >
      The Content-Length field specifies the
      size of the transmitted form of data
      after the request header.
      In an attack, the Content-Length
      field contains a very high value,
      meaning the server will expect to
      receive a large amount of data.
      The header of the spoofed request
      is then validly terminated, then
      an attacker waits and sends another
      small piece of data before the
      connection termination timer expires.
      In this way, the connection keeps
      dangerously active.
    impact: >
      - Lead to exhauste all available
      server resources.

      - Use technique to exhaust all
      available server resources.

      - Exhaust the victim's network
      and hardware resources when
      requesting large amounts of data.
    recommendation: >
      - Set the header and message body
      to a maximum reasonable length.

      - Define a minimum incoming data
      rate, and drop those that are slower.

      - Set an absolute connection timeout.
    threat: >
      Anonymous attacker with local access.
  es:
    title: Asymmetric denial of service - Content length
    description: >
      El campo Content-Length especifica
      el tamaño de la forma de datos
      transmitida después de la cabecera
      de la solicitud.
      En un ataque, el campo Content-Length
      contiene un valor muy alto, lo que
      significa que el servidor espera
      recibir una gran cantidad de datos.
      La cabecera de la petición falsa se
      termina de forma válida, entonces
      el atacante espera y envía otro
      pequeño trozo de datos antes de
      que expire el temporizador de
      terminación de la conexión.
      De este modo, la conexión se
      mantiene peligrosamente activa.
    impact: >
      - Llevar a agotar todos los recursos
      disponibles del servidor.

      - Utilizar la técnica para agotar
      todos los recursos disponibles
      del servidor.

      - Agotar los recursos de red y
      hardware de la víctima al solicitar
      grandes cantidades de datos.
    recommendation: >
      - Establezca la cabecera y el
      cuerpo del mensaje con una longitud
      máxima razonable.

      - Defina una velocidad mínima de
      entrada de datos, y elimine los
      que sean más lentos.

      - Establezca un tiempo de espera
      de conexión absoluto.
    threat: >
      Atacante anónimo con acceso local.
  category: Access Subversion
  examples:
    non_compliant: |
      Tha application has an http header poorly configured
      ```http
      GET HTTP/1.1
      Host: hostname
      User-Agent: Mozilla/5.0
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      Accept-Language: en-us,en;q=0.5
      Keep-Alive: 300
      Connection: keep-alive
      content-length: 100000
      ```
    compliant: |
      The http headers of the application have a reasonable content length limit and a timeout limit set
      ```http
      GET HTTP/1.1
      Host: hostname
      User-Agent: Mozilla/5.0
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      Accept-Language: en-us,en;q=0.5
      Keep-Alive: 300
      Connection: keep-alive
      Content-Length: 3000
      Request-Timeout: timeout-value
      timeout-value: 1000
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: H
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'058':
  en:
    title: Debugging enabled in production - APK
    description: >
      The system has debugging enabled
      in the production environment,
      which can cause technical information leaks
      when an error occurs.
    impact: >
      Get technical
      or sensitive information.
    recommendation: >
      Configure the attribute:
      application.android:debuggable
      to false in the file: AndroidManifest.xml.
    threat: >
      Unauthorized attacker
      from Internet network.
  es:
    title: Debugging enabled in production - APK
    description: >
      El sistema tiene
      el modo depuración habilitado
      en el ambiente productivo,
      lo que puede causar fugas
      de información técnica
      cuando un error ocurra.
    impact: >
      Obtener información técnica
      o sensible.
    recommendation: >
      Configurar el atributo:
      application.android:debuggable
      a false en el archivo: AndroidManifest.xml.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has debugging enabled on the AndroidManifest
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
        <uses-permission android:name="android.permission.SEND_SMS"/>
        <application android:debuggable="true" android:label="@7F040001" android:icon="@7F020002">
        </application>
      </manifest>
      ```
    compliant: |
      The application does not enable debugging in a production environment
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
        <uses-permission android:name="android.permission.SEND_SMS"/>
        <application android:debuggable="false" android:label="@7F040001" android:icon="@7F020002">
        </application>
      </manifest>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['077', '078']
  metadata:
    en:
      details: __empty__
'059':
  en:
    title: Sensitive information stored in logs
    description: >
      The system stores
      sensitive information such as credentials,
      bank accounts
      and file paths in log files.
    impact: >
      Obtain sensitive information
      that may compromise system resources.
    recommendation: >
      Verify that the information stored
      in logs is not sensitive.
    threat: >
      Authorized local attacker
      with access to the log files.
  es:
    title: Sensitive information stored in logs
    description: >
      El sistema guarda información sensible
      como credenciales,
      cuentas de banco y rutas de archivos
      en las bitácoras.
    impact: >
      Obtener información sensible
      que puede comprometer recursos del sistema.
    recommendation: >
      Verificar que la información guardada
      en las bitácoras no es sensible.
    threat: >
      Atacante local autorizado
      con acceso a los logs.
  category: Information Collection
  examples:
    non_compliant: |
      There are passwords and user ids stored in the log files
      ```yaml
      03/22 08:51:01 INFO   :.main: *************** Profile change***************
      03/22 08:51:01 INFO   :...locate_configFile: Changed user to "myuser"
      03/22 08:51:01 INFO   :.main: Changed password to "mypassword"
      03/22 08:51:01 INFO   :..settcpimage: Get TCP images rc - EDC8112I
      03/22 08:51:01 INFO   :..settcpimage: Associate with TCP/IP image name = TCPCS
      03/22 08:51:02 INFO   :..reg_process: registering process with the system
      03/22 08:51:02 INFO   :..reg_process: attempt OS/390 registration
      03/22 08:51:02 INFO   :..reg_process: return from registration rc=0
      ```
    compliant: |
      Log files do not contain any sensitive information
      ```yaml
      03/22 08:51:01 INFO   :.main: *************** RSVP Agent started ***************
      02
      03/22 08:51:01 INFO   :...locate_configFile: Specified configuration file: /u/user10/rsvpd1.conf
      03/22 08:51:01 INFO   :.main: Using log level 511
      03/22 08:51:01 INFO   :..settcpimage: Get TCP images rc - EDC8112I Operation not supported on socket.
      03
      03/22 08:51:01 INFO   :..settcpimage: Associate with TCP/IP image name = TCPCS
      03/22 08:51:02 INFO   :..reg_process: registering process with the system
      03/22 08:51:02 INFO   :..reg_process: attempt OS/390 registration
      03/22 08:51:02 INFO   :..reg_process: return from registration rc=0
      04
      03/22 08:51:06 TRACE  :...read_physical_netif: Home list entries returned = 7
      03/22 08:51:06 INFO   :...read_physical_netif: index  # 0, interface VLINK1 has address 129.1.1.1, ifidx 0
      03/22 08:51:06 INFO   :....mailslot_create: creating mailslot for timer
      03/22 08:51:06 INFO   :...mailbox_register: mailbox allocated for timer
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['083']
  metadata:
    en:
      details: __empty__
'060':
  en:
    title: Insecure service configuration - Host verification
    description: >
      The system does not properly restrict
      incoming conections from unknown external hosts.
    impact: >
      Establish conections with untrusted machines.
    recommendation: >
      Validate that incoming conections
      come from trusted hosts
      already defined in the known_hosts file.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure service configuration - Host verification
    description: >
      El sistema no limita adecuadamente
      las conexiones entrantes con hosts externos desconocidos.
    impact: >
      Establecer conexiones con máquinas
      que no son de confianza.
    recommendation: >
      Validar que las conexiones entrantes
      pertenezcan a un host de confianza
      que ya esté definido en el archivo known_hosts.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application allows connections to arbitrary insecure hosts
      ```html
      <network-security-config>
        <domain-config cleartextTrafficPermitted="false">
          <domain includeSubdomains="true">example.com</domain>
          <domain includeSubdomains="true">cdn.example2.com</domain>
        </domain-config>
        <base-config cleartextTrafficPermitted="true" />
      </network-security-config>
      ```
    compliant: |
      Only if the application must allow connections to insecure hosts for legacy reasons, these should be specified in the subdomains
      ```html
      <network-security-config>
        <domain-config cleartextTrafficPermitted="true">
          <domain includeSubdomains="true">insecure.example.com</domain>
          <domain includeSubdomains="true">insecure.cdn.example.com</domain>
        </domain-config>
      </network-security-config>
      ```
      Adittionally, the app should perform host validation using methods like getDefaultHostnameVerifier() or similar
      ```html
      SSLSocketFactory ssf = (SSLSocketFactory) SSLSocketFactory.getDefault();
      SSLSocket socket = (SSLSocket) ssf.createSocket("my.host.name", 443);
      socket.startHandshake();
      SSLSession session = socket.getSession();

      StrictHostnameVerifier verifier = new StrictHostnameVerifier();
      if (!verifier.verify(session.getPeerHost(), session)) {
          // Throw some exception
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'061':
  en:
    title: Remote File Inclusion
    description: >
      The application allows to load and execute
      malicious files from remote locations.
      This practice may allow an attacker
      to retrieve sensitive data from the server
      or execute commands remotely.
    impact: >
      - Obtain sensitive data from the server.

      - Execute commands remotely.
    recommendation: >
      Avoid the usage of dangerous functions
      such as include, exec, eval, file, readfile among others
      using non-sanitized data.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Remote File Inclusion
    description: >
      La aplicación permite cargar y ejecutar archivos maliciosos
      desde ubicaciones remotas.
      Esto permitiría a un atacante filtrar información sensible
      del servidor, o ejecutar comandos dentro del mismo.
    impact: >
      - Obtener información sensible del servidor.

      - Ejecutar comandos remotamente.
    recommendation: >
      Evitar utilizar llamados de funciones peligrosas
      como include, exec, eval, file, readfile entre otras
      con datos no sanitizados.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Some fragments can be inserted into the application without server side verification
      ```java
      public partial class WebForm : System.Web.UI.Page{
        protected void File_Load(object file, EventArgs e){
          runScrypt(file);
        }
      }
      ```
    compliant: |
      Implement a check for every fragment introduced to the application
      ```java
      public partial class WebForm : System.Web.UI.Page {
        protected void File_Load(object file, EventArgs e) {
          verifiedFile = secureFileContents(file, args*)
          runScrypt(verifiedFile);
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['173', '265', '266']
  metadata:
    en:
      details: __empty__
'062':
  en:
    title: Concurrent sessions
    description: >
      The application does not validate
      the number of active sessions
      each user has,
      thus a user can login
      more than once at the same time.
      Furthermore,
      the application does not notify
      the user when a session
      has already been initiated
      nor when a second one commences
      from a different location.
    impact: Affect the traceability and non-repudiation of the users actions.
    recommendation: >
      The system must restrict
      the number of concurrent sessions
      that a user can establish
      and at the same
      it must notify the user
      when a login from a different
      location occurs.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Concurrent sessions
    description: >
      La aplicación no valida
      el número de sesiones por usuario
      permitiéndole a un usuario
      iniciar sesión con las mismas credenciales
      más de una vez en un mismo momento.
      Además,
      la aplicación no informa
      cuando ya existe una sesión
      ni cuando se inicia sesión
      desde otra ubicación.
    impact: >
      Afectar la trazabilidad e irrenunciabilidad
      de las acciones del usuario.
    recommendation: >
      El sistema debe restringir
      el número de sesiones concurrentes
      que puede establecer un usuario
      y a su vez notificar al usuario
      cuando se inicie sesión
      en otra ubicación.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      After a successful login, the application does not delete existing user sessions
      ```javascript
      app.get('/login',(req,res) => {
        const userCredentials = req.body.userCredentials;
        const sessionToken = req.body.token;
        if(isValidLogin(userCredentials)){
          //Code to handle login without deleting existing session
          res.redirect('/profile');
        }
      });
      ```
    compliant: |
      The server deletes all existing sessions after a successful login from the user and notifies the user about the new login attempt
      ```javascript
      app.get('/login',(req,res) => {
        const userCredentials = req.body.userCredentials;
        const sessionToken = req.body.token;
        if(isValidLogin(userCredentials) && sessionToken !== getUserToken(userCredentials.userId)){
          req.session.destroy();
          sendUserNotice(userCredentials.userId);
          res.redirect('/profile');
        }
      });
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['025']
  metadata:
    en:
      details: __empty__
'063':
  en:
    title: Lack of data validation - Path Traversal
    description: >
      The software uses external input
      to construct a pathname that is intended
      to identify a file or directory
      but it does not properly neutralize
      or validate special elements
      within the pathname.
    impact: >
      Make the software
      resolve the pathname
      to a location that is outside
      of the intended target,
      for instance: /etc/passwd.
    recommendation: >
      - Prevent the attacker
      from constructing the pathname.

      - Validate/Neutralize the input
      for special elements like: .., ~, /.
    threat: >
      Authenticated attacker
      from the Internet.
  es:
    title: Lack of data validation - Path Traversal
    description: >
      El software usa entradas externas
      para construir rutas que identifican
      un archivo o directorio pero no se neutraliza
      o validan apropiadamente
      los elementos especiales dentro de dicha ruta.
    impact: >
      Hacer que el software resuelva la ruta
      a una ubicación que esta por fuera
      del objetivo de la aplicación,
      por ejemplo: /etc/passwd.
    recommendation: >
      - Prevenir que el atacante
      construya la ruta.

      - Validar/Neutralizar que las entradas
      no contengan elementos especiales
      como: .., ~, /.
    threat: >
      Atacante autenticado
      desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are some inputs used to redirect the user without validation
      ```java
      public partial class WebForm : System.Web.UI.Page{
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form[""url""];
          Response.Redirect(input);
        }
      }
      ```
      The application does not perform server side validation of values
      ```c {3,7,15}
      public void bad() throws Throwable {
        String data;
        //Code to open the connection and read the data not shown

        if (data != null) {
          // POTENTIAL FLAW: no validation of concatenated value
          File file = new File(root + data);
          FileInputStream streamFileInputSink = null;
          InputStreamReader readerInputStreamSink = null;
          BufferedReader readerBufferdSink = null;
          if (file.exists() && file.isFile()) {
            dosomething()
          }
        }
      }
      ```
    compliant: |
      The application should avoid redirecting based on external inputs, but, if needed, should always validate the values and sanitize them
      ```java
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form[""url""];
          input = input.replaceAll("[~^\\(/.)]*", "");
          Response.Redirect(input);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'064':
  en:
    title: Traceability loss - Server's clock
    description: >
      The systems internal clock
      is not synced with NTP servers.
    impact: >
      Write log entries with a wrong date.
    recommendation: >
      Sync the server date
      with a NTP server.
    threat: >
      Anonymous attacker
      from the Internet.
  es:
    title: Traceability loss - Server's clock
    description: >
      El reloj interno del sistema
      no está sincronizado con servidores NTP.
    impact: >
      Escribir entradas de logs
      con una fecha errónea.
    recommendation: >
      Sincronizar la fecha del servidor
      con un servidor NTP.
    threat: >
      Atacante anónimo
      desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The http headers shown an incorrectly set up clock
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 "Wrong Clock" GMT
      ```
    compliant: |
      The clock is correctly configured for all the server responses
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:38:00 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['075', '320']
  metadata:
    en:
      details: __empty__
'065':
  en:
    title: Cached form fields
    description: >
      The application
      does not disable caching of input fields,
      thus the information will be stored
      in the browser's cache.
    impact: Obtain valid users of the application.
    recommendation: >
      The data cache to browsers level
      must be disabled
      using some of these methods:

      - Use HTTP control headers
      that prevent cache.

      - Use meta-tags in HTML pages.

      - Disable the autocomplete field
      to prevent cache to fields level.
    threat: >
      Anonymous attacker from local network.
  es:
    title: Cached form fields
    description: >
      El formulario no deshabilita
      la característica de autocompletado,
      por lo que la información quedará almacenada
      en el caché del navegador.
    impact: Obtener usuarios válidos de la aplicación.
    recommendation: >
      El caché de datos a nivel de navegador
      se debe deshabilitar
      usando alguno de estos métodos:

      - Usar cabeceras de control HTTP
      que prevengan caché.

      - Usar meta-tags en las páginas HTML.

      - Deshabilitar el campo autocomplete
      para prevenir caché a nivel de campos.
    threat: >
      Atacante anónimo desde red local.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are forms in the application that allow for auto-complete functionalities, also the application does not use meta tags to disable browsers cache
      ```html
      <!DOCTYPE html>
      <html>
        <head>
          <title>Cache type vulnerabilities</title>
          <meta charset="UTF-8" />
        </head>
        <body>
          <form action="/help/readerlogin-auth" method="POST">
            <input type="hidden" name="r" value="/help/" />
            <div class="form-group">
              <label class="control-label" for="password">Username:</label>
              <input type="text" id="username" name="username" class="form-control" />
            </div>
            <div class="form-group">
              <label class="control-label" for="password">Password:</label>
              <input type="password" id="password" name="password" class="form-control" />
            </div>
            <div class="col-lg-4 pw-reset-link">
                <a href="#" data-toggle="modal" id="pw-reset-link" data-target="#hg-password-reset">Reset Password</a>
              </div>
              <div class="text-right">
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
          </form>
        </body>
        <script src="https://example.com/example-framework.js">
        </script>
        <link href="/media/examples/link-element-example.css" rel="stylesheet">
        </link>
      </html>
      ```
    compliant: |
      The http headers of the application are set to prevent cache
      ```http
      GET /tutorials/other/top-20-mysql-best-practices/ HTTP/1.1
      Host: hostname
      User-Agent: Mozilla/5.0
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      Accept-Language: en-us,en;q=0.5
      Cache-control: no-cache
      ```
      Example without cache type vulnerabilities
      ```html
      <html>
        <head>
          <title>Webpage without cache type vulnerabilities</title>
          <META HTTP-EQUIV="Pragma" CONTENT="no-cache">
          <META HTTP-EQUIV="Expires" CONTENT="-1">
          <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=utf-8">
        </head>
        <body>
            <form autocomplete="off" onsubmit="return false;">
              <label>Email</label>
              <input autofocus="autofocus" class="form-control" id="username" type="email" autocomplete="off"/>
              <label>Password</label><input class="form-control" id="password" type="password" autocomplete="off"/>
              <button class="btn btn-primary btn-block" id="btn-login">
                &nbsp; Sign In
              </button>
            </form>
        </body>
        <script src="https://example.com/example-framework.js"
            integrity="sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC">
        </script>
        <link href="/media/examples/link-element-example.css" rel="stylesheet"
            integrity="sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC">
        </link>
      </html>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['177']
  metadata:
    en:
      details: __empty__
'066':
  en:
    title: Technical information leak - Console functions
    description: >
      The application uses console functions: log, info, warning.
      The usage of these functions in productions environments
      may lead to information leakages
      and reveal vulnerable methods, technologies, or logic.
    impact: >
      Gather technical information to craft
      more complex attack vectors.
    recommendation: >
      Avoid the use of console functions
      in production environments.
      Instead, encourage the use of logs
      to register errors and exceptional events
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Technical information leak - Console functions
    description: >
      La aplicación hace uso de funciones console: log, info, warning.
      El uso de estas funciones en ambientes productivos
      puede conducir a fugas de información
      y revelar métodos, tecnologías, o lógica vulnerable.
    impact: >
      Recopilar información técnica
      para elaborar vectores de ataque más complejos.
    recommendation: >
      Evitar el uso de funciones console
      en ambientes productivos.
      En su lugar registrar los errores y eventos
      en logs debidamente protegidos
    threat: >
      Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There are console functions in the production code
      ```c {3,7,15}
      using System;
      namespace Example {
        public class Example {
          public Test() {
            var text_str = "hello world";
            Console.WriteLine($"String: {text_str}");
          }
        }
      }
      ```
    compliant: |
      No console functions in production code
      ```c {3,7,15}
      using System;
      namespace Example {
        public class Example {
          public Test() {
            var text_str = "hello world";
            //Code to do something
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: |
        In front-end programming,
        JavaScript's Console object
        provides access to the browser's
        debugging console[^1].
        Arguments passed to `log`, `warn`
        and `error` methods
        are visible to the user that
        is using the website,
        it's also visible to attackers.

        As per Fluid Attacks' criteria[^2]
        the application must not disclose
        internal system information
        such as stack traces
        because this information can be leveraged
        to further exploit other vulnerabilities.

        Developers tend to do debugging
        the following way:

        ```js {3}
        try { /* Business logic code goes here ... */ }
        catch (err) {
          console.error(err);
        }
        ```

        But this ends in lots of information
        that attackers use to better understand
        the inner workings on the system,
        aiding them in creating
        and improving attack vectors.

        ```log
        Error: <rect> attribute x: Expected length, "NaN".
        (anonymous) @ cdnjs.cloudflare.com/ajax/libs/d3/5.16.0/d3.min.js:2
        Error: <rect> attribute y: Expected length, "NaN".
        (anonymous) @ cdnjs.cloudflare.com/ajax/libs/d3/5.16.0/d3.min.js:2
        Error: <rect> attribute transform: Expected number, "rotate(NaN, NaN, NaN)".
        ...
        ```
'067':
  en:
    title: Improper resource allocation
    description: >
      The system allocates unnecessary resources
      due to the use of
      improper programming practices
      or inefficient algorithms.
      Alternatively,
      the allocation can be controlled
      by an external source (e.g., user input),
      and hence,
      requests that consume
      an enormous amount of resources
      are processed without any restriction.
    impact: >
      Exhauste the servers resources
      and thus, prevent other users
      from accessing the server.
    recommendation: >
      Use stable and optimized libraries
      to perform functions
      without a large computational expense.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Improper resource allocation
    description: >
      El sistema asigna
      recursos de máquina innecesarios
      debido al uso de prácticas
      de programación inadecuadas
      o algoritmos ineficientes.
      Alternativamente,
      la aisgnación puede ser controlada
      por una fuente externa
      (Ej: entrada de usuario),
      por lo tanto,
      se procesan solicitudes que consumen
      una cantidad de recursos enormes
      sin ninguna restricción.
    impact: >
      Agotar los recursos del
      servidor impidiendo así que otros
      usuarios puedan acceder a él.
    recommendation: >
      Utilizar librerías estables
      y optimizadas para realizar funciones
      sin mucho gasto computacional.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      An improper sorting algorithm is an example of improper resource allocation
      ```java
      public class QuickSortDemo {
        public static void main(String args[unsorted]) {
          System.out.println("Unsorted array :" + Arrays.toString(unsorted));

          QuickSort algorithm = new QuickSort();
          algorithm.sort(unsorted);

          // printing sorted array
          System.out.println("Sorted array :" + Arrays.toString(unsorted));
        }
      }
      ```
    compliant: |
      Efficient algorithms should be used to handle data
      ```java
      public static void bubbleSort(int[] numbers) {
        System.out.printf("Unsorted array in Java :%s %n", Arrays.toString(numbers));
        for (int i = 0; i < numbers.length; i++) {
          for (int j = numbers.length -1; j > i; j--) {
            if (numbers[j] < numbers[j - 1]) {
              swap(numbers, j, j-1);
            }
          }
        }
        System.out.printf("Sorted Array using Bubble sort algorithm :%s %n",
          Arrays.toString(numbers));
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['072', '158', '164', '173']
  metadata:
    en:
      details: __empty__
'068':
  en:
    title: Insecure session expiration time
    description: >
      User sessions do not expire
      after 5 minutes of inactivity.
    impact: >
      - Obtain user information.

      - Upload files to the application
      without authorization.
    recommendation: >
      Close the sessions
      when they remain inactive
      more than 5 minutes.
    threat: >
      Anonymous attacker from local network
      with access to an unatended session.
  es:
    title: Insecure session expiration time
    description: >
      La sesión de usuario
      de la aplicación no expira
      después de 5 minutos de inactividad.
    impact: >
      - Obtener información del usuario.

      - Subir archivos a la aplicación
      sin autorización.
    recommendation: >
      Cerrar las sesiones
      cuando permanezcan inactivas
      más de 5 minutos.
    threat: >
      Atacante anónimo desde red local
      con acceso a una sesión desatendida.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not define a secure limit of inactivity before expiring user session
      ```javascript
      app.use(
        session({
          secret: "secretkey",
          resave: true,
          saveUninitialized: false,
          cookie: {
            //Insecure expiration timeout for sessions
            expires: 100*365*24*60*60*1000
          }
        })
      );
      ```
    compliant: |
      The application sets a timeout limit for session id
      ```javascript
      app.use(
        session({
          secret: "secretkey",
          resave: true,
          saveUninitialized: false,
          cookie: {
            // Session expires after 5 min of inactivity.
            expires: 300000
          }
        })
      );
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['023']
  metadata:
    en:
      details: __empty__
'069':
  en:
    title: Weak CAPTCHA
    description: >
      The system uses
      an insecure CAPTCHA implementation
      that allows the usage
      of optical recognition tools
      to automatically pass it.
    impact: >
      Bypass security mechanisms
      to perform automated attacks.
    recommendation: >
      Ensure that captchas response
      is at servers level
      and is not exposed
      on the HTML web pages code,
      also,
      ensure that captcha
      can not be read by an OCR.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Weak CAPTCHA
    description: >
      El formulario presenta
      una función de captcha insegura
      que permite automatizar la lectura
      y uso de la información de validación
      con herramientas de reconocimiento óptico.
    impact: >
      Saltar mecanismos de seguridad
      para realizar ataques automatizados.
    recommendation: >
      Asegurarse que la respuesta del captcha
      se encuentre a nivel de servidor
      y no expuesto en el HTML de la web,
      también asegurarse que el Captcha
      no sea leído por un OCR.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There is an insecure configuration of the captcha functionality
      ```php
      <?php
      if( isset( $_POST[ 'Change' ] ) && ( $_POST[ 'step' ] == '1' ) ) {
        // Hide the CAPTCHA form
        $hide_form = true;
        // Get input
        $pass_new  = $_POST[ 'password_new' ];
        $pass_conf = $_POST[ 'password_conf' ];
        // Check CAPTCHA from 3rd party
        $resp = recaptcha_check_answer(
          $_DVWA[ 'recaptcha_private_key'],
          $_POST['g-recaptcha-response']
        );
        // Did the CAPTCHA fail?
        if( !$resp ) {
          $html     .= "<pre><br />The CAPTCHA was incorrect. Please try again.</pre>";
          $hide_form = false;
          return;
        }
        else {
          //The step value can be modified on the client side and the captcha can be bypassed
          if( isset( $_POST[ 'Change' ] ) && ( $_POST[ 'step' ] == '2' ) ) {
          // Hide the CAPTCHA form
          $hide_form = true;// Get input
          $pass_new  = $_POST[ 'password_new' ];
          $pass_conf = $_POST[ 'password_conf' ];
          // Code to check if both password match
        }
      }
      ?>
      ```
    compliant: |
      The 3rd party captcha service is securely configured on the server side
      ```php
      <?php
      if( isset( $_POST[ 'Change' ] ) ) {
        // Check Anti-CSRF token
        checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' );
        // Hide the CAPTCHA form
        $hide_form = true;
        // Get input
        $pass_new  = $_POST[ 'password_new' ];
        $pass_new  = stripslashes( $pass_new );
        $pass_new  = md5( $pass_new );
        $pass_conf = $_POST[ 'password_conf' ];
        $pass_conf = stripslashes( $pass_conf );
        $pass_conf = md5( $pass_conf );
        $pass_curr = $_POST[ 'password_current' ];
        $pass_curr = stripslashes( $pass_curr );
        $pass_curr = md5( $pass_curr );
        // Check CAPTCHA from 3rd party
        $resp = recaptcha_check_answer(
          $_DVWA[ 'recaptcha_private_key' ],
          $_POST['g-recaptcha-response']
        );
        // Did the CAPTCHA fail?
        if( !$resp ) {
          // What happens when the CAPTCHA was entered incorrectly
          $html .= "<pre><br />The CAPTCHA was incorrect. Please try again.</pre>";
          $hide_form = false;
        }
        else {
          // Check that the current password is correct
          $data = $db->prepare( 'SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;' );
          $data->bindParam( ':user', dvwaCurrentUser(), PDO::PARAM_STR );
          $data->bindParam( ':password', $pass_curr, PDO::PARAM_STR );
          $data->execute();
          // Check passwords and update database
          if( ( $pass_new == $pass_conf) && ( $data->rowCount() == 1 ) ) {
            // Update the database
            $data = $db->prepare( 'UPDATE users SET password = (:password) WHERE user = (:user);' );
            $data->bindParam( ':password', $pass_new, PDO::PARAM_STR );
            $data->bindParam( ':user', dvwaCurrentUser(), PDO::PARAM_STR );
            $data->execute();// Feedback for the end user - success!
            $html .= "<pre>Password Changed.</pre>";
          }
          else {
            // Feedback for the end user - failed!
            $html .= "<pre>There was a mistake</pre>";
            $hide_form = false;
          }
        }
      }
      // Generate Anti-CSRF token
      generateSessionToken();
      ?>
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237']
  metadata:
    en:
      details: __empty__
'070':
  en:
    title: Insecure service configuration - ELB
    description: >
      A misconfiguration or default setting on
      Elastic Load Balancers that can cause to
      unintentionally increase the attack surface
      of the company cloud infrastructure.
    impact: >
      - Result in the connection between load balancer
      and server being exploited.

      - The front-end connection between the client and
      the load balancer is vulnerable to eavesdropping
      and man-in-the-middle (MitM) attacks.
    recommendation: >
      - Application load balancers should use
      acceptable policies.

      - Create a custom ELB SSL security policy
      that contains secure ciphers.

      - Strongly advised that the load balancer
      uses a secure listener.
    threat: >
      Unauthorized attacker from adjacent
      network performing a MitM.
  es:
    title: Insecure service configuration - ELB
    description: >
      Una configuración errónea o por defecto en los
      Elastic Load Balancers que puede hacer que aumente
      involuntariamente la superficie de ataque de la
      infraestructura de la nube de la empresa.
    impact: >
      - Que la conexión entre el equilibrador de carga
      y el servidor sea explotada.

      - La conexión frontal entre el cliente y el
      equilibrador de carga es vulnerable a los ataques
      de escucha y de hombre en el medio (MitM).
    recommendation: >
      - Los balanceadores de carga de aplicaciones
      deben utilizar políticas aceptables.

      - Cree una política de seguridad SSL del ELB
      personalizada que contenga cifrados seguros.

      - Se recomienda encarecidamente que el equilibrador
      de carga utilice un oyente seguro.
    threat: >
      Atacante no autorizado de la red
      adyacente que realiza un MitM.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The port property of the resource is not set to a secure value
      ```terraform
      resource "aws_lb_listener" "front_end" {
        load_balancer_arn = aws_lb.front_end.arn
        port              = "40"
        protocol          = "HTTPS"
        ssl_policy        = "ELBSecurityPolicy-FS-1-1-2019-08"
        certificate_arn   = "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4"

        default_action {
          type             = "forward"
          target_group_arn = aws_lb_target_group.front_end.arn
        }
      }
      ```
      Resource uses unsafe http protocol
      ```yaml
      Resources:
        listener1:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
          DefaultActions:
            - Type: "redirect"
              RedirectConfig:
                Protocol: "HTTPS"
                Port: 443
                Host: "#{host}"
                Path: "/#{path}"
                Query: "#{query}"
                StatusCode: "HTTP_301"
          LoadBalancerArn: myLoadBalancer
          Port: 80
          Protocol: "HTTP"
          SslPolicy: ELBSecurityPolicy-2016-08
      ```
      Using the AWS CLI, check the ELBv2 security policy using the following command
      ```
      $ aws elbv2 describe-listeners
            --region us-east-1
            --load-balancer-arn arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/app/cc-internet-facing-alb/aaaabbbbccccdddd
            --query 'Listeners[*].SslPolicy'
      ```
      Verify that the return output uses the most recent secutiry default configurations defined by AWS
    compliant: |
      The port property and security policy are set to secure values
      ```terraform
      <resource "aws_lb_listener" "front_end" {
        load_balancer_arn = aws_lb.front_end.arn
        port              = "443"
        protocol          = "HTTPS"
        ssl_policy        = "ELBSecurityPolicy-TLS13-1-3-2021-06"
        certificate_arn   = "arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4"

        default_action {
          type             = "forward"
          target_group_arn = aws_lb_target_group.front_end.arn
        }
      }
      ```
      ```yaml
      Resources:
        listener1:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
          DefaultActions:
            - Type: "redirect"
              RedirectConfig:
                Protocol: "HTTPS"
                Port: 443
                Host: "#{host}"
                Path: "/#{path}"
                Query: "#{query}"
                StatusCode: "HTTP_301"
          LoadBalancerArn: myLoadBalancer
          Port: 80
          Protocol: "HTTPS"
          SslPolicy: ELBSecurityPolicy-TLS13-1-3-2021-06
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'071':
  en:
    title: Insecure or unset HTTP headers - Referrer-Policy
    description: >
      The server is missing
      the Referrer-Policy HTTP header.
      Alternatively,
      the headers configuration is unsafe.
    impact: >
      Leak website domain and path
      to external services.
    recommendation: >
      Set the Referrer-Policy header
      to no-referrer, same-origin,
      strict-origin,
      or strict-origin-when-cross-origin
      in the server responses.
    threat: >
      Unauthorized attacker
      from the Internet.
  es:
    title: Insecure or unset HTTP headers - Referrer-Policy
    description: >
      El servidor carece
      del encabezado HTTP Referrer-Policy.
      Alternativamente,
      la configuración del mismo es insegura.
    impact: >
      Filtrar el dominio del sitio web
      y su ruta a servicios externos.
    recommendation: >
      Establecer la cabecera
      Referrer-Policy a no-referrer,
      same-origin, strict-origin,
      o strict-origin-when-cross-origin
      en las respuestas del servidor.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The referrer policy of the http headers are insecurely configured
      ```http
      GET http://localhost/
      Referrer-Policy: none
      ```
    compliant: |
      The referrer policy are set to a secure value
      ```http
      GET http://localhost/
      Referrer-Policy: strict-origin-when-cross-origin
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['062', '349']
  metadata:
    en:
      details: __empty__
'072':
  en:
    title: Duplicate code
    description: >
      The application's source code
      has duplicate code,
      which may cause unexpected behaviors.
    impact: >
      - Reduce the maintainability of the code.

      - Facilitate the propagation of errors if the
      duplicate code contains any vulnerability.
    recommendation: >
      Ensure that source code
      does not have classes,
      functions or repeated methods.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Duplicate code
    description: >
      Se encuentra código
      que está repetido
      en diferentes archivos del código fuente
      lo que puede generar
      comportamientos inesperados
      en la aplicación.
    impact: >
      - Reducir la capacidad de mantenimiento del código.

      - Facilitar la propagación de errores si el
      código duplicado contiene alguna vulnerabilidad.
    recommendation: >
      Asegurarse de que el código fuente
      no tenga clases,
      funciones o métodos repetidos.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is duplicate code with the same functionality in a production stage
      ```javascript
      app.post("/register", function (req, res) {
        var username = req.body.username
        var password = req.body.password
        User.register(new User({ username: username }),
            password, function (err, user) {
          if (err) {
            return res.render("register");
          }
        });
      });
      app.post("/register", function (req, res) {
        var username = req.body.username
        var password = req.body.password
        User.register(new User({ username: username }),
            password, function (err, user) {
          if (err) {
            return res.render("register");
          }
        });
      });
      ```
    compliant: |
      There is no commented out code in the production environment
      ```javascript
      app.post("/register", function (req, res) {
        var username = req.body.username
        var password = req.body.password
        User.register(new User({ username: username }),
            password, function (err, user) {
          if (err) {
            return res.render("register");
          }
        });
      });
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['162']
  metadata:
    en:
      details: __empty__
'073':
  en:
    title: Improper authorization control for web services - RDS
    description: >
      Some RDS instances can be publicly accessible,
      which can compromise the stored information.
    impact: >
      Obtain confidential information of the database.
    recommendation: >
      Ensure that the relational databases
      are accesible only by users and roles
      authenticated and authorized.
    threat: >
      Anonymous attacker on the Internet.
  es:
    title: Improper authorization control for web services - RDS
    description: >
      Algunas instancias de RDS
      pueden ser accedidas públicamente,
      con lo cual es posible comprometer
      la información allí almacenada.
    impact: >
      Obtener información confidencial de la base de datos.
    recommendation: >
      Garantizar que las bases de datos relacionales
      sean accesibles únicamente por usuarios
      y roles autenticados y autorizados.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is a publicly accessible sensitive resource
      ```terraform
      resource "aws_rds_cluster_instance" "cluster_instances" {
        count               = 2
        publicly_accessible = true
        identifier          = "aurora-cluster-demo-${count.index}"
        cluster_identifier  = aws_rds_cluster.default.id
        instance_class      = "db.r4.large"
        engine              = aws_rds_cluster.default.engine
        engine_version      = aws_rds_cluster.default.engine_version
      }
      ```
      Insecure encryption settings
      ```yaml
      Resources:
        RDSCluster:
          Properties:
            DBClusterParameterGroupName:
              Ref: RDSDBClusterParameterGroup
            DBSubnetGroupName:
              Ref: DBSubnetGroup
            Engine: aurora
            MasterUserPassword:
              Ref: password
            MasterUsername:
              Ref: username
            StorageEncrypted: false
          Type: "AWS::RDS::DBCluster"
      ```
      Using the AWS CLI, the following commands check if the RDS is publicly accessible
      ```
      $ aws rds describe-db-instances
            --region us-east-1
            --db-instance-identifier mysql-production-db
            --query 'DBInstances[*].PubliclyAccessible'
      $ aws ec2 describe-security-groups
            --region us-east-1
            --group-ids {sg_id}
            --query 'SecurityGroups[*].IpPermissions'
      ```
      If the first command returns the flag True, and the security group associated with the instance is using the 0.0.0.0/0 CIDR/IP for inbound rules (second command), the RDS is publicly accessible and insecure
    compliant: |
      All sensitive resources are safely configured with restricted access
      ```terraform
      resource "aws_rds_cluster_instance" "cluster_instances" {
        count               = 2
        publicly_accessible = false
        identifier          = "aurora-cluster-demo-${count.index}"
        cluster_identifier  = aws_rds_cluster.default.id
        instance_class      = "db.r4.large"
        engine              = aws_rds_cluster.default.engine
        engine_version      = aws_rds_cluster.default.engine_version
      }
      ```
      The resource is securely encrypted
      ```yaml
      Resources:
        RDSCluster1:
          Properties:
            DBClusterParameterGroupName:
              Ref: RDSDBClusterParameterGroup
            DBSubnetGroupName:
              Ref: DBSubnetGroup
            Engine: aurora
            MasterUserPassword:
              Ref: password
            MasterUsername:
              Ref: username
            StorageEncrypted: true
          Type: "AWS::RDS::DBCluster"
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['096', '176', '265']
  metadata:
    en:
      details: __empty__
'075':
  en:
    title: Unauthorized access to files - APK Content Provider
    description: >
      The Content Provider API
      allows third party applications
      installed in the device
      to retrieve data stored
      by the application.
      Access to this data
      must not be allowed
      to all applications by default.
      Instead,
      (and only if required)
      specific allow-lists must be used.
    impact: >
      Leak application information
      to all applications
      installed in the device
      through the Content Provider API.
    recommendation: >
      Deny access to all Content Providers with:
      android:exported=false
      and android:grantUriPermissions=false.
      If required
      you can allow specific Content Providers
      by using grant-uri-permission.
    threat: >
      Unauthorized local attacker
      owner of a third party application
      installed in the device.
  es:
    title: Unauthorized access to files - APK Content Provider
    description: >
      La Content Provider API
      permite a aplicaciones de terceros
      instaladas en el dispositivo
      acceder a información almacenada
      por la aplicación.
      El acceso a estos datos
      no debe ser permitido
      a todas las aplicaciones por defecto.
      En su lugar
      (y solo si se requiere)
      se debe usar listas de control
      de acceso específicas.
    impact: >
      Filtrar información de la aplicación
      a todas las aplicaciones
      instaladas en el dispositivo
      a través de la Content Provider API.
    recommendation: >
      Denegar el acceso
      a todos los Content Providers con:
      android:exported=false
      y android:grantUriPermissions=false.
      Si se requiere
      se puede permitir Content Providers específicos
      usando grant-uri-permission.
    threat: >
      Atacante local sin autorización
      propietario de una aplicación de terceros
      instalada en el dispositivo.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows external content providers with an export and Uri permissions set to true
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
          <uses-permission android:name="android.permission.SEND_SMS"/>
          <application android:label="@7F040001" android:icon="@7F020002">
              <provider
                android:authorities="com.andriod.databasetest.contentprovider"
                android:name=".db.ContentProviderDb"
                android:exported="true"
                android:grantUriPermissions="true">
              </provider>
          </application>
      </manifest>
      ```
    compliant: |
      Ideally, there should be no access allowed to third party content providers
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" package="com.android.zerosms">
          <uses-permission android:name="android.permission.SEND_SMS"/>
          <application android:label="@7F040001" android:icon="@7F020002">
              <provider
                android:authorities="com.andriod.databasetest.contentprovider"
                android:name=".db.ContentProviderDb"
                android:exported="false"
                android:grantUriPermissions="false">
              </provider>
          </application>
      </manifest>
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['096', '176', '264', '320']
  metadata:
    en:
      details: __empty__
'076':
  en:
    title: Insecure session management
    description: >
      The session token does not expire
      when the user terminates the session
      and can be used
      to post requests afterwards.
    impact: >
      - Access the session of a
      previously authenticated user.

      - Make enquiries to obtain
      confidential information.

      - Obtain business information
      with valid token.
    recommendation: >
      Ensure the expiration of the session token
      after the user logs out.
    threat: >
      Anonymous attacker from the Internet
      with access to a session token.
  es:
    title: Insecure session management
    description: >
      El token de sesión no caduca
      una vez que el usuario cierra la sesión
      y se puede reutilizar
      en futuras solicitudes.
    impact: >
      - Acceder a la sesión de un usuario
      previamente autenticado.

      - Realizar consultas que permitan
      obtener información confidencial.

      - Obtener información de la empresa con
      el token válido.
    recommendation: >
      Garantizar que el token de sesión
      expire luego de que un usuario cierre la sesión
    threat: >
      Atacante anónimo desde Internet
      con acceso a un token de sesión.
  category: Access Subversion
  examples:
    non_compliant: |
      The log out functionality of the application does not delete the session tokens
      ```javascript
      function generateAccessToken(username){
        return jwt.sign(username, process.env.TOKEN_SECRET, {expiresIn: '3600s'});
      }

      function userLogout(userId){
        logout(userId);
      }
      ```
    compliant: |
      After logging out of the application, the session token of the user should be deleted too
      ```javascript
      function generateAccessToken(username){
        return jwt.sign(username, process.env.TOKEN_SECRET, { expiresIn: '1800s'});
      }

      function userLogout(userId, sessionToken){
        logout(userId);
        deleteToken(sessionToken);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['030', '031', '141']
  metadata:
    en:
      details: __empty__
'077':
  en:
    title: ARP spoofing
    description: >
      It is possible
      to supersede other MAC addresses
      in the network
      because the associated switch
      lacks protection mechanisms,
      such as PortSecurity.
    impact: >
      - Steal sensitive information.

      - Facilitate other attacks such as
      Denial-of-Service DoS attacks, session
      hijacking and man-in-the-middle
      MitM attacks.
    recommendation: >
      Set network controls
      (PortSecurity) in the affected switches.
    threat: >
      Attacker from the Internet performig
      a MitM attack.
  es:
    title: ARP spoofing
    description: >
      Es posible suplantar
      direcciones MAC en la red,
      debido a que el suiche asociado
      no cuenta con protecciones
      como PortSecurity.
    impact: >
      - Robar información sensible.

      - Facilitar otros ataques como los
      de denegación de servicio (DoS), el
      secuestro de sesiones y los ataques
      MitM (man-in-the-middle).
    recommendation: >
      Establecer controles de red
      (PortSecurity) en los switches afectados.
    threat: >
      Atacante desde Internet ejecutando
      un ataque MitM.
  category: System Manipulation
  examples:
    non_compliant: |
      There is a switch with port-security disabled
      ```json
      server {
        index: "index.html";
        listen: "localhost:4446 ssl";
        server_name: "localhost";
        port {
          port-number: "4446";
          port-security: disabled;
        }
      }
      ```
    compliant: |
      All switches should have the port security enabled
      ```json
      server {
        index: "index.html";
        listen: "localhost:4446 ssl";
        server_name: "localhost";
        port {
          port-number: "4446";
          port-security:enabled;
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: W
      report_confidence: X
  requirements: ['062', '273']
  metadata:
    en:
      details: __empty__
'078':
  en:
    title: Insecurely generated token
    description: >
      It is possible
      to crack the token's hash
      and obtain the information it is masking
      because it is not generated
      using a secure cryptographic mechanism.
    impact: Reuse session tokens after 14 days created.
    recommendation: >
      Generate a token with random components
      without sensitive information.
    threat: Anonymous attacker from the Internet with access to the hash.
  es:
    title: Insecurely generated token
    description: >
      Es posible revertir el hash del token
      y obtener la información que enmascara
      ya que no se usa un componente aleatorio seguro.
    impact: Reutilizar tokens de sesión después de 14 días de creados.
    recommendation: >
      Generar un token con componentes aleatorios
      sin información sensible.
    threat: Atacante anónimo desde Internet con acceso al hash.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      An insecure hashing algorithm is used to create the token hash
      ```javascript
      function hashPassword(password) {
        const md5sum = crypto.createHash('md5');
        const res = md5sum.update(password);
        return res;
      }
      ```
    compliant: |
      Secure and modern hashing algorithms are used by the application
      ```javascript
      function hashPassword(password) {
        this.salt = crypto.randomBytes(256).toString('hex');
        this.hash = crypto.pbkdf2Sync(password, this.salt, 1000, 64, `sha512`).toString(`hex`);
        return
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['224']
  metadata:
    en:
      details: __empty__
'079':
  en:
    title: Non-upgradable dependencies
    description: >
      Dependencies are not explicitly declared
      (name and version) within the source code.
      They are copied directly into the
      repositories.
    impact: >
      - Loss of maintainability because
      dependencies are not maintained.

      - Late update of units in case a
      vulnerability is reported for one of
      the reported vulnerabilities.
    recommendation: >
      All dependencies must be declared
      and must referenced
      with a dependency manager (npm, pip, maven).
      This allows to standardize
      projects construction and packaging.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Non-upgradable dependencies
    description: >
      Las dependencias
      no se encuentran explícitamente declaradas
      (nombre y versión) dentro del código fuente.
      Se encuentran copiadas directamente
      en los repositorios.
    impact: >
      - Perder mantenibilidad porque no se
      actualizan las dependencias.

      - Actualizar tardíamente las
      dependencias en caso que se reporte
      unavulnerabilidad para una de las
      que fueron reportadas.
    recommendation: >
      Todas las dependencias
      deben estar declaradas
      y se deben referenciar
      con un gestor de dependencias
      (npm, pip, maven).
      Esto permite estandarizar la construcción
      y empaquetado de proyectos.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are some undeclared dependencies in the code
      ```javascript
      var moduleName = require("<name of dependency>");
      const createUser = (user) => {
          moduleName(user);
      }
      ```
    compliant: |
      All code dependencies are correctly referenced with a defined version
      ```json
      {
        "name": "test",
        "version": "1.0.0",
        "description": "nothing",
        "main": "index.js",
        "author": "Luis Saavedra",
        "license": "MIT",
        "private": false,
        "dependencies": {
          "@angular/core": "^13.3.3",
          "cloudron-sysadmin": "1.0.0",
        },
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['302']
  metadata:
    en:
      details: __empty__
'080':
  en:
    title: Business information leak - Customers or providers
    description: >
      Sensitive information such as customer or providers
      lists, emails, phone numbers or identifiers
      can be obtained from the application.
    impact: >
      Obtain sensitive information to craft new attack vectors.
    recommendation: >
      Implement security controls to ensure that the leaked information
      can be accessed only by authenticated and authorized users.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Business information leak - Customers or providers
    description: >
      Información sensible como listas de proveedores o clientes,
      correos electrónicos, números de teléfono o identificadores
      pueden ser obtenidos de la aplicación.
    impact: >
      Obtener información sensible para elaborar nuevos vectores de ataque.
    recommendation: >
      Implementar controles de seguridad para garantizar
      que la información filtrada sólo puede ser accedida
      por usuarios autenticados y autorizados.
    threat: >
      Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Some sensitive information (Password) in returned in plain text values
      ```javascript
      const registerUser = async (req, res, next) => {
        const { username, password } = req.body
        try {
          await User.create({
            username,
            password,
          }).then(user =>
            res.status(200).json({
              message: "User successfully created",
              user,
              password,
            })
          )
          return user, password
        } catch (err) {
          res.status(401).json({
            message: "Something went wrong: User not created",
            error: error.mesage,
          })
        }
      }
      ```
    compliant: |
      Passwords should always be stored in encrypted values and never returned as plain text in a response
      ```c {3,7,15}
      const registerUser = async (req, res, next) => {
        const { username, HashPassword } = req.body
        try {
          await User.create({
            username,
            HashPassword,
          }).then(user =>
            res.status(200).json({
              message: "User successfully created",
              user,
            })
          )
        } catch (err) {
          res.status(401).json({
            message: "Something went wrong. User not created",
            error: error.mesage,
          })
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'081':
  en:
    title: Lack of multi-factor authentication
    description: >
      Critical services of the system,
      such as databases,
      shared resources containing sensitive information
      and web services,
      are not protected by a multi-factor
      authentication mechanism.
      This makes it easier for an attacker
      who has compromised a user's account
      to access those resources.
    impact: >
      Multi-factor authentication is flawed to
      the point where it can be bypassed entirely.
    recommendation: >
      Implement a double factor authentication
      by software or hardware
      to increase the protection level
      of the resources authentication.
    threat: Authenticathed attacker from the Internet.
  es:
    title: Lack of multi-factor authentication
    description: >
      Los servicios críticos
      sobre la red interna
      como acceso a bases de datos,
      recursos compartidos con información sensible
      y/o web services,
      no cuentan con una autenticación
      de múltiples factores,
      lo cual hace más fácil para un atacante
      con un usuario comprometido acceder a estos.
    impact: >
      La autenticación de múltiples factores
      es defectuosa hasta hasta el punto de que
      se puede eludir por completo.
    recommendation: >
      Implementar un doble factor de autenticación
      ya sea por software o hardware
      para incrementar el nivel de protección
      de la autenticación
      de los recursos críticos.
    threat: Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Some resources do not allow multi-factor authentication
      ```terraform
      resource "aws_s3_bucket" "bucket" {
        bucket = "some_test_bucket"
        acl    = "private"
        versioning {
          enabled = false
          mfa_delete = true
        }
      }
      ```
    compliant: |
      All resources should be set up to allow multi-factor authentication
      ```terraform
      resource "aws_s3_bucket" "bucket" {
        bucket = "some_test_bucket"
        acl    = "private"
        versioning {
          enabled = true
          mfa_delete = true
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['229', '231', '264', '319', '328']
  metadata:
    en:
      details: __empty__
'082':
  en:
    title: Insecurely deleted files
    description: >
      It is possible to retrieve deleted files
      with sensitive information
      because they were merely sent
      to the Recycle Bin or removed
      using insecure protocols.
    impact: >
      Recover with unauthorized access, deleted
      files with sensitive information.
    recommendation: >
      Good practices must be followed
      to clean, delete,
      and destruction of sensitive information
      (Policies).
    threat: >
      Anonymous attacker from local network.
  es:
    title: Insecurely deleted files
    description: >
      Es posible recuperar archivos
      con información sensible
      de las papeleras de reciclaje,
      esto porque no se eliminan una vez estan allí
      o no se hace siguiendo un protocolo seguro.
    impact: >
      Recuperar acceso no autorizado a archivos
      eliminados con información sensible.
    recommendation: >
      Se deben seguir las buenas prácticas
      para la limpieza, eliminación
      y destrucción de información sensible
      (Políticas).
    threat: >
      Atacante anónimo desde red local.
  category: Information Collection
  examples:
    non_compliant: |
      The files are deleted without making changes to their content, which could still allow for information to be retrieved
      ```java
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object fileToDelete, EventArgs e) {
          file.delete(fileToDelete);
        }
      }
      ```
    compliant: |
      A recommended practice is to overwrite the contents of a file before deleting it
      ```java
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object fileToDelete, EventArgs e) {
          overWriteFile(fileToDelete, "0000000000000")
          file.delete(fileToDelete);
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['183']
  metadata:
    en:
      details: __empty__
'083':
  en:
    title: XML injection (XXE)
    description: >
      It is possible to inject XML code
      into the application's requests,
      which is then interpreted by the server.
      This could allow an attacker
      to perform data exfiltration
      or execute commands remotely.
    impact: >
      Perform various attacks that
      compromise the confidentiality, integrity
      and availability of the system.
    recommendation: >
      Filter the information
      that is received and sent
      by the application
      through white lists.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: XML injection (XXE)
    description: >
      La aplicación afectada
      permite la inyección de código XML
      que es ejecutado de forma remota
      y permite la exfiltración de archivos
      o ejecución remota de comandos.
    impact: >
      Realizar diversos ataques que comprometan
      la confidencialidad, integridad y
      disponibilidad del sistema.
    recommendation: >
      Filtrar la información que recibe
      y envía la aplicación
      por medio de listas blancas.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application does not sanitize input content, which could allow for xml code injection
      ```c {3,7,15}
      public void bad() throws Throwable {
        InputSource  input = new InputSource(userFile);
        String query = "SELECT * from Data";
        String secret = (String)xPath.evaluate(query, input, XPathConstants.STRING);
      }
      ```
    compliant: |
      All input content should be correctly sanitized and filtered
      ```c {3,7,15}
      public void bad() throws Throwable {
        InputSource input = new InputSource(userFile);
        String cleanInput = clearInput(input, allowedContent);
        String query = "SELECT * from Data";
        String secret = (String)xPath.evaluate(query, cleanInput, XPathConstants.STRING);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'084':
  en:
    title: MDNS spoofing
    description: >
      The configuration of the MDNS services
      allows an attacker
      to spoof IP addresses
      effectively hijacking them
      or causing a denial-of-service.
      Alternatively,
      due to a lack of certain security measures,
      it is possible to intercept requests
      to mDNS services
      and obtain information
      about the connected devices.
    impact: >
      Attack vector because it is possible
      to extract administrative credentials
      from the process cache.
    recommendation: >
      Disable LLMR and NBT-NS.
      Configure the firewall
      to filter incoming connections
      from UDP 5353 port.
    threat: >
      Anonymous attacker from local network.
  es:
    title: MDNS spoofing
    description: >
      Es posible interceptar peticiones
      a los servicios de MDNS
      y obtener información
      de los hosts conectados
      debido a que no se cuenta
      con medidas de seguridad en la red.
    impact: >
      Atacar al vector porque es posible
      extraer credenciales administrativas
      desde la caché de los procesos.
    recommendation: >
      Deshabilitar LLMNR y NBT-NS.
      Configurar el firewall
      para filtrar conexiones provenientes
      del puerto UDP 5353.
    threat: >
      Atacante autenticado en la red local.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      Network configuration that allows LLMNR
      ```yaml
      gateway: "My gateway name"
      firewall_service:
        enabled: true
        policy: 'drop'
        log_default_action: true
        firewall_rules:
        - :id: '1'
          :enabled: true
          :llmnr: true
          :destination_port_range: '5353'
          :destination_ip: '00.01.02.03'
          :source_port_range: '5353'
          :source_ip: 'Any'
      ```
    compliant: |
      Verify that the application does not allow LLMNR and NBT-NS
      ```yaml
      gateway: "My gateway name"
      firewall_service:
        enabled: true
        policy: 'drop'
        log_default_action: true
        firewall_rules:
        - :id: '1'
          :enabled: true
          :description: 'disallow_conections'
          :policy: 'disallow'
          :destination_port_range: '5353'
          :destination_ip: '00.01.02.03'
          :source_port_range: '5353'
          :source_ip: 'Any'
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: T
      report_confidence: X
  requirements: ['062', '273']
  metadata:
    en:
      details: __empty__
'085':
  en:
    title: Sensitive data stored in client-side storage
    description: >
      The application stores
      sensitive information
      in the client-side storage
      (localStorage or sessionStorage).
      This exposes the information
      to unauthorized read operations.
    impact: >
      Obtain sensitive information
      through XSS or MitB attacks.
    recommendation: >
      Do not use the client side storage
      to store sensitive information,
      use cookies instead
      by defining their respective
      security attributes.
    threat: >
      Attacker with physical
      or virtual access
      to the victims browser.
  es:
    title: Sensitive data stored in client-side storage
    description: >
      La aplicación almacena
      información confidencial
      en el almacenamiento
      del lado del cliente
      (localStorage o sessionStorage).
      Esto expone la información
      a operaciones de lectura no autorizadas.
    impact: >
      Obtener información sensible
      mediante ataques XSS o MitB.
    recommendation: >
      No usar el client side storage
      para almacenar información sensible,
      usar cookies en su lugar definiendo
      sus respectivos atributos de seguridad.
    threat: >
      Atacante con acceso físico
      o virtual al navegador de la víctima.
  category: Information Collection
  examples:
    non_compliant: |
      Password and session ids are stored in the client side using tools like local storage
      ```javascript
      localStorage.getItem('password');
      localStorage.setItem('whatever', sessionID);
      localStorage.setItem(token.jwt, '123');
      localStorage.getItem(session_token);
      ```
    compliant: |
      Local storage should only be used for non sensitive data storage
      ```javascript
      localStorage.setItem('whatever','non-sensitive');
      localStorage.getItem(non.sensitive);
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['177', '329']
  metadata:
    en:
      details: __empty__
'086':
  en:
    title: Missing subresource integrity check
    description: >
      The application does not properly check
      the integrity of resources loaded
      from third-party servers.
    impact: >
      Embed compromised resources
      from a third party server.
    recommendation: >
      Add the integrity attribute
      to HTML script tags.
    threat: >
      Unauthorized attacker
      from the Internet network.
  es:
    title: Missing subresource integrity check
    description: >
      La aplicación no verifica
      apropiadamente la integridad
      de los recursos cargados
      desde servidores de terceros.
    impact: >
      Embeber recursos comprometidos
      desde un servidor de terceros.
    recommendation: >
      Agregar el atributo integrity
      a las tags script de HTML.
    threat: >
      Atacante sin autorización
      desde la red de Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      There is no integrity secure attribute set on the script tags
      ```html
      <html>
        <head>
          <script src="https://bam-cell.nr-data.net/thing.js"></script>
        </head>
      </html>
      ```
    compliant: |
      All script tags on the application have the integrity attribute set
      ```html
      <html>
        <head>
          <script src="https://bam-cell.nr-data.net/thing.js"
            integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
            crossorigin="anonymous">
          </script>
        </head>
      </html>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['178', '262', '330']
  metadata:
    en:
      details: __empty__
'087':
  en:
    title: Account lockout
    description: >
      It is possible
      to cause account lockouts,
      effectively blocking users
      from accessing the system.
    impact: >
      Avoid the access of valid users to the application.
    recommendation: >
      Avoid blocking users accounts
      as a mechanism of protection,
      make it more restrictive
      or control it to prevent
      an exploitation by attackers.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Account lockout
    description: >
      Es posible bloquear
      las cuentas de los usuarios,
      evitando que accedan al sistema.
    impact: >
      Impedir el acceso de usuarios válidos a la aplicación.
    recommendation: >
      Evitar bloquear las cuentas
      de los usuarios
      como mecanismo de protección,
      hacerlo menos restrictivo
      o controlarlo
      para que no pueda ser explotado
      por atacantes.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has a functionality to block user accounts based on number of login tries
      ```javascript
      app.use((req, res, next) => {
        const userId = req.params.userId;
        const password = req.params.password;
        if(isValidUser(userId, password)){
          //Code to handle login
        } else if(getUserLoginAttempts(userId)>5){
          blockUser(userId);
        }
      })
      ```
    compliant: |
      The application performs automatic password change instead of blocking user accounts
      ```javascript
      app.use((req, res, next) => {
        const userId = req.params.userId;
        const password = req.params.password;
        if(isValidUser(userId, password)){
          //Code to handle login
        } else if(getUserLoginAttempts(userId)>5){
          sendPasswordChange(userId);
          res.redirect("/login");
        }
      })
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['226']
  metadata:
    en:
      details: __empty__
'088':
  en:
    title: Privacy violation
    description: >
      The system violates one
      or more privacy requirements.
    impact: >
      Incur in legal trouble due to
      a violation of user privacy.
    recommendation: >
      Abide by the privacy regulations
      in force.
    threat: >
      Unauthenticated attacker from
      the Iternet in the application.
  es:
    title: Privacy violation
    description: >
      El sistema viola una ó más
      requisitos de privacidad.
    impact: >
      Incurrir en problemas legales
      debido a una violación de la
      privacidad del usuario.
    recommendation: >
      Acatar las regulaciones
      de privacidad vigentes.
    threat: >
      Atacante no autenticado desde
      Internet en la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not have proper functionality to unsubscribe from email notifications
      ```javascript
      app.post('/unsubscribe', async (req, res) => {
        res.redirect("/suscription");
      });
      ```
    compliant: |
      The application allows for users to unsubscribe from email lists, following privacy regulations
      ```javascript
      app.get('/delete', async (req, res) => {
        try {
          const contact = await getContactByEmail(req.query.email);
          if(contact == null) throw `Contact not found.`;
          if (contact.custom_fields.conf_num ==  req.query.conf_num) {
            const listID = await getListID('Newsletter Subscribers');
            await deleteContactFromList(listID, contact);
            res.render('message', { message: 'mymessage' });
          }
        else throw 'Confirmation number does not match or contact is not subscribed'
        }
        catch(error) {
          console.error(error)
          res.render('message', { message: 'mymessage' })
        }
      });
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['189', '310', '311', '312', '313', '314', '315', '316', '317', '318',
    '343']
  metadata:
    en:
      details: __empty__
'089':
  en:
    title: Lack of data validation - Trust boundary violation
    description: >
      The system mixes trusted
      and untrusted data
      in the same data structure
      or structured message.
    impact: >
      Introduce data into critical data structures,
      which could lead to some types
      of injections.
    recommendation: >
      - Prevent the use of untrusted data
      in critical data structures
      or structured messages.
    threat: >
      Authenticated attacker
      from the Internet.
  es:
    title: Lack of data validation - Trust boundary violation
    description: >
      El sistema mezcla datos confiables
      y no confiables
      en la misma estructura de datos
      o mensaje estructurado.
    impact: >
      Introducir datos a estructuras
      de datos críticas,
      lo que podría provocar
      algunos tipos de inyecciones.
    recommendation: >
      - Prevenir el uso de datos no confiables
      en estructuras de datos críticas
      o mensajes estructurados.
    threat: >
      Atacante autenticado
      desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application mixes insecure unvalidated data and insecure id generating method to set critical data
      ```java
      public void insecure(args*) {
        HttpServletRequest request = new HttpServletRequest();
        User currentUser = new User(name, lastname, password);
        currentUser.userId = this.createRandom();
        request.getSession().setAttribute("testInstanceReference", currentUser.getUserId());
      }
      ```
    compliant: |
      Input data is validated and secure methods to generate ids are used to set critical data
      ```java
      public void secure(args*) {
        HttpServletRequest request = new HttpServletRequest();
        String name = clearInput(userName);
        String lastName = clearInput(userLastName);
        User currentUser = new User(name, lastName);
        currentUser.userId = this.getSecureUuid();
        request.getSession().setAttribute("testInstanceReference", currentUser.name);
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'090':
  en:
    title: CSV injection
    description: >
      It is possible to inject formulas
      into fields that are later exported
      as part of CSV files
      and can be interpreted by Excel.
    impact: >
      Inject code into fields to create
      malicious formulas.
    recommendation: >
      Sanitize all the fields
      that will be exported
      to the server
      when the exported file
      is generated.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: CSV injection
    description: >
      Es posible inyectar
      fórmulas en los campos
      que luego son exportados
      en CSV e interpretados por Excel.
    impact: >
      Inyectar código en los campos para
      crear fórmulas maliciosas.
    recommendation: >
      Sanitizar todos los campos
      a exportar en el servidor
      al generar el archivo exportado.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      An input csv file is not correctly validated before uploading into the application system
      ```javascript
      function loadFiles(csvFile) {
        // User csv file could contain harmful fields
        inputCsv = new InputSource(csvFile);
        dataToServer = convertXls(inputCsv);
        //File being uploaded to server as xls file
        upLoadFile(csvFile, credentials, server);
      }
      ```
    compliant: |
      All input csv files have their fields validated to avoid input formulas
      ```javascript
      function loadFiles(csvFile) {
        // User csv file could contain harmful fields
        inputCsv = new InputSource(csvFile);
        //Function to sanitize csv file, escaping characters such as \= and cleaning the data
        try sanitizeFile(inputCsv){
          dataToServer = convertXls(inputCsv);
          upLoadFile(csvFile, credentials, server);
        }catch (e){
          Exception "Your file could not be uploaded";
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'091':
  en:
    title: Log injection
    description: >
      The system logs entries
      that contain input
      from untrusted sources
      without properly validating,
      sanitizing
      or escaping their content.
    impact: >
      Inject code or fake inputs
      in the systems log,
      compromising the integrity
      of logs,
      or in the worst case,
      the system of who is viewing the logs.
    recommendation: >
      Sanitize inputs before
      storing them in the log.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Log injection
    description: >
      Se guardan entradas
      sin validar en los logs del sistema,
      permitiendo la inyección
      de entradas maliciosas.
    impact: >
      Inyectar código o entradas falsas
      en los logs del sistema,
      comprometiendo así la integridad
      de los logs o,
      en el peor caso,
      el sistema de quien esté visualizando
      los logs.
    recommendation: >
      Sanitizar entradas antes
      de guardarlas en el log.
    threat: >
      Atacante autenticado desde Internet.
  category: System Manipulation
  examples:
    non_compliant: |
      Some of the logs use unsanitized input.
      Java code example
      ```java
      public class Test{
        public void insecure(HttpServletRequest req, HttpServletResponse resp) {
          String param1 = req.getParameter("param");
          Logger.info("Param1: " + param1); // Insecure
        }
      }
      ```
      C-sharp code example
      ```c
      public class LogInjectionController : Controller
      {
        public void LogSomething(HttpRequest id)
        {
          //insecure
          var logger = new DBLogger();
          logger.Log(id);

          //secure
          private static readonly log4net.ILog sec_log = log4net.LogManager.GetLogger();
          id_safe = id.Replace('\n', '_').Replace('\r', '_').Replace('\t', '_');
          sec_log.Info(id_safe);
        }
      }
      ```
    compliant: |
      System logs should use correctly sanitized input.
      Java code example
      ```java
      public class Test{
        public void safe(HttpServletRequest req) {
          String param2 = req.getParameter("param2");
          param2 = param2.replaceAll("[\n\r\t]", "_"); //Sanitize parameter
          logger.info("Param1: " + param2); //Safe
        }
      }
      ```
      C-sharp code example
      ```c
      public class LogInjectionController : Controller
      {
        public void LogSomething(HttpRequest id)
        {
          //secure
          private static readonly log4net.ILog sec_log = log4net.LogManager.GetLogger();
          id_safe = id.Replace('\n', '_').Replace('\r', '_').Replace('\t', '_');
          sec_log.Info(id_safe);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['080', '173']
  metadata:
    en:
      details: __empty__
'092':
  en:
    title: Insecure encryption algorithm - Anonymous cipher suites
    description: >
      The application allows connections
      with anonymous cipher suites.
    impact: >
      Obtain sensitive information
      by performing a MitM attack.
    recommendation: >
      Use algorithms considered
      cryptographically secure.
    threat: >
      Unauthorized attacker
      from adjacent network
      performing a MitM attack.
  es:
    title: Insecure encryption algorithm - Anonymous cipher suites
    description: >
      La aplicación acepta conexiones
      con suites de cifrado anónimos.
    impact: >
      Obtener información sensible
      realizando un ataque
      de hombre en el medio MitM.
    recommendation: >
      Utilizar algoritmos considerados
      criptográficamente seguros.
    threat: >
      Atacante sin autorización
      desde red adyacente ejecutando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      There are insecure cipher algorithms used in the application
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "off";
          ssl_ciphers: "TLS_DH_RSA_WITH_SEED_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The application has secure cipher algorithms set
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['148', '149', '150', '181', '336']
  metadata:
    en:
      details: |
        A cipher suite is a set of algorithms
        that help secure a network connection.
        Suites typically use
        Transport Layer Security (TLS)
        or its now-deprecated predecessor
        Secure Socket Layer (SSL).
        The set of algorithms
        that cipher suites usually contain include:
        a key exchange algorithm,
        a bulk encryption algorithm,
        and a message authentication code
        (MAC) algorithm.

        The **key exchange algorithm**
        is used to exchange a key
        between two devices.
        This key is used to encrypt
        and decrypt the messages
        being sent between two machines.

        The **bulk encryption algorithm**
        is used to encrypt the data being sent.

        The **MAC algorithm**
        provides data integrity checks
        to ensure that the data sent
        does not change in transit.
        In addition,
        cipher suites can include signatures
        and an authentication algorithm
        to help authenticate
        the server or client.

        A cipher suite is as secure
        as the algorithms that it contains.
        If the version of encryption
        or authentication algorithm
        in a cipher suite
        have known vulnerabilities,
        the cipher suite and TLS connection
        is then vulnerable.

        ### Weak algorithms

        - **RSA with key < 2048 bytes**,
        can be brute-forced in feasible time

        - **OpenSSL Elliptic Curves**, secp112r1,
        secp112r2, secp128r1, secp128r2,
        secp160k1, secp160r1, secp160r2,
        secp192k1, prime192v1, prime192v2,
        prime192v3, sect113r1, sect113r2, sect131r1,
        sect131r2, sect163k1, sect163r1,
        sect163r2, sect193r1, sect193r2, c2pnb163v1,
        c2pnb163v2, c2pnb163v3,
        c2pnb176v1, c2tnb191v1, c2tnb191v2,
        c2tnb191v3, c2pnb208w1,
        wap-wsg-idm-ecid-wtls1, wap-wsg-idm-ecid-wtls3,
        wap-wsg-idm-ecid-wtls4, wap-wsg-idm-ecid-wtls5,
        wap-wsg-idm-ecid-wtls6, wap-wsg-idm-ecid-wtls7,
        wap-wsg-idm-ecid-wtls8, wap-wsg-idm-ecid-wtls9,
        wap-wsg-idm-ecid-wtls10, wap-wsg-idm-ecid-wtls11,
        oakley-ec2n-3, oakley-ec2n-4, brainpoolp160r1,
        brainpoolp160t1, brainpoolp192r1, brainpoolp192t1,
        can be brute-forced in feasible time.
'093':
  en:
    title: Hidden fields manipulation
    description: >
      It is possible
      to modify fields
      that are invisible to the regular user
      and cause undesired behaviors
      in the application.
    impact: >
      Force unwanted actions
      in the application
      modifying resources
      which can not be accessible
      by user.
    recommendation: >
      Send only fields that require
      users inputs in the requests,
      and control the rest
      from the server.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Hidden fields manipulation
    description: >
      Es posible modificar
      campos invisibles al usuario
      para forzar la aplicación
      a comportarse de manera inadecuada.
    impact: >
      Forzar acciones
      indeseadas en la aplicación
      modificando recursos
      a los que el usuario
      no debería tener acceso.
    recommendation: >
      Enviar en las peticiones
      solo los campos
      que requieran entradas del usuario
      y manejar el resto desde el servidor.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are hidden fields in the application forms that could be manipulated
      ```html
      <form action="/action_page.php">
        <h1>Login Form</h1>
        <div class="container">
          <label for="uname"><strong>Username</strong></label>
          <input type="text" placeholder="Enter Username" name="uname" required>
          <label for="psw"><strong>Password</strong></label>
          <input type="password" placeholder="Enter Password" name="psw" required>
          // Using hidden fields
          <input type="hidden" id="location" name="location" value="">
        </div>
        <button type="submit">Login</button>
      </form>
      ```
    compliant: |
      Avoid using hidden input fields without handling them from the server side
      ```html
      <form action="/action_page.php">
        <h1>Login Form</h1>
        <div class="container">
          <label for="uname"><strong>Username</strong></label>
          <input type="text" placeholder="Enter Username" name="uname" required>
          <label for="psw"><strong>Password</strong></label>
          <input type="password" placeholder="Enter Password" name="psw" required>
        </div>
        <button type="submit">Login</button>
      </form>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320']
  metadata:
    en:
      details: __empty__
'094':
  en:
    title: Insecure encryption algorithm - Cipher Block Chaining
    description: >
      The application uses algorithms
      with insecure cipher block chaining.
    impact: >
      Exploit cipher process vulnerability
      and collect sensible information.
    recommendation: >
      Use algorithms considered
      cryptographically secure.
    threat: >
      Unauthorized attacker
      from adjacent network.
  es:
    title: Insecure encryption algorithm - Cipher Block Chaining
    description: >
      La aplicación usa
      algoritmos con CBC inseguros.
    impact: >
      Aprovechar vulnerabilidad
      en el proceso de cifrado
      para recolectar información sensible.
    recommendation: >
      Utilizar algoritmos considerados
      criptográficamente seguros.
    threat: >
      Atacante sin autorización
      desde red adyacente.
  category: Information Collection
  examples:
    non_compliant: |
      CBC algorithms could be forced in feasible time
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_RSA_WITH_IDEA_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      Secure cipher algorithms are defined in the application
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['148', '149', '150', '181', '336']
  metadata:
    en:
      details: __empty__
'095':
  en:
    title: Data uniqueness not properly verified
    description: >
      The application does not properly validate
      the uniqueness of the data,
      allowing an attacker to reuse
      or regenerate information
      that should be valid for one use only.
    impact: >
      Lead to diferent vulnerabilities
      by abusing the misconfigured feature.
    recommendation: >
      Implement validations to ensure
      that the data cannot be reused nor regenerated
      if the application requires a unique value.
    threat: Authenticated attacker from the Internet.
  es:
    title: Data uniqueness not properly verified
    description: >
      La aplicación no valida adecuadamente
      la unicidad de los datos,
      permitiendo a un atacante regenerar
      o reutilizar información
      que debería ser válida para un solo uso.
    impact: >
      Conducir a diferentes diferentes vulnerabilidades
      al abusar de la ausencia de validación
      de la unicidad de los datos.
    recommendation: >
      Implementar validaciones que garanticen
      que los datos no puedan ser reutilizados
      ni regenerados si la aplicación
      espera un valor único.
    threat: Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A verification code that should only be used once is stored inside the user data
      ```javascript
      function recoverPassword(verificationCode) {
        if isValid(verificationCode){
          user.verificationCode = verificationCode
          //Code to handle user recover password
          ...
        }
      }
      ```
    compliant: |
      verification codes should expire after a timeout and be deleted after a single use
      ```javascript
      function hashPassword(verificationCode) {

        if (isValid(verificationCode) & isNotExpired(verificationCode.timestamp){
          //Code to handle user recover password
          deleteCode(verificationCode)
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '227', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'096':
  en:
    title: Insecure deserialization
    description: >
      The system deserializes objects
      without first validating their content
      nor casting them to a specific type.
    impact: >
      Enable to control the application
      execution flow.
    recommendation: >
      Validate the incoming serialized objects
      and only deserialize them
      if they meet expected properties.
    threat: >
      Authenticathed attacker from the Internet.
  es:
    title: Insecure deserialization
    description: >
      Se deserializan objetos
      sin validar su contenido
      ni forzar su tipo.
    impact: >
      Permitir controlar el flujo de
      ejecución de la aplicación.
    recommendation: >
      Validar los objetos serializados entrantes
      y solo deserializarlos si cumplen
      con las propiedades esperadas.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      Input data is not correctly sanitized
      ```c {3,7,15}
      public class XmlSerializerTestCase : Controller {
        public ActionResult unsecuredeserialization(HttpRequest typeName) {
          Tpe t = Type.GetType(typeName);
          XmlSerializer serializer = new XmlSerializer(t);
          XmlSerializer serializer = new XmlSerializer(Type.GetType(typeName));
        }
      }
      ```
      Example that does not specify type name in the serializer
      ```c {3,7,15}
      using Newtonsoft.Json;

      public class ExampleClass{
        public void ExampleClass(){
          var Settings = new JsonSerializerSettings();
          Settings.TypeNameHandling = TypeNameHandling.All;
        }
      }
      ```
    compliant: |
      Verify the expected type of the input before starting a serializer
      ```c {3,7,15}
      public class XmlSerializerTestCase : Controller {
        public ActionResult unsecuredeserialization(HttpRequest typeName) {
          ExpectedType obj = null;
          XmlSerializer serializer = new XmlSerializer(typeof(ExpectedType));
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['173', '321']
  metadata:
    en:
      details: __empty__
'097':
  en:
    title: Reverse tabnabbing
    description: >
      The system allows
      the introduction of a link
      to an external site controlled
      by a malicious actor.
      This site can then redirect the user
      to a different site in the original tab,
      making it look like
      a legitimate redirect performed
      by the system.
    impact: >
      Redirect to the user
      to an external site controlled
      by a malicious actor
      in the tab where original site was,
      leading to a phishing attack.
    recommendation: >
      Set the attribute rel
      with the noopener and noreferrer value
      in each external link.
    threat: >
      Anonymous attacker from local network.
  es:
    title: Reverse tabnabbing
    description: >
      Es posible crear
      un link a un sitio externo
      controlado por un actor malicioso.
      Este sitio redirige al usuario
      a otro sitio en la pestaña original,
      haciendo que parezca
      una redirección legítima de la aplicación.
    impact: >
      Redireccionar al usuario
      a un sitio externo controlado
      por un actor malicioso en la pestaña
      donde tenía antes el sitio original,
      dando paso a ataques tipo Phishing
    recommendation: >
      Establecer el atributo rel
      con el valor noopener y noreferrer
      en cada link externo.
    threat: >
      Atacante anónimo desde red local.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      Some external links are not securely set on the application
      ```html
      <a href="uncontrolledUrl">Link to external web</a>
      ```
    compliant: |
      The rel:noopener attribute is set in all external links of the application
      ```html
      <a href="uncontrolledUrl" rel="noopener noreferrer">Link to external web</a>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['173', '324']
  metadata:
    en:
      details: __empty__
'098':
  en:
    title: External control of file name or path
    description: >
      It is possible to modify the path
      to which an uploaded file will be saved.
    impact: >
      - Save files in paths other than
      those expected by the application.

      - Overwrite important files within the
      system by referring to the path where
      the upload is performed.
    recommendation: >
      Validate uploaded files names
      on the system and restrict
      the storage to destined folders only.
    threat: >
      Anonymous attacker from external network.
  es:
    title: External control of file name or path
    description: >
      Se puede modificar la ruta
      donde se almacenará un archivo cargado
      en el sistema.
    impact: >
      - Guardar archivos en rutas diferentes a
      las esperadas por la aplicación.

      - Sobreescribir archivos importantes
      dentro del sistema tomando como referencia
      la ruta donde se realiza la carga.
    recommendation: >
      Validar el nombre de los archivos cargados
      en el sistema y restringir
      el almacenamiento solo a las carpetas destinadas.
    threat: >
      Atacante anónimo desde red externa.
  category: Data Manipulation
  examples:
    non_compliant: |
      User input is not validated before opening a file
      ```c {3,7,15}
      using System;
      using System.IO;
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string userInput = Request.Params["UserInput"];
          stirng filePath = userInput.path;
          var elem = File.Open(userInput, filePath,  FileMode.Edit);
        }
      }
      ```
    compliant: |
      User input is validated on the server side before granting access to a file
      ```c {3,7,15}
      using System;
      using System.IO;
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string userInput = clearInput(Request.Params["UserInput"]);
          string verifiedFilePath = "/myTrustedPath"
          var elem = File.Open(userInput, verifiedFilePath,  FileMode.Open);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['037', '320']
  metadata:
    en:
      details: __empty__
'099':
  en:
    title: Non-encrypted confidential information - S3 Server Side Encryption
    description: >
      Some S3 buckets do not explicitly enable
      the Server-Side-Encryption (SSE) property.
      So the stored objects are not encrypted at rest,
      exposing their content to leaks by attackers or unauthorized users.
    impact: >
      Compromise sensitive data stored in
      the bucket in plaintext.
    recommendation: >
      Enable the SSE property in all S3 instances.
    threat: >
      Authenticated  attacker from Internet
      with access to the bucket.
  es:
    title: Non-encrypted confidential information - S3 Server Side Encryption
    description: >
      Algunos buckets de S3 no habilitan
      explícitamente la propiedad Server-Side-Encryption (SSE).
      Por lo que los objetos almacenados
      no se encuentran cifrados at rest,
      exponiendo su contenido a fugas
      por atacantes o usuarios no autorizados
    impact: >
      Comprometer datos sensibles del bucket
      almacenados en texto plano.
    recommendation: >
      Habilitar la propiedad SSE en todas las instancias de S3
    threat: >
      Atacante autenticado desde Internet
      con acceso al bucket.
  category: Information Collection
  examples:
    non_compliant: |
      There are unencrypted resources that store sensitive data
      ```yaml
      Resources:
        UnencryptedS3Bucket:
          Type: AWS::S3::Bucket
          DeletionPolicy: Retain
          Properties:
            BucketName: SKIMS-EXAMPLE-BUCKET
        BucketPolicy1:
          Type: AWS::S3::BucketPolicy
          Properties:
            Bucket: DOC-EXAMPLE-BUCKET
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Action:
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - ''
                    - - 'arn:aws:s3:::'
                      - DOC-EXAMPLE-BUCKET
                      - /*
                  Principal: '*'
                  Condition:
                    "Null":
                      's3:x-amz-server-side-encryption': false
      ```
      Using the AWS CLI, the following command checks the bucket encryption configuration
      ```
      $ aws s3api get-bucket-encryption
        --bucket {my_bucket_name}
      ```
      If the command returns the error message "ServerSideEncryptionConfigurationNotFoundError", the default encryption is not enabled and the resource has an insecure configuration
    compliant: |
      Sensitive data is stored in resources with properly defined encryption
      ```yaml
      Resources:
        EncryptedS3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            BucketName: SKIMS-ENCRYPTED-EXAMPLE-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: aws:kms
                    KMSMasterKeyID: KMS-KEY-ARN
          DeletionPolicy: Delete
      ```
      ```terraform
      resource "aws_s3_bucket" "encrypted_bucket_1" {
        bucket = "my_encrypted_bucket_1"
        server_side_encryption_configuration {
          rule {
            apply_server_side_encryption_by_default {
              kms_master_key_id = aws_kms_key.bucket_encryption_key.arn
              sse_algorithm     = "aws:kms"
            }
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['134', '135', '185', '227', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'100':
  en:
    title: Server-side request forgery (SSRF)
    description: >
      It is possible
      to induce the application's server
      into making requests
      to an arbitrary domain.
    impact: >
      - Obtain usable credentials at the
      API Connect endpoint.

      - Read, write and delete user and
      system data.

      - Browse any path registered in the
      system, in the context of Apache Camel.

      - Consume HTTP, FTP, or any valid
      Apache Camel protocol-component services.

      - Obtain information from the network
      adjacent to the server, or its Public IP.

      - Obtain a token from any user, by
      modifying the clientIP field.

      - Evade control mechanisms against
      automated attacks, such as CAPTCHA
      and OTP (dynamic key).

      - Write files to the server, and
      identify its operating system.
    recommendation: >
      The system must avoid
      that the information query
      from the server be controlled
      by users.
      If this is necessary,
      the system must restrict
      the endpoints accepted for query.
    threat: Unauthorized attacker from the Internet.
  es:
    title: Server-side request forgery (SSRF)
    description: >
      El servidor recibe un URL
      o un request similar
      a través de entrada de datos
      y consulta el contenido de este URL,
      pero no garantiza que la petición
      se realice al destino esperado.
    impact: >
      - Obtener credenciales utilizables en
      el endpoint de API Connect.

      - Leer, escribir y eliminar datos de
      los usuarios y del sistema.

      - Navegar por cualquier ruta registrada
      en el sistema, en el contexto de
      Apache Camel.

      - Consumir servicios HTTP, FTP, o de
      cualquier protocolo-componente
      Apache Camel válido.

      - Obtener información de la red adyacente
      al servidor, o su IP Pública.

      - Obtener un token de un usuario cualquiera,
      modificando el campo clientIP.

      - Evadir mecanismos de control contra
      ataques automatizados, como el CAPTCHA y
      el OTP (clave dinámica).

      - Escribir archivos en el servidor, e
      identificar su sistema operativo.
    recommendation: >
      El sistema debe impedir
      que la consulta de información
      de parte del servidor sea controlada
      por los usuarios.
      Si esto es necesario,
      el sistema debe restringir los endpoints
      aceptados para consulta.
    threat: Atacante no autorizado desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The system allows for a request redirect to be set by the user without verifying the data
      ```c {3,7,15}
      using System.Net;
      using System;

      namespace testmod {
        public class Controllers {
          public void ReadContentOfURL(HttpRequest url){
            //Insecure
            WebRequest req = WebRequest.Create(url);
          }
        }
      }
      ```
    compliant: |
      Avoid request redirection to be set by the user, only if absolutely necessary, input should be validated against a whitelist
      ```c {3,7,15}
      using System.Net;
      using System;

      namespace testmod {
        public class Controllers {
          public void ReadContentOfURL(HttpRequest url){
            //Secure
            isVerifiedUrl = verifyUrl(url);
            if isVerifiedUrl{
              WebRequest request = WebRequest.Create(url);
              if (!whiteList.Contains(url)){
                return BadRequest();
              }
            }
          }
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '324']
  metadata:
    en:
      details: __empty__
'101':
  en:
    title: Lack of protection against deletion
    description: >
      The system does not prevent critical objects
      from being deleted accidentally.
    impact: >
      - Result in loss information in case of
      an accidental modification or deletion.

      - Result in loss information in the case
      of a security incident.
    recommendation: >
      Set up automatic backup on DynamoDB
      tables and enable protection against
      accidental deletion.
    threat: >
      Attacker in any scenario that
      modifies or deletes information
      from databases.
  es:
    title: Lack of protection against deletion
    description: >
      El sistema no tiene protecciones
      que impidan que recursos críticos
      sean borrados accidentalmente.
    impact: >
      - Perder información en caso de una
      modificación o borrado accidental.

      - Perder información en caso de un
      incidente de seguridad.
    recommendation: >
      Configurar backup automático en las
      tablas de DynamoDB y habilitar protección
      contra borrado accidental.
    threat: >
      Atacante en cualquier escenario
      que llegue a modificar o borrar la
      información de las bases de datos.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is a resource configure without deletion prevention policies and safeguards
      ```terraform
      resource "azurerm_key_vault" "vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
        soft_delete_retention_days = 7
      }
      ```
    compliant: |
      Sensitive resources have protection against deletion and backup policies
      ```terraform
      resource "azurerm_key_vault" "not_vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
        soft_delete_retention_days = 7
        soft_delete_enabled        = true
        purge_protection_enabled   = true
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'102':
  en:
    title: Email uniqueness not properly verified
    description: >
      The system allows the plus character
      in the email registration process.
      An attacker could abuse this feature
      to create several accounts pointing to the same email.
    impact: Create multiple accounts with the same email.
    recommendation: >
      The system must validate
      emails in such way
      that an inbox only can be
      associated or represent an account.
    threat: Anonymous attacker from the Internet.
  es:
    title: Email uniqueness not properly verified
    description: >
      El sistema permite el uso del carácter suma
      para registrar un correo de un usuario.
      Esto le permite a un atacante abusar de esta funcionalidad
      para crear múltiples cuentas que apunten al mismo correo electrónico.
    impact: Crear múltiples cuentas con el mismo correo electrónico.
    recommendation: >
      El sistema debe validar los correos
      de manera que un mismo buzón
      solo pueda estar asociado
      y/o representar una cuenta.
    threat: Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is no verification for duplicate emails
      ```javascript
      const registerUser = async (req, res, next) => {
        const { username, password, email } = req.body
        try {
          //The method does not check if the email is duplicated before creating a new user
          await User.validate({
            username,
            password,
          }).then(user =>
            res.status(200).json({
              message: "User successfully created",
            })
          )
          return user, password, email
        } catch (err) {
          res.status(401).json({
            message: "Something went wrong: User not created",
            error: error.mesage,
          })
        }
      }
      ```
    compliant: |
      Passwords should always be stored in encrypted values and never returned as plain text in a response
      ```javascript
      const registerUser = async (req, res, next) => {
        const { username, password, email } = req.body
        try {
          //The validation method also checks if the email already exists
          await User.validate({
            username,
            password,
            email,
          }).then(user =>
            res.status(200).json({
              message: "User successfully created",
            })
          )
          return user, password, email
        } catch (err) {
          res.status(401).json({
            message: "Something went wrong: User not created",
            error: error.mesage,
          })
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['121']
  metadata:
    en:
      details: __empty__
'103':
  en:
    title: Insufficient data authenticity validation - APK signing
    description: >
      The APK is not digitally signed.
    impact: >
      Mischief users into installing an APK
      that is not owned by the original author.
    recommendation: >
      Digitally sign the APK.
    threat: >
      Non-authenticated attacker
      from the Internet.
  es:
    title: Insufficient data authenticity validation - APK signing
    description: >
      El APK no está firmado digitalmente.
    impact: >
      Engañar a los usuarios
      para que instalen un APK
      que no es propiedad del autor original.
    recommendation: >
      Firmar digitalmente el APK.
    threat: >
      Atacante no autenticado
      desde Internet.
  category: Data Manipulation
  examples:
    non_compliant: |
      Unconfigured signing keys for the apk
      ```json
      android {
        signingConfigs {
          getByName("config") {
            empty
          }
        }
        ...
      }
      ```
    compliant: |
      Correctly configure the signing keys before building the apk
      ```json
      android {
        signingConfigs {
          getByName("config") {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = file(keystoreProperties["storeFile"])
            storePassword = keystoreProperties["storePassword"]
          }
        }
        ...
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: __empty__
'104':
  en:
    title: USB flash drive attacks
    description: >
      It is possible
      to connect USB flash drives
      containing viruses
      to a corporate machine.
      This could allow an attacker
      to infect it with malicious software.
    impact: Infect machines with malware.
    recommendation: >
      - Set physical access controls
      to avoid the connection
      of unauthorized peripheral devices.

      - Install the proper security suite
      on the workstations that mitigates
      the risk of malicious code infection.
    threat: Unauthorized internal attacker.
  es:
    title: USB flash drive attacks
    description: >
      Es posible conectar dispositivos USB
      al equipo que permiten infectarlo
      con software malicioso.
    impact: Infectar las máquinas con software malicioso.
    recommendation: >
      - Establecer controles de acceso físico
      que impidan la conexión
      de dispositivos periféricos no autorizados.

      - Instalar una suite de seguridad
      apropiada en las estaciones de trabajo
      que mitigue el riesgo de infección
      con software malicioso.
    threat: Atacante interno no autorizado.
  category: System Manipulation
  examples:
    non_compliant: |
      Coding examples do not apply to physical vulnerabilities
    compliant: |
      Coding examples do not apply to physical vulnerabilities
  remediation_time: '450'
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['273']
  metadata:
    en:
      details: __empty__
'105':
  en:
    title: Apache lucene query injection
    description: >
      The system generates
      Apache Lucene queries dynamically,
      without validating untrusted inputs
      and without using parameterized statements
      or stored procedures.
    impact: >
      - Obtain information linking a
      user to a Wallet ID.

      - Obtain balances on users accounts.

      - Overwrite files with
      manipulated information.
    recommendation: >
      Perform database queries through the JSON
      endpoints provided by Apache Lucene.
      Additionally, sanitise user input
      before involving them in queries.
    threat: >
      Unauthorized attacker on the Internet.
  es:
    title: Apache lucene query injection
    description: >
      Se generan sentencias
      Apache Lucene Query dinámicas
      sin la validación requerida de datos
      y sin utilizar sentencias parametrizadas
      o procedimientos almacenados.
    impact: >
      - Obtener información que relacione
      a un usuario con un Wallet ID.

      - Obtener saldo en las cuentas de
      los usuarios.

      - Sobrescribir archivos con
      información manipulada.
    recommendation: >
      Realizar las consultas a la base de
      datos a través de los endpoints para
      JSON que Apache Lucene suministra.
      Adicionalmente, sanitizar las entradas
      de los usuarios antes de hacerlas
      partícipes de las consultas.
    threat: >
      Atacante no autorizado en Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      //The application uses unsanitized user input to make a query and display possible harmful information
      ```c
      public static void searchIndex(String whichField, String start, String end, boolean inclusive)
        throws IOException, ParseException {
        Directory directory = FSDirectory.getDirectory(INDEX_DIRECTORY);
        IndexSearcher indexSearcher = new IndexSearcher(directory);
        Term startTerm = new Term(whichField, start);
        Term endTerm = new Term(whichField, end);
        Query query = new RangeQuery(startTerm, endTerm, inclusive);
        Hits hits = indexSearcher.search_analize(query);
        displayHits(hits);
      }
      ```
    compliant: |
      Sanitize user input on the server side and make parameterised queries to the system end points
      ```c
      public static void searchIndex(String userInput, boolean inclusive)
        throws IOException, ParseException {
        Directory directory = FSDirectory.getDirectory(INDEX_DIRECTORY);
        IndexSearcher indexSearcher = new IndexSearcher(directory);
        string cleanInput = sanitizeInput(userInput);
        Term searchTerm = new Term(FIXED_FIELD, cleanInput);
        Query query = new RangeQueryJson(searchTerm, inclusive);
        //Use defined JSON Endpoints to make query
        Hits hits = indexSearcher.search(query);
        displayHits(hits);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'106':
  en:
    title: NoSQL injection
    description: >
      The system generates
      NoSQL queries dynamically
      and without validating
      untrusted inputs.
    impact: >
      Obtain information from the environment
      by means of malicious statements.
    recommendation: >
      Validate and escape data
      that will be included in sentences
      generated dinamically.
    threat: Anonymous attacker from the Internet.
  es:
    title: NoSQL injection
    description: >
      Se generan sentencias NoSQL dinámicas
      sin la validación requerida de datos.
    impact: >
      Obtener información del ambiente por
      medio de sentencias maliciosas.
    recommendation: >
      Validar y escapar los datos
      que serán incluidos en sentencias
      generadas dinámicamente.
    threat: >
      Atacante anónimo desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input to make NoSQL sentences without validation
      ```c
      MongoClient mongoClient = new MongoClient();
      DB db = mongoClient.getDB("test");
      boolean auth = db.authenticate(myUserName, myPassword);

      static void myMethod(user, searchTerm){
        BasicDBObject searchQuery = new BasicDBObject();
        queryResult = db.customer.find({user: user, info: searchTerm});
        System.out.println(queryResult);
      }
      ```
    compliant: |
      Perform server side validation of user inputs before making NoSQL sentences
      ```c
      MongoClient mongoClient = new MongoClient();
      DB db = mongoClient.getDB("test");
      boolean auth = db.authenticate(myUserName, myPassword);

      //Sanitize user input before querying
      static void myMethod(user, searchTerm){
        user = cleanUser(user);
        if isAllowedTerm(searchTerm){
          BasicDBObject searchQuery = new BasicDBObject();
          queryResult = db.customer.find({user: cleanUser, info: searchTerm});
          System.out.println(queryResult);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'107':
  en:
    title: LDAP injection
    description: >
      The system builds LDAP queries
      using untrusted data
      that could modify the query.
    impact: >
      Inject LDAP statements
      to extract sensitive information
      without authorization.
    recommendation: >
      - Avoid using untrusted data
      to generate dynamic LDAP queries.
    threat: >
      Authenticated attacker
      from the Internet.
  es:
    title: LDAP injection
    description: >
      El sistema construye consultas LDAP
      utilizando datos no confiables
      que podrían modificar la consulta.
    impact: >
      Inyectar sentencias LDAP
      para extraer información sensible
      sin autorizacion.
    recommendation: >
      - Evitar el uso de datos no confiables
      para generar consultas LDAP dinámicas.
    threat: >
      Atacante autenticado
      desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses dynamic user inputs to make LDAP sentences
      ```c {3,7,15}
      using System;
      using System.DirectoryServices;

      public partial class WebForm : System.Web.UI.Page{
        protected void Page_Load(object sender, EventArgs e){
          string userName = Request.Params["user"];
          string filter = "(uid=" + userName + ")";

          DirectorySearcher searcher = new DirectorySearcher(filter);
          SearchResultCollection results = searcher.FindAll();
        }
      }
      ```
    compliant: |
      Perform server side validation of all inputs before making LDAP sentences
      ```c {3,7,15}
      using System;
      using System.DirectoryServices;

      public partial class WebForm : System.Web.UI.Page{
        protected void Page_Load(object sender, EventArgs e){
          string userName = Request.Params["user"];

          userNameVerified = cleanUserName(userName);
          string filter = "(uid=" + userNameVerified + ")";

          DirectorySearcher searcher = new DirectorySearcher(filter);
          SearchResultCollection results = searcher.FindAll();
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'108':
  en:
    title: Improper control of interaction frequency
    description: >
      The system does not limit
      the amount of requests (rate limit)
      that a user can post
      to the server
      in a short period of time.
    impact: >
      - Fill the application logs with
      junk information.

      - Saturate the server with multiple
      requests causing a possible denial
      of service.
    recommendation: >
      Limit the number of requests that
      can be made by the same host in
      defined time slots.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Improper control of interaction frequency
    description: >
      La aplicación no limita
      la cantidad de peticiones
      (rate limit) que puede realizar un cliente
      en un intervalo reducido de tiempo.
    impact: >
      - Llenar los registros de la aplicación
      con información basura.

      - Saturar el servidor con múltiples
      peticiones ocasionando una posible
      denegación de servicio.
    recommendation: >
      Limitar la cantidad de peticiones
      que puede realizar un mismo host
      en espacios de tiempo definidos.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not restrict the number of requests performed by a single user
      ```javascript
      const rateLimit = require("express-rate-limit");
      const apiLimiter = rateLimit({
        windowMs: 15 * 60 * 1000,
        max: None
      });
      ```
    compliant: |
      Set a reasonable limit to the number of requests allowed for a user
      ```javascript
      import rateLimit from 'express-rate-limit';
      //Middleware that limits the amount of requests
      export const rateLimiterUsingThirdParty = rateLimit({
        windowMs: 24 * 60 * 60 * 1000,
        max: 100,
        message: 'You have exceeded the 100 requests in 24 hrs limit!',
        headers: true,
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['327']
  metadata:
    en:
      details: __empty__
'109':
  en:
    title: Unrestricted access between network segments - RDS
    description: >
      Some RDS Cluster or Instances
      are not defined inside a Database Subnet Group.
    impact: >
      Access to RDS services in a insecure way
      from the Internet.
    recommendation: >
      Ensure that all RDS instances
      belong to a Database Subnet Group.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Unrestricted access between network segments - RDS
    description: >
      Algunos cluster o instancias de RDS
      no se encuentran definidos
      dentro de un Subnet Group para bases de datos.
    impact: >
      Acceder a los servicios de RDS
      de forma insegura desde Internet.
    recommendation: >
      Asegurar que todas las instancias de RDS
      pertenezcan un Database Subnet Group.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are some resources which use the pre defined security group or do not define one
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
        MyEC2Instance:
          Type: AWS::EC2::Instance
          Properties:
            ImageId: "ami-79fd7eee"
            KeyName: "testkey"
      ```
      Using the AWS CLI, the following command checks the subnet groups associated with a given database instance subnet ID
      ```
      $ aws ec2 describe-route-tables
          --region us-east-1
          --filters "Name=association.subnet-id,Values=subnet-19e7cc6f"
          --query 'RouteTables[*].Routes[]'
      ```
      If the output contains any entries with the GatewayId value set to igw-xxxxxxxx and the DestinationCidrBlock value set to 0.0.0.0/0, the selected RDS database instance was provisioned inside a public subnet, and has an insecure configuration
    compliant: |
      The resources have defined security groups
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
              SecurityGroupIds:
                - sg-083cd3bfb8example
        MyEC2Instance:
          Type: AWS::EC2::Instance
          Properties:
            ImageId: "ami-79fd7eee"
            KeyName: "testkey"
            SecurityGroups:
              - name1
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'110':
  en:
    title: HTTP request smuggling
    description: >
      The system uses one or more entities,
      such as a proxy or a firewall,
      to process requests
      between the client and the server.
      These entities
      do not process HTTP requests consistently,
      thus making it possible
      to post malformed requests
      to get one of the entities
      to process a request
      without the other ones noticing it.
      The reason the entities
      do not process the requests consistently
      is that the web server software
      each one uses
      delimits requests differently.
    impact: >
      Allow an attacker to send
      an ambiguous HTTP request between
      front-end and back-end system.
    recommendation: >
      Use the same web servers software
      on the front-end and back-end servers,
      making the delimiters
      among the requests coincide each other.
    threat: Unauthorized attacker from the Internet.
  es:
    title: HTTP request smuggling
    description: >
      Es posible enviar
      peticiones HTTP malformadas
      o anormales que son interpretadas
      por una o más entidades
      entre el cliente y el servidor,
      como un proxy o un firewall,
      que son interpretadas inconsistentemente,
      permitiendo que un atacante
      haga llegar una petición
      a un dispositivo
      sin que el otro se percate.
    impact: >
      Permitir a un atacante
      enviar una petición HTTP ambigua
      entre el sistema de front-end y
      back-end.
    recommendation: >
      Usar el mismo software de web server
      en los servidores de front-end y back-end,
      de manera que concidan
      en los delimitadores
      entre las peticiones.
    threat: Atacante no autorizado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Different header configurations between front-end and back end servers allow a potential attacker to infiltrate the backend server by sending a request to the front end that is ultimately interpreted by the back end
      ```http
      //Front end server uses the content-length header
      POST /search HTTP/1.1
      Host: vulnerable-website.com
      Content-Type: application/x-www-form-urlencoded
      Content-Length: 11

      //Back end server uses the Transfer-Encoding header
      POST / HTTP/1.1
      Host: vulnerable-website.com
      Content-Length: 13
      Transfer-Encoding: chunked
      ```
    compliant: |
      The front end and back end servers should share the same web server configuration
      ```http
      //Front end server uses the content-length header
      POST /search HTTP/1.1
      Host: normal-website.com
      Content-Type: application/x-www-form-urlencoded
      Content-Length: 11

      //Back end server uses the Transfer-Encoding header
      POST / HTTP/1.1
      Host: normal-website.com
      Content-Type: application/x-www-form-urlencoded
      Content-Length: 11
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '173', '266']
  metadata:
    en:
      details: __empty__
'111':
  en:
    title: Out-of-bounds read
    description: >
      It is possible
      to make the system read data
      before or beyond the intended buffer.
    impact: >
      Get access to the system and get
      control of the server.
    recommendation: >
      - Implement good security practices
      in the software development life cycle.

      - Disable de unsafe functions in
      the system.
    threat: >
      External attacker with access
      to the application.
  es:
    title: Out-of-bounds read
    description: >
      El sistema lee datos más allá del final,
      o antes del comienzo,
      del buffer o porción
      de memoria asignado originalmente.
    impact: >
      Acceder al sistema y obtener
      el control del servidor.
    recommendation: >
      - Aplicar buenas prácticas de
      seguridad en el ciclo de vida
      del desarrollo de software.

      - Desactivar las funciones
      inseguras del sistema.
    threat: >
      Atacante externo con acceso
      a la aplicación.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application uses an unbounded buffer reader
      ```java
      func NewReaderSize(rd io.Reader, size int) *Reader {
        b, ok := rd.(*Reader)
        return &Reader{
          buf:          make([]byte, size),
          rd:           rd,
          lastByte:     -1,
          lastRuneSize: -1,
        }
      }
      ```
    compliant: |
      Buffer readers should always be bounded
      ```java
      func NewReaderSize(rd io.Reader, size int) *Reader {
        b, ok := rd.(*Reader)
        if ok && len(b.buf) >= maxReadBufferSize {
          return b
        }
        if size < minReadBufferSize {
          size = minReadBufferSize
        }
        return &Reader{
          buf:          make([]byte, size),
          rd:           rd,
          lastByte:     -1,
          lastRuneSize: -1,
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: H
    temporal:
      exploit_code_maturity: F
      remediation_level: O
      report_confidence: X
  requirements: ['062', '266']
  metadata:
    en:
      details: __empty__
'112':
  en:
    title: SQL injection - Java SQL API
    description: >
      Dynamic SQL statements
      are generated
      without the required data validation
      and without using parameterized statements
      or stored procedures.
    impact: >
      Inject SQL statements,
      with the possibility of obtaining information
      about the database,
      as well as extract information from it.
    recommendation: >
      Perform queries to the database
      through sentences or parameterized procedures.
      Alternatively,
      use escape(String) built-in function.
    threat: >
      Authenticated attacker
      from the Internet.
  es:
    title: SQL injection - Java SQL API
    description: >
      Uso de parametros controlados
      por el atacante para realizar consultas
      a la base de datos.
    impact: >
      Inyectar sentencias SQL,
      con la posibilidad de obtener información
      sobre la base de datos,
      así como extraer información
      de la misma.
    recommendation: >
      Realizar las consultas a la base de datos
      por medio de sentencias o
      procedimientos parametrizados,
      o alternativamente usar la función escape(String)
      del framework.
    threat: >
      Atacante autenticado
      desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are some unsanitized inputs used to perform queries
      ```java
      param = java.net.URLDecoder.decode(param, ""UTF-8"");

      String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ param + ""')"";

      try {
        java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();
        // Updating db model without filtering user inpu
        org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
      } catch (java.sql.SQLException e) {
        ...
      );
      ```
    compliant: |
      The inputs used to performed queries are either parameterized or correctly validated
      ```java
      param = java.net.URLDecoder.decode(param, ""UTF-8"");

      cleanParam = getCleanValue(param)

      String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ cleanParam + ""')"";

      try {
        java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement()
        org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
      } catch (java.sql.SQLException e) {
        ...
      );
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'113':
  en:
    title: Improper type assignation
    description: >
      There are variant variables
      in the source code, i.e.,
      no specific type is declared for them.
      This can be inefficient,
      as it becomes necessary
      to identify the variable's data type
      and cast it every time it is used.
    impact: >
      Result in modification of that resource
      by unintended parties.
    recommendation: >
      Check to see if the resource has insecure
      permissions (such as being modifiable by
      any regular user), and generate an error
      or even exit the software if there is a
      possibility that the resource could have
      been modified by an unauthorized party.
    threat: Authenticated external attacker.
  es:
    title: Improper type assignation
    description: >
      Se usan variables
      sin declaración de tipo específico,
      conviertiéndolas en variantes,
      lo cual hace que se requira identificar
      y convertir el tipo de dato
      que será usado en cada interacción.
    impact: >
      Resulta en la modificación de ese recurso
      por parte de personas no deseadas.
    recommendation: >
      Comprobar si el recurso tiene permisos
      inseguros (como ser modificable por
      cualquier usuario normal), y generar un
      error o incluso salir del software si
      existe la posibilidad de que el recurso
      haya sido modificado por alguien
      no autorizado.
    threat: Atacante externo autentificado.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The app does not correctly define the type of some variables
      ```java
      public static void main(String[] args) {
        input = new Scanner(System.in);
        //username and password could be assigned to unsafe values
        username = input.next();
        password = input.next();

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            users check = new users(username, password);
            signIn(user, check);
          }
        } catch (InterruptedException e) {
          //Code to catch the exception
        }
      }
      ```
    compliant: |
      The app defines the type of all variables declared in the code
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username = input.next();
        String password = input.next();

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            users check = new users(username, password);
            signIn(user, check);
          }
        } catch (InterruptedException e) {
          //Code to catch the exception
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['164']
  metadata:
    en:
      details: __empty__
'114':
  en:
    title: Phishing
    description: >
      The application users
      are susceptible to phishing,
      a social engineering technique
      in which attackers present themselves
      as a legitimate entity
      that the victim trusts
      and request confidential information
      (usually credentials).
      These attacks are often possible
      due to improperly configured
      corporate email clients.
    impact: >
      Mislead users to
      obtain information.
    recommendation: >
      - Use anti-spam controls to
      prevent mail from arriving.

      - Conduct awareness campaigns
      with users.
    threat: Anonymous attacker from the Internet.
  es:
    title: Phishing
    description: >
      Los usuarios son vulnerables a phishing,
      una técnica de ingeniería social
      donde un atacante se disfraza
      como una entidad legítima
      con la que la víctima tiene contacto
      para solicitarle a la misma
      que revele información confidencial
      (frecuentemente credenciales).
    impact: >
      Engañar a los usuarios para
      obtener información.
    recommendation: >
      - Utilizar controles antispam para
      evitar que lleguen los correos.

      - Realizar campañas de concientización
      con los usuarios.
    threat: Atacante anónimo desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      Application does not perform any spam filters
    compliant: |
      Application filters spam and conducts awareness campaigns to alert users of possible phishing attempts
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['115', '116', '117', '118', '144']
  metadata:
    en:
      details: __empty__
'115':
  en:
    title: Security controls bypass or absence
    description: >
      The system has security controls
      that can be bypassed.
    impact: >
      Send multiple requests to
      the server without control.
    recommendation: >
      Limit the number of requests that
      can be made by the same host in
      defined time slots.
    threat: Anonymous attacker from the Internet.
  es:
    title: Security controls bypass or absence
    description: >
      El sistema tiene controles de seguridad
      que pueden ser evadidos.
    impact: >
      Enviar múltiples solicitudes al
      servidor sin control.
    recommendation: >
      Limitar la cantidad de peticiones
      que puede realizar un mismo host
      en espacios de tiempo definidos.
    threat: Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There is no limit to the number of request which could overload the server
      ```javascript
      const rateLimit = require("express-rate-limit");
      const apiLimiter = rateLimit({
        windowMs: 15 * 60 * 1000,
        max: None
      });
      ```
    compliant: |
      The application correctly sets up a limit to the number of requests based on the business needs
      ```javascript
      import rateLimit from 'express-rate-limit';
      //Middleware that limits the amount of requests
      export const rateLimiter = rateLimit({
        windowMs: 24 * 60 * 60 * 1000,
        max: 100,
        message: 'You have exceeded the 100 requests in 24 hrs limit!',
        headers: true,
      });
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'116':
  en:
    title: XS-Leaks
    description: >
      It is possible
      to use browser side-channels
      to obtain sensitive information
      from the users.
    impact: >
      - Know the step in which the
      user is at a given moment.

      - Leak sensitive data
      of the user without authorization.
    recommendation: >
      Load the same amount of frames in
      all application load cases.
    threat: Anonymous attacker from the Internet.
  es:
    title: XS-Leaks
    description: >
      Es posible utilizar canales alternos
      del navegador
      para filtrar información sensible
      sobre el usuario.
    impact: >
      - Conocer el paso en el que se encuentra el
      usuario en un momento dado.

      - Filtrar datos sensibles
      del usuario sin autorización.
    recommendation: >
      Cargar la misma cantidad de frames en todos
      los casos de carga de la aplicación.
    threat: Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The app provides a different ftps when a query is successful than when the login has failed because of a delay in getting the data
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username;
        String password;
        username = input.next();
        password = input.next();

        try {
          Thread.sleep(5000);
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                users check = new users(username, password);
                signIn(user, check)
              }
            }, delay, TimeUnit.MILLISECONDS);
          }
        } catch (InterruptedException e) {
          //Code to catch the exception that executes faster than the login code...
        }
      }
      ```
    compliant: |
      The application defines the same timing frame functions without distinguishing outcomes of queries
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username;
        String password;
        username = input.next();
        password = input.next();

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                users check = new users(username, password);
                signIn(user, check)
              }
            }, delay, TimeUnit.MILLISECONDS);
          }
        } catch (InterruptedException e) {
          //The code to catch the exception takes the same amount of time to execute, on purpose
          ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                failedSignin(user)
              }
            }, delay, TimeUnit.MILLISECONDS);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '176', '266']
  metadata:
    en:
      details: __empty__
'117':
  en:
    title: Unverifiable files
    description: >
      Files are stored in the repository that cannot be verified because their content is not compatible with their extension.
    impact: >
      - Difficult the versioning
      and security auditing process.

      - Introduce vulnerabilities
      of previous versions
      in the repository.
    recommendation: >
      - Remove the files
      that should not be versioned
      from the repository.

      - Include the affected extensions
      in the .gitignore file.
    threat: >
      Authenticated attacker
      from the Internet.
  es:
    title: Unverifiable files
    description: >
      En el repositorio se almacenan archivos
      que no son verificables o no
      deberían ser versionados,
      como archivos binarios,
      logs o archivos temporales.
    impact: >
      - Dificultar el proceso de versionamiento
      y auditoría de seguridad.

      - Introducir vulnerabilidades
      de versiones pasadas de archivos
      en el repositorio.
    recommendation: >
      - Remover los archivos
      que no deberían ser versionados
      en el repositorio de código.

      - Incluir las extensiones afectadas
      en el archivo .gitignore.
    threat: >
      Atacante autenticado
      desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Master branch of the repository stores binary files or unverifiable files.
      e.g. MyJar.class
    compliant: |
      There are no binary files in the repository
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['323']
  metadata:
    en:
      details: __empty__
'118':
  en:
    title: Regulation infringement
    description: >
      The system violates regulations
      of a jurisdiction
      to which it is subject.
    impact: >
      - Use the application without
      having accepted the terms and
      conditions of the application.

      - Incur a fine or other
      legal sanction.
    recommendation: >
      Consider the applicable regulations
      for the system.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Regulation infringement
    description: >
      El sistema incumple con regulaciones
      a las cuales está sujeto.
    impact: >
      - Usar la aplicación sin necesidad
      de haber aceptado los términos y
      condiciones de la misma.

      - Incurrir en una multa o alguna
      otra sanción legal.
    recommendation: >
      Tener en cuenta las regulaciones
      aplicables para el sistema.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: __empty__
    compliant: __empty__
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['331']
  metadata:
    en:
      details: __empty__
'119':
  en:
    title: Metadata with sensitive information
    description: >
      The system exposes sensitive information
      through public metadata files.
    impact: >
      - Obtain sensitive information.

      - Obtain information that can be
      used to compromise other systems.
    recommendation: >
      Delete files metadata
      before sharing or publishing them.
    threat: >
      Attacker with access to the
      repository from the Internet.
  es:
    title: Metadata with sensitive information
    description: >
      El sistema expone información sensible
      a través de metadatos
      de archivos públicos.
    impact: >
      - Obtener información sensible.

      - Obtener información que pueda ser
      utilizada para comprometer otros sistemas.
    recommendation: >
      Eliminar los metadatos de los archivos
      antes de compartirlos
      o hacerlos públicos.
    threat: >
      Atacante con acceso al repositorio
      desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Metadata of a file stores sensitive information, like location or credentials
      ```json
      {
        "Name" : "OrganizationName",
        "User" : "AdminUser",
        "Permissions" : "*",
        "Path" : "/admin/sensitiveFiles/file",
        "Location" : "mylocation",
      }
      ```
    compliant: |
      Files should have their metadata cleared before being made public
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['045']
  metadata:
    en:
      details: __empty__
'120':
  en:
    title: Improper dependency pinning
    description: >
      The application
      does not make explicit
      the whole dependency tree
      it requires
      (direct and indirect third-party libraries)
      and their respective version.
    impact: >
      - Accept a range of versions
      can cause a version of a dependency
      that is not supported
      by the application
      to be automatically installed.

      - Install a dependency
      containing a known vulnerability
      and being unaware of it.

      - Use a dependency version that is
      not compatible with the application.
    recommendation: >
      All dependencies must be declared
      with a specific version
      and must be referenced
      with a dependency manager
      (npm, pip, maven).
      This allows to standardize
      the projects construction
      and packaging.
    threat: >
      Anonymous attacker with access to
      the application.
  es:
    title: Improper dependency pinning
    description: >
      La aplicación no hace explícito
      todo el árbol de dependencias que requiere
      (bibliotecas de terceros directas e indirectas)
      y su respectiva versión.
    impact: >
      - Aceptar un rango de versiones
      puede ocasionar
      que se instale automáticamente
      una versión de una dependencia
      que no es compatible con la aplicación
      u otras dependencias.

      - Instalar una dependencia que
      contenga una vulnerabilidad conocida
      y no tener conocimiento de ello.

      - Usar una versión de la dependencia
      que no sea compatible con la aplicación.
    recommendation: >
      Todas las dependencias
      deben estar declaradas
      con una versión específica
      y se deben referenciar
      con un gestor de dependencias
      (npm, pip, maven).
      Esto permite estandarizar
      la construcción
      y empaquetado de proyectos.
    threat: >
      Atacante anónimo con acceso a la
      aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Incorrectly declared dependencies inside the source code
      ```json
      dependencies": {
        "@apollo/client": "*",
        "@bugsnag/core": "*",
        "@bugsnag/js": "*",
        "@bugsnag/plugin-react": "*",
      }
      ```
    compliant: |
      All dependencies should be defined with a given version number
      ```json
      dependencies": {
        "@apollo/client": "3.4.17",
        "@bugsnag/core": "7.13.2",
        "@bugsnag/js": "7.13.3",
        "@bugsnag/plugin-react": "7.13.2",
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['302']
  metadata:
    en:
      details: __empty__
'121':
  en:
    title: HTTP parameter pollution
    description: >
      The application allows
      extra parameters injection
      to HTTP communication protocol,
      this can cause unexpected behavior
      on the server.
    impact: >
      - Make the application to read
      malicious parameters and have
      a wrong behavior.

      - Cause unexpected behaviors
      on the application.
    recommendation: >
      Make validations to guarantee
      that the quantity
      of received parameters
      is equal to the expected parameters
      on the server.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: HTTP parameter pollution
    description: >
      La aplicación permite
      inyectar parámetros extra
      al protocolo de comunicación HTTP,
      lo cual puede provocar
      comportamientos inesperados
      en el servidor.
    impact: >
      - Hacer que la aplicación lea
      parámetros maliciosos y tenga
      un comportamiento erróneo.

      - Causar comportamientos inesperados
      en la aplicación.
    recommendation: >
      Garantizar mediante validaciones
      que la cantidad de parámetros recibidos
      sea igual a la cantidad
      de parámetros esperados
      por el servidor.
    threat: >
      Atacante anónimo desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      Use unsanitized parameters to perform queries to the server
      ```javascript
      function getinfo(userQuery) {
        const Http = new XMLHttpRequest();
        const url='https://myurl' + userQuery;
        Http.open("GET", url);
        Http.send();
        Http.onreadystatechange = (e) => {
          showState(Http.responseText);
        }
      }
      ```
    compliant: |
      Include validation of inputs to verify that the parameters expected by the server are the same being given
      ```javascript
      function getinfo(userQuery) {
        //Extensive method that performs all the required validations to the userQuery
        cleanQuery = sanitizeQuery(userQuery);
        const Http = new XMLHttpRequest();
        const url='https://myurl' + userQuery;
        Http.open("GET", url);
        Http.send();
        Http.onreadystatechange = (e) => {
          showState(Http.responseText);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['173', '342']
  metadata:
    en:
      details: __empty__
'122':
  en:
    title: Email flooding
    description: >
      It is possible
      to send emails massively
      to a victims inbox,
      causing its saturation.
    impact: >
      - Send massive spam to a user email.

      - Hide important information
      of another emails.
    recommendation: >
      Restrict the consecutive send
      of emails through mechanisms
      like time delay.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Email flooding
    description: >
      Es posible realizar
      un envío masivo de correos
      a la cuenta de una víctima,
      provocando la saturación
      de la bandeja de entrada.
    impact: >
      - Enviar spam masivo a la cuenta de correo
      de un usuario.

      - Ocultar correos con información importante.
    recommendation: >
      Restringir el envío consecutivo
      de correos mediante mecanismos
      como retardos de tiempo.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is no limit set in the email delivery configuration setting of the application
      ```yaml
      email_delivery:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 587
          domain: "yourdomain"
          authentication: :plain
          user_name: "appadmin"
      ```
    compliant: |
      The email delivery settings include a time delay to prevent flooding users with spam in any attack event
      ```java
      email_delivery:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 587
          domain: "promotions_domain"
          authentication: :plain
          user_name: "appadmin"
          time_delay: 24h
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['327']
  metadata:
    en:
      details: __empty__
'123':
  en:
    title: Local file inclusion
    description: >
      The application allows to read
      or execute files located
      on the server
      through relative paths manipulation
      in the input fields.
    impact: >
      - Visualize the content
      of sensitive files stored
      on the server.

      - Get sensitive data.

      - Read system files.
    recommendation: >
      - Validate that
      the parameters received
      by the application
      do not contain relative paths.

      - Disable insecure functions
      that allow reading
      of arbitrary files on the server.
    threat: >
      Unauthorized attacker from local network.
  es:
    title: Local file inclusion
    description: >
      La aplicación permite
      leer o ejecutar archivos alojados
      en el servidor
      mediante la manipulación
      de rutas relativas
      en los campos de entrada.
    impact: >
      -Visualizar el contenido
      de archivos sensibles almacenados
      en el servidor.

      - Obtener información sensible.

      - Leer archivos del sistema.
    recommendation: >
      - Validar que los parámetros recibidos
      por la aplicación
      no contengan rutas relativas.

      - Deshabilitar las funciones inseguras
      que permitan la lectura
      de archivos arbitrarios en el servidor.
    threat: >
      - Atacante no autorizado desde red local.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application includes a reference to a local path that could be altered by the user
      ```java
      private String getLocalFile( userReq){
        try {
            Path = "/localPath/" + userReq
            File file = new File(classLoader.getResource(Path).getFile());
            //Code to do something with that file
        }catch{
          ...
        }
      }
      ```
    compliant: |
      All input parameters are validated to ensure they do not contain relative routes
      ```java
      private String getFile(userReq){
        try {
            //Function to validate that parameter does not contain relative routes
            isValidReq = validateReq(userReq)
            //Read files from a remote direction not local
            if (isValidReq){
              File file = new File(classLoader.getResource("secureurl").getFile());
              //Code to do something with that file
            }
        }catch{
          ...
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '176']
  metadata:
    en:
      details: __empty__
'124':
  en:
    title: Race condition
    description: >
      The system presents
      unexpected behavior
      when the inputs
      of a specific functionality
      do not arrive in the expected order.
    impact: >
      - Overwrite, delete or read arbitrary
      files from the system.

      - Cause unexpected behaviour
      in the application.
    recommendation: >
      Ensure that the verification
      and use of inputs
      must be realized at the same time
      or in an atomic way.
    threat: >
      Anonymous attacker in the system.
  es:
    title: Race condition
    description: >
      El sistema presenta
      comportamientos inesperados
      cuando las entradas
      a una funcionalidad específica
      no llegan en el orden esperado.
    impact: >
      - Sobrescribir, borrar o leer archivos
      arbitrarios del sistema.

      - Ocasionar comportamientos inesperados
      en la aplicación.
    recommendation: >
      Garantizar que la verificacion
      y el uso de las entradas
      se realice en un mismo momento
      o de forma atómica.
    threat: >
      Atacante anónimo en el sistema.
  category: Functionality Abuse
  examples:
    non_compliant: |
      If the input comes in an unexpected order, the application can not fulfill the requirements
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username = input.next();
        String password = input.next();

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            users check = new users(username, password);
            signIn(user, check);
          }
        } catch (InterruptedException e) {
          //Code that could be executed even when the data is right, if for some reason, the client side sends it in a wrong order
        }
      }
      ```
    compliant: |
      The application uses inputs under a proper method to avoid issues
      ```java
      public static void main(String[] args) {
        Scanner input = new UserInput(*args);
        String username = input.userId;
        String password = input.password;

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            users check = new users(username, password);
            signIn(user, check);
          }
        } catch (InterruptedException e) {
          //Code to catch exception when log in is not successful
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['337']
  metadata:
    en:
      details: __empty__
'125':
  en:
    title: Directory listing
    description: >
      The system displays
      the applications directories,
      allowing an attacker
      to know the content of the files stored
      on the server.
    impact: >
      - Obtain technical
      or sensitive information
      of the files stored
      in the applications directory.

      - Collect technical information
      on the application.
    recommendation: >
      - Disable the configurations
      of the server that allow
      to execute directory listing.

      - Establish index files
      that will be shown
      when the directories are loaded.
    threat: >
      External attacker with access
      to the application.
  es:
    title: Directory listing
    description: >
      El sistema permite visualizar
      los archivos almacenados
      en los directorios de la aplicación
      permitiendo a un atacante
      conocer su contenido.
    impact: >
      - Obtener información técnica
      o sensible de los archivos almacenados
      en el directorio de la aplicación.

      - Recopilar información técnica
      del aplicativo.
    recommendation: >
      - Deshabilitar las configuraciones
      del servidor que permitan
      ejecutar el listado de directorios.

      - Establecer archivos index
      que se muestren
      al cargar los directorios.
    threat: >
      Atacante externo con acceso a la aplicación.
  category: Information Collection
  examples:
    non_compliant: |
      There are some server configuration settings that allow directories to be listed
      ```yaml
      //server .htaccess file
      Header set X-Custom "Custom Value"
      RewriteCond %{HTTP_REFERER} unwanteddomain\.com [NC,OR]
      RewriteCond %{REQUEST_METHOD} !^(HEAD|OPTIONS|POST|PUT)
      RewriteRule .* - [F]
      ```
    compliant: |
      The configuration settings deny directory listing for all unauthorized users
      ```yaml
      //server .htaccess file
      Header set X-Custom "Custom Value"
      RewriteCond %{HTTP_REFERER} unwanteddomain\.com [NC,OR]
      RewriteCond %{REQUEST_METHOD} !^(HEAD|OPTIONS|POST|PUT)
      RewriteRule .* - [F]
      //Adding rule to deny directory listing
      Options -Indexes
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '266']
  metadata:
    en:
      details: __empty__
'126':
  en:
    title: Lack of isolation methods
    description: >
      The system do not use
      isolation methods
      for running applications.
    impact: >
      Allow the construction of covert
      communication channel.
    recommendation: >
      - Use dedicated cloud servers rather
      than VMs or cloud-based containers.

      - Implement specific isolation
      strategies, particularly between
      hosts and the network.
    threat: >
      External attacker with access
      to the application.
  es:
    title: Lack of isolation methods
    description: >
      El sistema no utiliza
      métodos de aislamiento
      para las aplicaciones
      que están siendo ejecutadas.
    impact: >
      Permitir la construcción de un canal
      de comunicación encubierto.
    recommendation: >
      - Utilizar servidores dedicados en la
      nube en lugar de máquinas virtuales
      o contenedores basados en la nube.

      - Implementar estrategias específicas
      de aislamiento, especialmente entre
      los hosts y la red.
    threat: >
      Atacante externo con
      acceso a la aplicación.
  category: Access Subversion
  examples:
    non_compliant: |
      There are no network isolation methods configured, so an attack in one of the networks could potentially affect all others
      ```yaml
      name: yournetwork
      dns_domain: 192.0.2.0/24
      subnets:
        subnet_name_a:
          ip_subnet: 192.0.2.0/24
          allocation_pools:
            - start: 0.0.0.0
              end: 255.255.255.255
          gateway_ip: 192.0.2.1
      ```
    compliant: |
      The networks are correctly separated using VLAN permissions
      ```yaml
      name: yournetwork
      dns_domain: 208.67.222.222
      subnets:
        subnet_name_a:
          ip_subnet: 192.0.2.0/24
          allocation_pools:
            - start: 192.0.2.50
              end: 192.0.2.99
          gateway_ip: 192.0.2.1
          vlan: 102
        subnet_name_b:
          ip_subnet: 198.51.100.0/24
          allocation_pools:
            - start: 198.51.100.50
              end: 198.51.100.99
          gateway_ip: 198.51.100.1
          vlan: 101
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['374']
  metadata:
    en:
      details: __empty__
'127':
  en:
    title: Lack of data validation - Type confusion
    description: >
      A field is interpreted on the
      server-side, although it indicates
      that it only accepts numbers, it
      allows values in the form 0xff.
    impact: >
      - Get internal information about the
      operation of the system.

      - Inject code and get it interpreted
      by the server.
    recommendation: >
      Validate on the server-side the data
      types that are entered but prevent
      them from being interpreted.
    threat: Authorized user from intranet.
  es:
    title: Lack of data validation - Type confusion
    description: >
      Un campo se interpreta en el lado del
      servidor, aunque indica que sólo acepta
      números, permite valores de la forma 0xff.
    impact: >
      - Obtener información interna sobre
      el funcionamiento del sistema.

      - Inyectar código y conseguir que
      sea interpretado por el servidor.
    recommendation: >
      Validar en el lado del servidor los
      tipos de datos que se introducen
      pero evitar que se interpreten.
    threat: Usuario autorizado de la intranet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application includes functions that could be penetrated because of type confusion
      ```javascript
      import (
        "dabatase/sql"
        "db"
        "math"
        "strconv"
      )

      func DangerousFloat(request *http.Request) {
        amount := strconv.ParseFloat(request.Amount)
        sql.QueryRow(`INSERT INTO tbl $1`, amount)
      }
      ```
    compliant: |
      Verify types of user inputs to avoid problems on the server side
      ```javascript
      import (
        "dabatase/sql"
        "db"
        "math"
        "strconv"
      )

      func SafeFloat(request *http.Request) {
        amount := strconv.ParseFloat(request.Amount)
        if math.IsNaN(amount) || math.IsInf(amount, 0) {
          return "Not a valid value"
        }
        sql.QueryRow(`INSERT INTO tbl $1`, amount)
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'128':
  en:
    title: Insecurely generated cookies - HttpOnly
    description: >
      The applications cookies
      are generated without properly setting
      the HttpOnly attribute.
    impact: >
      Obtain sensitive information
      by performing a XSS attack.
    recommendation: >
      The application must set
      the HttpOnly attribute in the cookies
      with sensitive information.
    threat: >
      Authorized attacker
      from internet network
      performing a XSS attack.
  es:
    title: Insecurely generated cookies - HttpOnly
    description: >
      La aplicación genera cookies
      sin establecer correctamente
      el atributo HttpOnly.
    impact: >
      Obtener información sensible
      realizando un ataque XSS.
    recommendation: >
      La aplicación debe establecer
      el atributo HttpOnly en la cookies
      con información sensible.
    threat: >
      Atacante con autorización
      desde internet
      ejecutando un ataque XSS.
  category: Access Subversion
  examples:
    non_compliant: |
      The http headers do not correctly define the Set-Cookie attribute
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Set-Cookie: session=/; Path=/
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
    compliant: |
      The http headers allow only http to generate cookies
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Set-Cookie: google_analytics=1asdf345; HttpOnly; Path=/
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['029']
  metadata:
    en:
      details: __empty__
'129':
  en:
    title: Insecurely generated cookies - SameSite
    description: >
      The applications cookies
      are generated without properly
      setting the SameSite attribute.
    impact: >
      Perform a malicious request
      via a CSRF attack.
    recommendation: >
      The application must set
      the SameSite attribute in the cookies
      with sensitive information.
    threat: >
      Attacker from Internet network
      performing a CSRF attack.
  es:
    title: Insecurely generated cookies - SameSite
    description: >
      La aplicación genera cookies
      sin establecer correctamente
      el atributo SameSite.
    impact: >
      Realizar una petición maliciosa
      con un ataque CSRF.
    recommendation: >
      La aplicación debe establecer
      el atributo SameSite en la cookies
      con información sensible.
    threat: >
      Atacante desde Internet
      ejecutando un ataque CSRF.
  category: Access Subversion
  examples:
    non_compliant: |
      The http headers do not correctly define the Same-Site attribute
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Set-Cookie: session=/; Path=/; SameSite=Lax
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
    compliant: |
      The Set-Cookie attribute is correctly configured for the Set-Cookie http header
      ```http
      HTTP/1.1 200 OK
      Content-Type: text/html; charset=utf-8
      Set-Cookie: session=/; Path=/; SameSite=Strict
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['029']
  metadata:
    en:
      details: __empty__
'130':
  en:
    title: Insecurely generated cookies - Secure
    description: >
      The system does not set
      the Secure attribute
      for sensitive cookies,
      which could cause them
      to be sent through
      an insecure channel.
    impact: >
      Obtain sensitive information
      by performing a MiTM attack.
    recommendation: >
      The application must set
      the Secure attribute in the cookies
      with sensitive information.
    threat: >
      Unauthorized attacker
      from adjacent network
      performing a MitM.
  es:
    title: Insecurely generated cookies - Secure
    description: >
      El sistema no establece
      el atributo Secure
      para las cookies sensibles,
      lo que podría hacer que se envíen
      por un canal no cifrado.
    impact: >
      Obtener información sensible
      realizando un ataque
      de hombre en el medio.
    recommendation: >
      La aplicación debe establecer
      el atributo Secure en la cookies
      con información sensible.
    threat: >
      Atacante sin autorización
      desde red adyacente
      ejecutando un MitM.
  category: Access Subversion
  examples:
    non_compliant: |
      The http headers do not correctly define the Set-Cookie field
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      Set-Cookie: session=/; Path=/; secure = false
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
    compliant: |
      The Set-Cookie is correctly configure using a secure channel
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      Set-Cookie: session=/currentSession; Path=/mypath; secure = true
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['029']
  metadata:
    en:
      details: __empty__
'131':
  en:
    title: Insecure or unset HTTP headers - Strict Transport Security
    description: >
      The server is missing
      the Strict-Transport-Security HTTP header.
      Alternatively,
      the headers max-age is too short.
    impact: >
      Compromise confidential information
      sent through insecure channels.
    recommendation: >
      Set the Strict-Transport-Security header
      and a max-age of at least 31536000
      in all server responses.
    threat: >
      Unauthorized attacker
      from adjacent network
      performing a sniffing attack.
  es:
    title: Insecure or unset HTTP headers - Strict Transport Security
    description: >
      El servidor carece del encabezado
      HTTP Strict-Transport-Security.
      Alternativamente,
      el valor max-age del mismo
      es muy pequeño.
    impact: >
      Comprometer información sensible
      que viaja por un canal inseguro.
    recommendation: >
      Establecer la cabecera
      Strict-Transport-Security
      y un max-age superior a 31536000
      en todas las respuestas del servidor.
    threat: >
      Atacante sin autorización
      desde red adyacente
      ejecutando un ataque de sniffing.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      An http response without a Strict-Transport-Security configuration
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      Set-Cookie: session=/; Path=/; secure = false
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
    compliant: |
      All http responses include the Content-Security-Policy correctly configured
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Strict-Transport-Security: max-age=31536000; includeSubDomains
      Content-Type: userID/html; charset=utf-8
      Set-Cookie: session=/; Path=/; secure = false
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['062', '181', '349']
  metadata:
    en:
      details: |
        The HTTP `Strict-Transport-Security`
        response header informs the browser
        that it should never load a site
        using HTTP and should automatically
        convert all attempts
        to access the site using HTTP
        to HTTPS requests instead.

        ### Exploitation scenario

        You log into a free
        WiFi access point at an airport
        and start surfing the web,
        visiting your online banking service
        to check your balance
        and pay a couple of bills.
        Unfortunately,
        the access point you're using
        is actually a hacker's laptop,
        and they're intercepting
        your original HTTP request
        and redirecting you to a clone
        of your bank's site
        instead of the real thing.
        Now your private data
        is exposed to the hacker.

        `Strict Transport Security`
        resolves this problem;
        as long as you've accessed
        your bank's web site once using HTTPS,
        and the bank's web site uses
        `Strict Transport Security`,
        your browser will know
        to automatically use only HTTPS,
        preventing hackers from performing
        this sort of man-in-the-middle attack.

        ### Words of caution

        It's important to note that
        in order for the `Strict Transport Security`
        response header to work
        your users **must** have accessed
        your website through HTTPS **at least once**.

        Configuring this header in all responses
        (including error pages)
        increases the effectiveness
        of the `Strict Transport Security`
        by increasing the probability
        that your users had visited the website
        through HTTPS at least once.
        Once this condition is met,
        the browser will remember
        (during `max-age` seconds)
        that your site must only be accessed
        through HTTPS.

        Using a large value for `max-age`
        also increases the effectiveness
        of the header.

        ### Secure implementation

        Set `Strict-Transport-Security: max-age=31536000`
        HTTP header in all responses
        from your site,
        including error pages, HTTP and HTTPS.
'132':
  en:
    title: Insecure or unset HTTP headers - X-Content-Type-Options
    description: >
      The server is missing
      the X-Content-Type-Options HTTP header.
    impact: >
      Execute MIME sniffing attacks
      to obtain technical information
      and craft new attack vectors.
    recommendation: >
      Set the X-Content-Type-Options header
      to nosniff in the server responses.
    threat: >
      Unauthorized attacker
      from Internet network.
  es:
    title: Insecure or unset HTTP headers - X-Content-Type-Options
    description: >
      El servidor carece de la cabecera
      HTTP X-Content-Type-Options.
    impact: >
      Ejecutar ataques de MIME Sniffing
      para obtener información
      y generar nuevos vectores de ataque.
    recommendation: >
      Establecer la cabecera
      X-Content-Type-Options a nosniff
      en las respuestas del servidor.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The server response lacks the X-Content-Type-Options header
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      Set-Cookie: session=/; Path=/; secure = false
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
    compliant: |
      The X-Content-Type-Options header is correctly defined in the server responses
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      X-Content-Type-Options: nosniff
      Set-Cookie: session=/; Path=/; secure = false
      Server: Werkzeug/2.0.1 Python/3.8.9
      Date: Tue, 01 Feb 2022 20:29:25 GMT
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['062', '349']
  metadata:
    en:
      details: __empty__
'133':
  en:
    title: Insecure encryption algorithm - Perfect Forward Secrecy
    description: >
      The application uses cipher algorithms
      that expose all messages made
      during the communication
      if the current private key
      is compromised.
    impact: >
      Obtain sensitive information
      that is being transmitted
      or has been stored.
    recommendation: >
      Enable Perfect-Forward-Secrecy in the server side,
      by allowing Ciphersuites that contain DHE and ECDHE on its names.
    threat: >
      Unauthorized attacker
      from adjacent network
      that has compromised
      a private key.
  es:
    title: Insecure encryption algorithm - Perfect Forward Secrecy
    description: >
      La aplicación utiliza
      algoritmos de cifrado
      que exponen todos los mensajes
      realizados durante la comunicación
      si la llave privada actual
      es comprometida.
    impact: >
      Obtener información sensible
      que se esta transmitiendo
      o ha sido guardada.
    recommendation: >
      Habilitar el Perfect-Forward-Secrecy en el lado del servidor
      admitiendo algoritmos que contengan DHE o ECHDE en sus nombres.
    threat: >
      Atacante sin autorización
      desde red adyacente
      que haya comprometido
      una llave privada.
  category: Information Collection
  examples:
    non_compliant: |
      Some insecure encryption algorithms are included in the server configuration
      ```json
      http {
        server {
          index index.html;
          listen localhost:4446 ssl;
          location / {
            root server_root;
          }
          server_name localhost;
          ssl_prefer_server_ciphers off;
          ssl_ciphers "ADH-AES128-SHA:ADH-AES256-SHA:ADH-CAMELLIA128-SHA:ADH-CAMELLIA256-SHA:ADH-DES-CBC3-SHA:ADH-RC4-MD5:ADH-SEED-SHA:AES128-SHA:AES256-SHA:CAMELLIA128-SHA:ADH-SEED-SHA:AES128-SHA";
          ssl_certificate ert.crt;
          ssl_certificate_key cert.key;
          ssl_protocols SSLv3 TLSv1 TLSv1.1;
        }
      }
      ```
    compliant: |
      The application only includes secure encryption algorithms
      ```json
      http {
        server {
          index index.html;
          listen localhost:4446 ssl;
          location / {
            root server_root;
          }
          server_name localhost;
          ssl_prefer_server_ciphers off;
          ssl_ciphers "EECDH+AESGCM:EDH+AESGCM";
          ssl_certificate ert.crt;
          ssl_certificate_key cert.key;
          ssl_protocols SSLv3 TLSv1 TLSv1.2;
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['148', '149', '150', '181', '336']
  metadata:
    en:
      details: __empty__
'134':
  en:
    title: Insecure or unset HTTP headers - CORS
    description: >
      The cross-domain policy
      includes wildcards,
      accepting any domain
      as valid for sharing resources.
    impact: >
      Include resources
      from untrusted origins.
    recommendation: >
      Remove the wildcard (*) and
      define explicitly the trusted origins
      for the application resources.
    threat: >
      Unauthorized attacker
      from the Internet.
  es:
    title: Insecure or unset HTTP headers - CORS
    description: >
      La política entre dominios
      incluye comodines,
      aceptando cualquier dominio
      como válido para compartir recursos.
    impact: >
      Incluir recursos
      de orígenes maliciosos.
    recommendation: >
      Remover los comodines (*) y
      definir explícitamente
      los orígenes permitidos
      para los recursos de la aplicación.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      Examples where the application does not define allowed origins
      ```c {3,7,15}
      using System.Net;
      using System;
      namespace testmod{
        public class Controllers{
          public void Configure(IApplicationBuilder app){
            var policy = new Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy();
            policy.Headers.Add(""*"");
            policy.Methods.Add(""*"");
            policy.Origins.Add(""*"");
            policy.SupportsCredentials = true;
          }
        }
      }
      ```
      ```c {3,7,15}
      using System.Net;
      using System;
      namespace testmod{
        public class Controllers{
          public void Configure(IApplicationBuilder app){
            var corsBuilder = new CorsPolicyBuilder();
            corsBuilder.AllowAnyHeader();
            corsBuilder.AllowAnyMethod();
            corsBuilder.AllowAnyOrigin();
            var policyBuilder = new CorsPolicyBuilder();
            var policy = policyBuilder
                .AllowAnyOrigin()
                .AllowAnyHeader()
                .AllowAnyMethod()
                .Build();
            app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);
            app.UseCors(cors => cors
                .AllowAnyMethod()
                .AllowAnyOrigin());
          }
        }
      }
      ```
    compliant: |
      The CORS policy is defined using predefined values to define permitted origins
      ```c {3,7,15}
      using System.Net;
      using System;
      namespace testmod{
        public class Controllers{
          public void Configure(IApplicationBuilder app){
            var policy = new Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy();
            policy.Headers.Add(definedList);
            policy.Methods.Add(definedList);
            policy.Origins.Add(DefinedList);
            policy.SupportsCredentials = true;
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['062', '266', '349']
  metadata:
    en:
      details: __empty__
'135':
  en:
    title: Insecure or unset HTTP headers - X-XSS Protection
    description: >
      The application uses
      the X-XSS Protection header
      considered deprecated.
      The use of this header may lead
      to stored XSS vulnerabilities.
    impact: >
      Increase the chance of exploiting a stored XSS.
    recommendation: >
      Disable the X-XSS Protection filter in the server responses.
      Instead,
      define secuirty policies using CSP Header.
    threat: >
      Unauthorized attacker
      from the Internet.
  es:
    title: Insecure or unset HTTP headers - X-XSS Protection
    description: >
      La aplicación utiliza
      el header X-XSS Protection
      considerado obsoleto.
      El uso de este header
      puede conllevar a vulnerabilidades
      de XSS almacenado.
    impact: >
      Incrementar probabilidades
      de explotar un XSS almacenado.
    recommendation: >
      Deshabilitar el filtro X-XSS Protection de las respuestas del servidor.
      En su lugar,
      definir políticas de seguridad
      utilizando la cabecera CSP.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The X-XSS-Protection header is wrongly configured
      ```http
      HTTP/1.1 200 OK
      X-XSS-Protection: 1; report=<reporting-uri>
      Content-Type: userID/html; charset=utf-8
      ```
    compliant: |
      The X-XSS-Protection header is securely configured
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['062', '175', '266', '349']
  metadata:
    en:
      details: __empty__
'136':
  en:
    title: Insecure or unset HTTP headers - Cache Control
    description: >
      The application lacks
      the Cache Control security header
      or sets the header in a insecure value.
    impact: >
      - Store sever responses
      with sensitive information
      in the browsers cache.

      - Produce potentially
      harmful server responses
      using Cache Poison attacks.
    recommendation: >
      Set the Cache Control header in the server responses
      using a secure value such as no-store , no-cache
      and must-revalidate.
    threat: >
      Unauthorized attacker
      from local network.
  es:
    title: Insecure or unset HTTP headers - Cache Control
    description: >
      La aplicación no define
      la cabecera de seguridad Caché Control
      en las repuestas del servidor
      o la tiene definida en un valor inseguro.
    impact: >
      - Almacenar respuestas del servidor
      con información sensible
      en el caché del navegador.

      - Generar respuestas
      potencialmente peligrosas
      mediante ataques de Cache Poison.
    recommendation: >
      Establecer la cabecera Caché control en las respuestas del servidor
      con un valor seguro como no-store , no-cache
      y must-revalidate.
    threat: >
      Atacante sin autorización
      desde red local.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The Cache control header is insecurely configured
      ```http

      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      Cache-Control: max-age=604800, stale-if-error=86400
      ```
    compliant: |
      The Cache control header is correctly configured
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      Cache-Control: no-cache
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['062', '177', '266', '349']
  metadata:
    en:
      details: __empty__
'137':
  en:
    title: Insecure or unset HTTP headers - X-Permitted-Cross-Domain-Policies
    description: >
      The application lacks
      the X-Permitted-Cross-Domain-Policies header
      or sets the header in a insecure value.
    impact: >
      Allow harmful requests
      from Adobe Flash or PDF documents.
    recommendation: >
      Unless the application
      requires Adobe products,
      set the X-Permitted-Cross-Domain-Policies to none
      in the server responses.
    threat: >
      Unauthorized attacker
      from the Internet.
  es:
    title: Insecure or unset HTTP headers - X-Permitted-Cross-Domain-Policies
    description: >
      La aplicación no define
      la cabecera de seguridad
      X-Permitted-Cross-Domain-Policies,
      o la tiene establecida
      en un valor inseguro.
    impact: >
      Permitir peticiones maliciosas
      de Adobe Flash o documentos PDFs.
    recommendation: >
      A menos que se requiera
      utilizar productos de Adobe
      establecer X-Permitted-Cross-Domain-Policies
      con el valor de none
      en las respuestas del servidor.
    threat: >
      Atacante sin autorización
      desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The X-Permitted-Cross-Domain-Policies header is wrongly configured to allow all policies
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      X-Permitted-Cross-Domain-Policies "all"
      ```
    compliant: |
      The X-Permitted-Cross-Domain-Policies is correctly configured
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self'
      Content-Type: userID/html; charset=utf-8
      X-Permitted-Cross-Domain-Policies "none"
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['062', '266', '349']
  metadata:
    en:
      details: __empty__
'138':
  en:
    title: Inappropriate coding practices
    description: >
      Classes are found with their fields
      defined as public, which does not
      respect the encapsulation principle.
    impact: >
      Obtain and modify attributes that
      by definition should be private.
    recommendation: >
      Set attributes as private and generate
      methods to access them.
    threat: >
      Authorized user from the Internet.
  es:
    title: Inappropriate coding practices
    description: >
      Se encuentran clases con sus campos
      definidos como públicos, lo cual no
      respeta el principio de encapsulación.
    impact: >
      Obtener y modificar atributos que por
      definición deberían ser privados.
    recommendation: >
      Establecer los atributos como privados
      y generar métodos para accederlos.
    threat: >
      Usuario autorizado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are some public fields defined inside some classes of the application
      ```java
      public class Main {
        public double magnitude;
        private String units;
      }
      ```
    compliant: |
      All attributes of the application clases should be defined as private
      ```java
      public class Main {
        private double magnitude;
        private String units;

        public double getMagnitude() {
            return magnitude;
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['156', '168', '266', '302', '342']
  metadata:
    en:
      details: __empty__
'140':
  en:
    title: Insecure exceptions - Empty or no catch
    description: >
      The application does not perform proper exception handling.
      Empty _catch_ statements are found,
      or _try_ statements without their respective _catch_.
      This behavior can make the application temporarily
      or permanently unavailable
      by presenting errors that are not being handled.
    impact: >
      - Generate the crash of the
      application due to errors that
      are not being taken into account.

      - Lose the traceability of the
      errors presented.
    recommendation: >
      For every _try_ sentence define its respective _catch_
      handling the exception accordingly.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure exceptions - Empty or no catch
    description: >
      La aplicación no realiza
      un manejo adecuado de excepciones.
      Se encuentran sentencias _catch_ vacías,
      o sentencias _try_ sin su respectivo _catch_.
      Este comportamiendo puede llevar la aplicación
      a una indisponibilidad temporal o permanente
      al presentarse errores que no se están manejando.
    impact: >
      - Generar la caída de la aplicación
      a causa de los errores que no están
      siendo tenidos en cuenta.

      - Perder la trazabilidad de los
      errores presentados.
    recommendation: >
      Para toda sentencia _try_ definir su respectivo _catch_
      con un manejo adecuado de la excepción presentada.
    threat: >
      Atacante autenticado en la aplicación desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are some try sentences without their respective catch to handle exceptions
      ```python
      def handleUserInput(userReq):
        try:
          getFile(userReq)
        //Next portion of the code without a catch sentence
      ```
    compliant: |
      All try sentences are accompanied by a catch sentence that correctly handles any exception
      ```python
      def handleUserInput(userReq):
        try:
          getFile(userReq)
        Except:
          raise Exception("Error")
        //Next portion of the code
      ```
  remediation_time: '40'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['161', '266', '359']
  metadata:
    en:
      details: __empty__
'141':
  en:
    title: Lack of data validation - URL
    description: >
      Any user on the Internet can obtain
      information on users who have sent
      their documents through the portal by
      sending as a parameter in the URL the
      date on which the document was sent.
    impact: >
      Obtain information of the
      platform users.
    recommendation: >
      Validate the right permissions
      to access user information.
    threat: >
      External attacker with valid values
      for the radicadoHours parameter.
  es:
    title: Lack of data validation - URL
    description: >
      Cualquier usuario en Internet puede
      obtener información de usuarios que
      han enviado sus documentos a través
      del portal, enviando como parámetro
      en la URL la fecha en que se realizó
      el envío del documento.
    impact: >
      Obtener información de los usuarios
      de la plataforma.
    recommendation: >
      Validar que se tengan los permisos
      para acceder a información de los
      usuarios.
    threat: >
      Atacante externo con valores válidos
      para el parámetro radicadoHours.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application only verifies a valid token to allow access to users sensitive information
      ```java
      //Improper authorization requests
      if (user != null && user.token == "VALID_TOKEN") {
        const usersInfo = getInfobyDate(user.req.date)
        //Code to display users information
      }
      ```
    compliant: |
      Only authorized users can get access to sensitive information
      ```java
      Authentication auth = SecurityContextHolder.getContext().getAuthentication();
      if (auth != null && auth.getAuthorities().stream().anyMatch(a -> a.getAuthority().equals("ADMIN"))) {
        //Code to access user information only to authorized users
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'142':
  en:
    title: Sensitive information in source code - API Key
    description: >
      The encryption key is stored in the
      source code in plain text and is not
      obtained from a secure source that
      guarantees its confidentiality.
    impact: >
      - Generate an elaborate brute-force
      attack on the applications encrypted messages.

      - Open easily information of a company, web and
      API security to sensitive data exposure.
    recommendation: >
      It is recommended to load encryption
      keys from:

      - A key vault service.

      - A configuration file that is
      properly encrypted.

      - Administrative environment variables.
    threat: >
      Unauthorized user obtaining the
      encryption key directly from the
      application repository or an application
      file.
  es:
    title: Sensitive information in source code - API Key
    description: >
      La llave de cifrado se encuentra
      almacenada en el código fuente en
      texto plano y no se obtiene de una
      fuente segura que garantice su
      confidencialidad.
    impact: >
      - Generar un ataque elaborado a los mensajes
      cifrados de la aplicación o de fuerza bruta.

      - Abrir fácilmente la información de
      una empresa, la web y la seguridad de
      la API a la exposición de datos sensibles.
    recommendation: >
      Se recomienda cargar las llaves de
      cifrado desde:

      - Un servicio de bóveda de claves.

      - Un archivo de configuración que
      esté debidamente cifrado.

      - Variables de entorno administrativas.
    threat: >
      Usuario no autorizado obteniendo la clave
      de cifrado directamente del repositorio de
      la aplicación o de un archivo de la aplicación.
  category: Information Collection
  examples:
    non_compliant: |
      The API jeys are stored in plain text value inside the code
      ```javascript
      const API_KEY = "KEY_inplaneText";

      function getInformation(userInput) {
        const info = fetch("url", API_KEY);
        //Return information
      }
      ```
    compliant: |
      API Keys and sensitive information are stored as encrypted values
      ```javascript
      //Store API_KEY as a secret encrypted
      const key = Buffer.from(keyString.substring(0, 8), "utf8");

      function getInformation(userInput){
        const info = fetch("url", key);
        //Return information
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['145', '156', '266']
  metadata:
    en:
      details: __empty__
'143':
  en:
    title: Inappropriate coding practices - Eval function
    description: >
      The eval function is used with the input
      of request data, such as url params
      or request headers, this data is not
      properly validated and can lead to
      statements being injected to
      execute commands on the server.
    impact: >
      - Execute commands on the server.

      - Send expressions that saturate
      the server.
    recommendation: >
      Perform validations over
      user data entry.
    threat: >
      Attacker authenticated from the Internet.
  es:
    title: Inappropriate coding practices - Eval function
    description: >
      La función eval es usada con la entrada
      de datos de las solicitudes, como
      parámetros en la url o cabeceras en la
      solicitud, estos datos no son correctamente
      validados y puede llevar a que se inyecten
      sentencias para ejecutar comandos
      en el servidor.
    impact: >
      - Ejecutar comandos en el servidor.

      - Enviar expresiones que hagan
      saturar al servidor.
    recommendation: >
      Realizar validaciones sobre la
      entrada de datos del usuario.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application uses the eval function with unvalidated user inputs
      ```python
      def grantAccess(urlInput):
        userId = getSearchParams(urlInput)
        if eval(expression, {}, {"url":urlInput}):
          //Grant permissions
        else:
          return None
      ```
    compliant: |
      All user inputs are validated and sanitized before being evaluated
      ```python
      def grantAccess(urlInput):
        clearInput = clearUrl(urlInput)
        userId = getSearchParams(clearInput)
        if eval(expression, {}, {"url":urlInput}):
          //Grant permissions
        else:
          return None
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'144':
  en:
    title: Inappropriate coding practices - Static Import
    description: >
      The static import declaration
      could be analogous to a normal
      import declaration.
      Where the normal import declaration
      imports classes from packages,
      allowing them to be used without
      package qualification, the static
      import declaration imports static
      members from classes, allowing them
      to be used without class qualification.
    impact: >
      - Overuse static import can result
      in code that is difficult to read
      and maintain, since readers of the
      code will not know which class defines
      a particular static object.

      -Allow unqualified access to static members
      without inheriting from the type
      containing the static members.
    recommendation: >
      Use static import very
      sparingly, if at all.
      Its useful for situations when you
      need frequent access to a few static
      objects from one or two classes.
    threat: >
      Unauthorized attacker with access to the code.
  es:
    title: Inappropriate coding practices - Static Import
    description: >
      La declaración de importación estática
      podría ser análoga a una declaración de
      importación normal.
      Mientras que la declaración de importación
      normal importa clases de paquetes,
      permitiendo su uso sin la calificación de
      paquete, la declaración de importación
      estática importa miembros estáticos de
      clases, permitiendo su uso sin la
      calificación de clase.
    impact: >
      - Reusar la importación estática puede dar
      lugar a un código difícil de leer y mantener,
      ya que los lectores del código no sabrán
      qué clase define un objeto estático concreto.

      - Permitir el acceso no cualificado a
      los miembros estáticos sin heredar del
      tipo que contiene los miembros estáticos.
    recommendation: >
      Utilice la importación estática con
      mucha moderación, si es que lo hace.
      Es útil para situaciones en las que
      se necesita un acceso frecuente
      a unos pocos objetos estáticos
      de una o dos clases.
    threat: >
      Atacante no autorizado con acceso al código.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are static imports used in the application
      ```java
      import static java.lang.System.*;
      import static java.lang.Math.*;
      import static myPublicClass;

      //Code that uses the static imports frequently
      ```
    compliant: |
      Static imports are always used in the application classes and methods
      ```java
      import java.util.*;
      import myPublicClass;

      //Code using the imports
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'145':
  en:
    title: Inappropriate coding practices - Cyclomatic complexity
    description: >
      The application has source code
      with high McCabe cyclomatic complexity,
      making the code difficult to understand and maintain,
      promoting the appearance of new security vulnerabilities
      and hindering their detection and solution.
    impact: >
      Promote the creation of security vulnerabilities
    recommendation: >
      Refactor the complex code by simplifying
      methods, subroutines or conditionals
    threat: >
      Authenticated attacker from the Internet
      with write access to the code.
  es:
    title: Inappropriate coding practices - Cyclomatic complexity
    description: >
      La aplicación cuenta con código fuente
      con una alta complejidad ciclomática McCabe.
      Esto hace que el código sea difícil de entender y mantener,
      facilita la aparición de vulnerabilidades de seguridad
      y dificulta su detección y corrección.
    impact: >
      Facilitar la introducción de vulnerabilidades de seguridad.
    recommendation: >
      Refactorizar el código complejo,
      simplificando métodos, subrutinas o condicionales extensos.
    threat: >
      Atacante autenticado desde Internet
      con permisos de edición en el código.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are functionalities in the code high a cyclomatic complexity higher than recommended values
      ```python
      def thisFunction(**args):
        inputs...
        try...
          if...
            if...
              for i in...
                if...
                  while...
                    if...
                    else if...
                else if...
                  for...
                    if...
                    else...
                while...
              if...
                somefunction();
              else if...
                newfunction();
          else if...
        catch
          if...
      ```
    compliant: |
      The application correctly implements coding principles to avoid high cyclomatic complexity within each function or class
      ```java
      public static void main(String[] args) {
        try {
          if(username.equals(username) && password.equals(password)){
            //Code to handle login
          }
        } catch (InterruptedException e) {
          //Code to catch exception when log in is not successful
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['379']
  metadata:
    en:
      details: __empty__
'146':
  en:
    title: SQL injection
    description: >
      Dynamic SQL statements are generated
      without the required data validation
      and without using parameterized statements
      or stored procedures.
    impact: >
      Inject SQL statements,
      with the possibility
      of obtaining information about the database,
      as well as extract information from it.
    recommendation: >
      Perform queries to the database
      through sentences or parameterized procedures.
    threat: Authenticated attacker from the Internet.
  es:
    title: SQL injection
    description: >
      Se generan sentencias SQL dinámicas
      sin la validación requerida de datos
      y sin utilizar sentencias parametrizadas
      o procedimientos almacenados.
    impact: >
      Inyectar sentencias SQL,
      con la posibilidad de obtener información
      sobre la base de datos,
      así como extraer información de la misma.
    recommendation: >
      Realizar las consultas a la base de datos
      por medio de sentencias
      o procedimientos parametrizados.
    threat: Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses unsanitized user inputs to perform queries
      ```java
      static void getQuery(sql) {
        try {
        java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();

        // Updating db model without filtering user inpu
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
    compliant: |
      All queries should be parameterized and dynamic inputs should be sanitized
      ```java
      static void getQuery(param) {
        param = java.net.URLDecoder.decode(param, ""UTF-8"");
        //Clean User parameters
        cleanParam = getCleanValue(param)
        //Do Query with a standard sentence
        String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ cleanParam + ""')"";

        try {
          java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'147':
  en:
    title: Insecure encryption algorithm - SSLContext
    description: >
      An SSLContext object implements the
      specified secure socket protocol.
      However, not all protocols are equal
      and some legacy protocols, such as
      SSL, have proven to be insecure.
    impact: >
      Decrypt traffic at the back-end level.
    recommendation: >
      Only secure encryption with secure
      algorithms such as TLSv1.2 or higher
      should be allowed.
    threat: >
      Unauthenticated internal attacker.
  es:
    title: Insecure encryption algorithm - SSLContext
    description: >
      Un objeto SSLContext implementa el
      protocolo de socket seguro especificado.
      Sin embargo, no todos los protocolos
      son iguales y algunos de los heredados,
      como SSL, han demostrado ser inseguros.
    impact: >
      Descifrar el tráfico a nivel de back-end.
    recommendation: >
      Solamente se debe de permitir
      cifrados seguros con algoritmos
      seguros como TLSv1.2 o Superior.
    threat: >
      Atacante interno sin autenticar.
  category: Information Collection
  examples:
    non_compliant: |
      Ther is an insecure protocol set when perfoming a connection
      ```python
      sock = tcp_connect(host, port, intention)
      ssl_ctx = ssl.SSLContext(protocol=SSL)
      ssl_sock = ssl_ctx.wrap_socket(sock, do_handshake_on_connect=False)
      try:
        ssl_sock.do_handshake()
      except ConnectionResetError as error:
        socket_has_errors = True
        return None
      return ssl_sock
      ```
    compliant: |
      Safe protocols are used when perfoming a connection
      ```python
      sock = tcp_connect(host, port, intention)
      ssl_ctx = ssl.SSLContext(protocol=TLSv1.3)
      ssl_sock = ssl_ctx.wrap_socket(sock, do_handshake_on_connect=False)
      try:
        ssl_sock.do_handshake()
      except ConnectionResetError as error:
        socket_has_errors = True
        return None
      return ssl_sock
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181', '336']
  metadata:
    en:
      details: __empty__
'148':
  en:
    title: Use of an insecure channel - FTP
    description: >
      Customer information is transmitted
      over a channel that does not use
      encryption, so credentials and confidential
      information can be captured in plain text.
    impact: >
      Capture user credentials after
      a MitM attack.
    recommendation: >
      Deploy the application over an
      encrypted communication channel,
      such as SFTP.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Use of an insecure channel - FTP
    description: >
      La información de los clientes es
      transmitida por un canal que no usa
      cifrado, por lo cual pueden ser
      capturadas en texto plano credenciales
      e información confidencial.
    impact: >
      Capturar credenciales de usuario
      tras un ataque de MitM.
    recommendation: >
      Desplegar la aplicación sobre un
      canal de comunicación cifrado, como
      por ejemplo: SFTP.
    threat: >
      Atacante anónimo desde red adyacente.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses unsafe communication channels like FTP to establish connections
      ```c
      public void SendFile(String strFilename){
        FtpWebRequest requestDir = (FtpWebRequest)FtpWebRequest.Create("ftp:url");
        requestDir.Credentials = new NetworkCredential("username", "password");

        //An FTP connection is stablished
        if(!m_bConnected){
          Console.WriteLine("Waiting for connection on DataConnection");
        }

        while(!m_bConnected) {
            Thread.Sleep(100);
        }

        //Read secure information through the channel
        byte[] btFileContent = File.ReadAllBytes(strFilename);
        int iContentLen = btFileContent.Length;
        sw.Write(btFileContent, 0, iContentLen);
        sw.Close();
      }
      ```
    compliant: |
      The application uses safe communication channels, like sftp
      ```c
      // Setup session options with a sftp channel
      SessionOptions sessionOptions = new SessionOptions{
        Protocol = Protocol.Sftp,
        HostName = "example.com",
        UserName = "user",
        Password = "mypassword",
        SshHostKeyFingerprint = "ssh-rsa 2048 xxxxxxxxxxx...="
      };

      //Send files through the secure channel
      using (Session session = new Session()){
        // Connect
        session.Open(sessionOptions);

        // Send files
        session.SendFiles(@"d:\toupload\*", "/home/user/").Check();
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'149':
  en:
    title: Use of an insecure channel - SMTP
    description: >
      The configuration of the SMTP service
      is set to not use SSL, so confidential
      information traveling by this means that
      can be viewed without any type of encryption.
    impact: >
      Obtain and modify confidential
      information sent by SMTP.
    recommendation: >
      Deploy the application over an
      encrypted communication channel,
      use SSL secure protocols.
    threat: >
      Unauthorized internal attacker.
  es:
    title: Use of an insecure channel - SMTP
    description: >
      La configuración del servicio de SMTP
      se encuentra configurada para que no
      use SSL, de modo que la información
      confidencial que viaje por este medio
      podrá ser visualizarla sin ningún
      tipo de cifrado.
    impact: >
      Obtener y modificar información
      confidencial que sea enviada por SMTP.
    recommendation: >
      Desplegar la aplicación sobre un canal
      de comunicación cifrado, utilizar
      protocolos seguros de SSL.
    threat: >
      Atacante interno no autorizado.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses unsafe communication  SMTP channels to establish connections
      ```c
      public static void Test(string server) {
        string to = "user";
        string from = "user";
        MailMessage message = new MailMessage(from, to);
        message.Subject = "Subject";
        message.Body = @"Body";
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = false;
        client.Send(message);
      }
      ```
    compliant: |
      The application uses safe communication SMTP channels
      ```c
      public static void Test(string server){
        string to = "user";
        string from = "user";
        MailMessage message = new MailMessage(from, to);
        message.Subject = "Subject";
        message.Body = @"Body";
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = true;
        client.Send(message);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'150':
  en:
    title: Use of an insecure channel - useSslProtocol()
    description: >
      The application uses useSslProtocol()
      function, which allows the trust
      manager to trust all server certificates
      presented to it, this is convenient for
      local development, but is not recommended
      for use in production, as it does not
      provide protection against
      man-in-the-middle attacks.
    impact: >
      Intercept sensitive information
      over an insecure channel.
    recommendation: >
      Preferably make use of
      useSslProtocol(SSLContext).
    threat: >
      Anonymous attacker on the internal
      network running a MitM.
  es:
    title: Use of an insecure channel - useSslProtocol()
    description: >
      La aplicación utiliza la función
      useSslProtocol(), lo que permite al
      administrador de confianza confiar en
      todos los certificados de servidor que
      se le presenten, esto es conveniente
      para el desarrollo local, pero no se
      recomienda su uso en producción, ya que
      no brinda protección contra ataques de
      man-in-the-middle.
    impact: >
      Interceptar información sensible
      que viaja por un canal inseguro.
    recommendation: >
      Preferiblemente hacer uso de
      useSslProtocol(SSLContext).
    threat: >
      Atacante anónimo en la red
      interna ejecutando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses unsafe communication  channels, like the useSslProtocol without a defined Context
      ```python
      sock = tcp_connect(host, port, intention)
      ssl_ctx = ssl.SSLContext()
      ssl_protocol = useSslProtocol()
      ssl_sock = ssl_ctx.wrap_socket(sock, do_handshake_on_connect=False)
      try:
        ssl_sock.do_handshake()
      except ConnectionResetError as error:
        socket_has_errors = True
        return None
      return ssl_sock
      ```
    compliant: |
      The application uses safe communication channels
      ```python
      sock = tcp_connect(host, port, intention)
      ssl_ctx = ssl.SSLContext(protocol=TLSv1.3)
      ssl_protocol = useSslProtocol(SSLContext = ssl_ctx)
      ssl_sock = ssl_ctx.wrap_socket(sock, do_handshake_on_connect=False)
      try:
        ssl_sock.do_handshake()
      except ConnectionResetError as error:
        socket_has_errors = True
      return None
      return ssl_sock
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'151':
  en:
    title: Use of an insecure channel - Telnet
    description: >
      Customer information is transmitted
      over a channel that does not use
      encryption, so credentials and
      confidential information can be
      captured in plain text.
    impact: >
      Obtain Telnet credentials
      after a MitM attack.
    recommendation: >
      Deploy the application over an
      encrypted communication channel.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Use of an insecure channel - Telnet
    description: >
      La información de los clientes es
      transmitida por un canal que no usa
      cifrado, por lo cual pueden ser
      capturadas en texto plano credenciales
      e información confidencial.
    impact: >
      Obtener credenciales de Telnet
      tras un ataque de MitM.
    recommendation: >
      Desplegar la aplicación sobre un
      canal de comunicación cifrado.
    threat: >
      Atacante anónimo desde red adyacente.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses an insecure channel to transmit data
      ```c
      public static void CreateTestMessage(string server){
        TcpClient telnet = new TcpClient("10.5.6.59", 23);
        NetworkStream telnetStream = telnet.GetStream();
        StreamWriter output = new StreamWriter(telnetStream);
        StreamReader input = new StreamReader(telnetStream);
        client.Send(ExampleMessage);
      }
      ```
    compliant: |
      The application uses an secure channel to transmit data
      ```c
      public static void CreateTestMessage(string server){
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = true;
        client.Send(exampleMessage);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'152':
  en:
    title: Insecure or unset HTTP headers - X-Frame Options
    description: >
      The application uses the X-Frame Options header
      on the server responses as the only protection mechanism
      against clickjacking.
      This header is considered deprecated,
      since its protection can be bypassed using several iframe layers.
    impact: >
      Embed the application in malicious frames.
    recommendation: >
      - Disable the X-Frame Options
      from the server responses.

      - Define the frame_ancestors policy
      in the Content Security Policy header.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure or unset HTTP headers - X-Frame Options
    description: >
      La aplicación utiliza la cabecera X-Frame Options
      como única medida de protección contra ataques de clickjacking.
      Esta cabecera es considerada obsoleta,
      debido a que su protección puede ser saltada
      utilizando iframes de múltiples capas.
    impact: >
      Incrustar la aplicación en frames maliciosos.
    recommendation: >
      - Deshabilitar el header X-Frame Options
      en las respuestas del servidor.

      - Definir la política de seguridad frame_ancestors
      en la cabecera Content Security Policy.
    threat: >
      Atacante anónimo desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The X-Frame-Options header is enabled
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      X-Frame-Options: SAMEORIGIN
      ```
    compliant: |
      The X-Frame-Options header is disabled
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: default-src 'self' frame_ancestors
      Content-Type: userID/html; charset=utf-8
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['062', '175', '266', '349']
  metadata:
    en:
      details: __empty__
'153':
  en:
    title: Insecure or unset HTTP headers - Accept
    description: >
      The application does not set the Accept header
      or allows any MIME type in the requests.
      An attacker could abuse this feature to cause
      unexpected behaviors when the application interprets
      incorrect content-types.
    impact: >
      Lead to unexpected behaviors
      due to content type misinterpretations.
    recommendation: >
      - Set the Accept Header in client requests.

      - Define explicitly the allowed content types
      for the application.

      - Deny all request that contain a content type
      different from the expected by the application.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure or unset HTTP headers - Accept
    description: >
      La aplicación no define el header Accept,
      o permite cualquier MIME type en las peticiones.
      Un atacante podría abusar de esta funcionalidad
      para causar comportamientos inesperados cuando la aplicación
      interpreta content-types incorrectos.
    impact: >
      Causar comportamientos inesperados
      por interpretaciones incorrectas de content types.
    recommendation: >
      - Establecer la cabecera Accept en las peticiones del cliente.

      - Definir explícitamente los content types permitidos
      por la aplicación.

      - Denegar todas las peticiones que contengan
      content types diferentes a los esperados por la aplicación.
    threat: >
      Atacante anónimo desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The Accept header is wrongly configured
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      Accept: */*
      ```
    compliant: |
      The Accept header is securely configured to restrict certain contents
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      Accept: text/html, application/xhtml+xml, application/xml;q=0.9,
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266', '349']
  metadata:
    en:
      details: __empty__
'154':
  en:
    title: Time-based SQL Injection
    description: >
      In a time-based attack, someone could inject a SQL
      command to the server with code to force a delay in
      the execution of the queries or with a heavy query
      that generates this time delay.
      Depending on the time response, it is possible to deduct
      some information and determine if a vulnerability is
      present to exploit it.
    impact: >
      - Allow an attacker to interfere with the queries
      that an application makes to its database.

      - Retrieve information from the database
      an even extract data.

      - Affect the authentication and authorization
      aspects of the application.

      - Steal sensitive information stored in databases.
    recommendation: >
      - Use of prepared statements (with parameterized queries).

      - Use of stored procedures.

      - Enforcing the least privilege.
    threat: >
      Anonymous attacker from an intranet.
  es:
    title: Time-based SQL Injection
    description: >
      En un ataque basado en el tiempo, alguien podría
      inyectar un comando SQL al servidor con código
      para forzar un retraso en la ejecución de las
      consultas o con una consulta pesada que genere
      este retraso de tiempo. En función de la respuesta
      temporal, es posible deducir cierta información y
      determinar si existe una vulnerabilidad para explotarla.
    impact: >
      - Permitir a un atacante interferir con las
      consultas que una aplicación hace a su base de datos.

      - Recuperar información de la base de
      datos e incluso extraer datos.

      - Afectar a los aspectos de autenticación y
      autorización de la aplicación.

      - Robar información sensible almacenada
      en las bases de datos.
    recommendation: >
      - Uso de sentencias preparadas (con
      consultas parametrizadas).

      - Uso de procedimientos almacenados.

      - Aplicación del privilegio mínimo.
    threat: >
      Atacante anónimo desde intranet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application contains possible harmful time-delay query
      ```java
      static void getQuery(userSql){
        try {
          java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();

          // make query without filtering user input
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
    compliant: |
      The application performs queries using standardized and sanitized parameters
      ```java
      static void getQuery(param){
        param = java.net.URLDecoder.decode(param, ""UTF-8"");
        //Clean User parameters
        cleanParam = getCleanValue(param)
        //Do Query with a standard sentence
        String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ cleanParam + ""')"";

        try {
          java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'155':
  en:
    title: SQL Injection - Headers
    description: >
      The application allows injecting
      SQL statements in the idClient
      header and application fields.
    impact: >
      - Obtain confidential information
      from the database.

      - Modify and delete information
      from the database.
    recommendation: >
      Perform database queries by
      means of parameterized statements
      or stored procedures.
    threat: >
      Authenticated internal attacker
      in the application.
  es:
    title: SQL Injection - Headers
    description: >
      La aplicación permite inyectar
      sentencias SQL en la cabecera
      idCliente y campos de la aplicación.
    impact: >
      - Obtener información confidencial
      de la base de datos.

      - Modificar y eliminar información
      de la base de datos.
    recommendation: >
      Realizar las consultas a la base
      de datos por medio de sentencias
      parametrizadas o procedimientos
      almacenados.
    threat: >
      Atacante interno autenticado
      en la aplicación.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application contains possible harmful queries
      ```java
      static void getQuery(userSql){
        try {
          java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();

          // make query with access to system Headers without filtering user input
          updateModel(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
    compliant: |
      The application performs queries using standardized and sanitized parameters
      ```java
      static void getQuery(param){
        param = java.net.URLDecoder.decode(param, ""UTF-8"");
        //Clean User parameters
        cleanParam = getCleanValue(param)
        //Do Query with a standard sentence
        String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ cleanParam + ""')"";

        try {
          // make  query with parametrized statements
          updateModel(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'156':
  en:
    title: Uncontrolled external site redirect
    description: >
      Redirects made by the application
      are not controlled and could be
      manipulated by an attacker.
    impact: >
      Redirect users to sites
      controlled by an attacker.
    recommendation: >
      Use predefined parameters and not
      information that can be manipulated
      by the user for redirection to web
      sites in the application.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Uncontrolled external site redirect
    description: >
      Las redirecciones hechas por la
      aplicación no son controladas y
      pueden ser manipuladas por un atacante.
    impact: >
      Redirigir a usarios a sitios
      controlados por un atacante.
    recommendation: >
      Usar parámetros predefinidos y no
      información que pueda ser manipulada
      por el usuario para la redirección
      a sitios web en la aplicación.
    threat: >
      Atacante anónimo desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The application does not control all input parameters in a redirection
      ```javascript
      function redirectUser (userParam) {
        url = "myhost/" + userParam;
        //Redirect user to another site in the application
        window.location.href = url;
      }
      ```
    compliant: |
      The application correctly validates input parameters before redirecting to a url
      ```javascript
      function redirectUser (userParam) {
        if (userParam == "SignOut"){
          url = "myhost/signout"
          //Redirect user to another site in the application
          window.location.href = url;
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '324']
  metadata:
    en:
      details: __empty__
'157':
  en:
    title: Unrestricted access between network segments
    description: >
      The network does not currently
      limit access between network
      segments, so an employee can
      access database servers from
      the Internet.
    impact: >
      Obtain unauthorized access to network traffic.
    recommendation: >
      Segment the corporate network
      using the principle of least
      privilege necessary to limit
      access to the database.
    threat: >
      Unauthorized user in local network.
  es:
    title: Unrestricted access between network segments
    description: >
      La red no limita actualmente
      el acceso entre segmentos de
      red, por lo cual un empleado
      desde internet puede acceder
      a servidores de bases de datos.
    impact: >
      Obtener acceso no autorizado al tráfico de la red.
    recommendation: >
      Segmentar la red corporativa
      utilizando el principio de
      mínimo privilegio necesario
      para limitar los accesos a
      la base de datos.
    threat: >
      Usuario no autorizado en red local.
  category: Access Subversion
  examples:
    non_compliant: |
      A resource does not have proper network segments
      ```terraform
      resource "azurerm_key_vault" "vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
        soft_delete_retention_days = 7
        soft_delete_enabled        = true
        purge_protection_enabled   = true
        network_acls {
          default_action = "Allow"
          bypass         = "None"
        }
      }
      ```
      A resource has a default network access configured
      ```terraform
      resource "azurerm_storage_account_network_rules" "vulnerable" {
        resource_group_name  = azurerm_resource_group.test.name
        storage_account_name = azurerm_storage_account.test.name

        default_action = "Allow"
      }

      resource "azurerm_storage_account" "vulnerable" {
        name                = var.watcher
        resource_group_name = azurerm_resource_group.test.name
        location            = azurerm_resource_group.test.location

        network_rules {
          default_action = "Allow"
        }

        account_tier              = "Standard"
        account_kind              = "StorageV2"
        account_replication_type  = "LRS"
        enable_https_traffic_only = true
        min_tls_version           = "TLS1_2"

        queue_properties {
          logging {
            delete = true
            read   = true
            write  = true
          }
        }
      }
      ```
      Using the azure CLI, the following command returns the network access configuration
      ```
      $ az cosmosdb show
           --ids {subscription_id}
           --query '{"ipRangeFilter":ipRules,"isVirtualNetworkFilterEnabled":isVirtualNetworkFilterEnabled}'
      ```
      If the command output returns false for the "isVirtualNetworkFilterEnabled" attribute and [] for the "ipRangeFilter" attribute, the resource has an insecure default network access.
    compliant: |
      All resources in the application have properly defined network segments
      ```terraform
      resource "azurerm_key_vault" "not_vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
        soft_delete_retention_days = 7
        soft_delete_enabled        = true
        purge_protection_enabled   = true
        network_acls {
          default_action = "Deny"
          bypass         = "AzureServices"
        }
      }
      ```
      All resources use a secure network access configuration
      ```terraform
      resource "azurerm_storage_account_network_rules" "not_vulnerable" {
        resource_group_name  = azurerm_resource_group.test.name
        storage_account_name = azurerm_storage_account.test.name

        default_action = "Deny"
      }


      resource "azurerm_storage_account" "not_vulnerable" {
        name                = var.watcher
        resource_group_name = azurerm_resource_group.test.name
        location            = azurerm_resource_group.test.location

        network_rules {
          default_action = "Deny"
        }

        account_tier              = "Standard"
        account_kind              = "StorageV2"
        account_replication_type  = "LRS"
        enable_https_traffic_only = true
        min_tls_version           = "TLS1_2"

        queue_properties {
          logging {
            delete = true
            read   = true
            write  = true
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'158':
  en:
    title: Unrestricted access between network segments - Azure AD
    description: >
      Azure Active Directory Graph API
      services can be accessed and used
      from anywhere on the Internet.
      Note: the URL of the service as
      well as the credentials to use it
      were found in the application code.
    impact: >
      - Access to confidential information
      from any computer on the Internet.

      - Edit information from any
      computer on the Internet.
    recommendation: >
      Verify Azure documentation regarding
      Conditional Access policy and securely
      configure the service by establishing
      trusted locations to access the service.
    threat: >
      Authorized user from the Internet.
  es:
    title: Unrestricted access between network segments - Azure AD
    description: >
      Es posible acceder y utilizar los
      servicios Azure Active Directory Graph
      API desde cualquier punto de internet.
      Nota: la URL del servicio como las
      credenciales para utilizarlo se encontraron
      en el código de la aplicación.
    impact: >
      - Acceder a información confidencial
      desde cualquier equipo de internet.

      - Editar información desde cualquier
      equipo de internet.
    recommendation: >
      Verificar la documentación de Azure
      con respecto a Conditional Access
      policy y configurar de manera segura
      el servicio estableciendo ubicaciones
      confiables para acceder al servicio.
    threat: >
      Usuario autorizado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The credentials to access azure services are found stored in the source code
      ```java
      USER_NAME = "admin";
      PASSWORD = "accesspassword"
      public void grantAccess(user_id){
        ExecutorService service = Executors.newFixedThreadPool(1);
        AuthenticationContext context = new AuthenticationContext(AUTHORITY, false, service);
        Future<AuthenticationResult> future = context.acquireToken(
            "https://graph.windows.net", user_id, USER_NAME, PASSWORD, null);
        AuthenticationResult result = future.get();
        //Granted access to the user
      }
      ```
    compliant: |
      Azure resources are configured to only be accessible to authorized users
      ```java
      public void grantAccess(user_id){
        //Check correct permissions
        if (getUser(user_id).hasPermissions){
          ExecutorService service = Executors.newFixedThreadPool(1);
          AuthenticationContext context = new AuthenticationContext(AUTHORITY, false, service);
          Future<AuthenticationResult> future = context.acquireToken(
            "https://graph.windows.net", user_id, null);
          AuthenticationResult result = future.get();
          //Granted access to the user
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'159':
  en:
    title: Excessive privileges
    description: >
      A user with access to the application
      can generate an error within the
      application to gain access to the
      SharePoint platform.
      From which they can create groups with
      excessive privileges, to use functions
      that were not possible to access initially.
      Also, they can modify or remove
      permissions that other users or groups
      have on the application and share content
      with users who initially did not have access.
    impact: >
      - Create groups within the application
      with excessive permissions, to use
      functions to which you did not have
      access initially.

      - Edit or remove permissions that
      other users or groups have on
      the application.

      - Share application content with
      unauthorized users.
    recommendation: >
      Configure the application so that
      users cannot modify their permissions.
    threat: >
      Attacker with access to the
      application from the Internet.
  es:
    title: Excessive privileges
    description: >
      Un usuario con acceso a la aplicación
      puede generar un error dentro de la
      misma para de esta manera obtener acceso
      a la plataforma de SharePoint.
      Desde esta puede crear grupos con
      privilegios excesivos, para utilizar
      funciones a las que no era posible
      acceder de manera inicial.
      De igual manera puede modificar o remover
      los permisos que otros usuarios o grupos
      tienen sobre la aplicación y compartir
      contenido de con usuarios que inicialmente
      no tenían acceso.
    impact: >
      - Crear grupos dentro de la aplicación
      con permisos excesivos para utilizar
      funciones a las que no se tenia acceso
      de manera inicial.

      - Editar o remover los permisos que
      otros usuarios o grupos tienen sobre
      la aplicación.

      - Compartir contenido de la aplicación
      con usuarios no autorizados.
    recommendation: >
      Configurar la aplicación de modo
      tal que los usuarios no puedan
      modificar sus permisos.
    threat: >
      Atacante con acceso a la
      aplicación desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There are poorly configured access roles found in the application
      ```java
      class User{
        UserRole role;
        //other user concerning stuff
      }

      abstract class UserRole{
        abstract void view();
      }

      class AdminRole extends UserRole{
        public void add(){}
        public void view(){}
        public void edit(){}
        public void remove(){}
      }
      //A class exists that allows a user to get editing permissions
      class EditRole extends UserRole{
        public void view(){}
        public void edit(){}
      }
      ```
    compliant: |
      Access roles have clearly defined permissions
      ```java
      class User{
        UserRole role;
        //other user concerning stuff
      }

      abstract class UserRole{
        abstract void view();
      }

      private class AdminRole extends UserRole{
        public void add(){}
        public void view(){}
        public void edit(){}
        public void remove(){}
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: __empty__
'160':
  en:
    title: Excessive privileges - Temporary Files
    description: >
      The application creates temporary
      withouth properly restricting their privileges
      or access modes, allowing an attacker
      to craft new attack vectors
    impact: >
      - Get access to the created
      temporary files.

      - Tamper data contained
      in the created temporary files.
    recommendation: >
      Create the temporary files
      in a different directory
      than the default
      provided by the Operative system
      and ensure it has 0600 permission mask.
    threat: >
      Authenticated attacker
      with local access to the server.
  es:
    title: Excessive privileges - Temporary Files
    description: >
      La aplicación crea archivos temporales
      sin limitar adecuadamente los permisos o
      modos de acceso de los mismos,
      permitiendo a un atacante
      generar nuevos vectores de ataque
    impact: >
      - Obtener acceso
      a los archivos temporales creados.

      - Manipular los datos contenidos
      en los archivos temporales.
    recommendation: >
      Crear los archivos temporales
      en un directorio diferente al provisto
      por defecto en el sistema operativo
      y asegurar que estos tienen una máscara
      de permisos 0600.
    threat: >
      Atacante autenticado con acceso local al servidor.
  category: Access Subversion
  examples:
    non_compliant: |
      The application creates temporary files in a default path
      ```java
      import java.io.File;

      public class Test {
          public static void main(String[] args){
            try {
              System.out.println(File.createTempFile("xxx", null));
            } catch (Exception e) {}
          }
      }
      ```
      Create a temporary path without limiting values
      ```c {3,7,15}
      using System;
      using System.IO;

      namespace StreamReadWrite{
        class Program{
          static void Main(string[] args){
            var tempPath = Path.GetTempFileName();
            var randomPath = Path.Combine(Path.GetTempPath(), Path.GetRandomFileName());
            using (var writer = new StreamWriter(tempPath)){
              writer.WriteLine("content");
            }
          }
        }
      }
      ```
    compliant: |
      When using temporary files, the application clearly defines a directory path and user permissions
      ```import java.nio.file.Files;
      public class Test {
          public static void main(String[] args){
            try {
              // Provide attrs to define different directory path and correct permissions
              System.out.println(Files.createTempFile("xxx", attrs=[xxx]));
            } catch (Exception e) {}
          }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: H
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: |
        This java method
        has the following signature:

        ```c
        public static File createTempFile(
          // The prefix string defines the files name;
          // must be at least three characters long
          String prefix,
          // The suffix string defines the file's extension;
          // if null the suffix ".tmp" will be used
          String suffix,
          // The directory in which the file is to be created.
          // For default temporary-file directory null is to passed.
          File directory,
        )
        ```

        The first two arguments
        do not affect security
        of the created file.

        In Linux,
        files and directories
        are different entities,
        they have their own permissions
        and are isolated from other files
        and directories.

        Protections you apply to the directory
        do not affect the files inside of it.
        For example,
        if I protect the directory
        I can prevent an attacker
        from executing the `ls` command,
        but nothing impedes the attacker
        from executing `cat directory/file`.

        To prevent access to the file
        we must protect the file,
        not the directory.

        Additionally,
        we make sure that permissions
        are set atomically.
        If we do not,
        the following situation can happen:

        - At moment **A**
        we `File.createTempFile()` a file.
        - At moment **B** we add
        secure permissions to the file.

        After moment **B** the file is secured.
        However,
        between moment **A** and moment **B**
        the file has insecure permissions
        and an attacker had enough opportunity
        to get control over it.

        ## Vulnerable implementation

        The `java.io.File.createTempFile` method
        creates files with write permissions
        in groups and other:

        ```c {6}

        import java.io.File;

        public class Test {
          public static void main(String[] args){
            try {
              System.out.println(File.createTempFile("xxx", null));
            }
            catch (Exception e) {}
          }
        }

        /*
        * $ ls -al $(javac Test.java && java Test)
        *
        * -rw-r--r-- 1 fluid fluid 0 Aug 28 14:44 /tmp/xxx948760279845756007.tmp
        */
        ```

        ## Secure implementation

        - Use `java.nio.file.Files.createTempFile`.
        - Use the `attrs` argument
          (an optional list of file attributes
          to set atomically when creating the file).
'161':
  en:
    title: Missing secure obfuscation
    description: >
      It is possible to obtain source
      code from the application since
      it has not been securely obfuscated.
      This could allow an attacker to
      understand the inner workings of
      the application or obtain technical
      or sensitive information.
    impact: >
      Understand the inner workings of
      the application to generate new
      attack vectors.
    recommendation: >
      Obfuscate the applications JavaScript
      to prevent leakage of technical
      information that could reveal
      vulnerable features.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Missing secure obfuscation
    description: >
      Es posible obtener código fuente de
      la aplicación puesto que no ha sido
      ofuscado de forma segura.
      Esto podría permitirle a un atacante
      entender el funcionamiento interno
      de la aplicación u obtener información
      técnica o sensible.
    impact: >
      Comprender el funcionamiento
      interno de la aplicación para
      generar nuevos vectores de ataque.
    recommendation: >
      Ofuscar los Javascript de la
      aplicación para evitar la fuga
      de información técnica que pueda
      revelar funciones vulnerables.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The source code was not obfuscated
      ```java
      private void calculatePay(SpecialList clientGroup){
        while(clientGroup.HasMore()){
          clientGroup.getNext(true);
          client.updatePay();
          makePay(client);
        }
      }
      ```
    compliant: |
      The source code was obfuscated, preventing an attacker to understand the inner workings of the code
      ```java
      //Rename Obfuscation method
      private void calculatePay(a b){
        while(b.c()){
          b.a(true);
          c.a();
          b(c);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['159']
  metadata:
    en:
      details: __empty__
'162':
  en:
    title: Missing secure obfuscation - binary
    description: >
      An anonymous user from the Internet
      can extract the .apk of the Android
      application to decompile the binaries
      in order to have access to the source
      code and thus better understand the
      logic of the application.
    impact: >
      - Extract the apk
      from the application.

      - Decompile the
      binaries found in the apk.

      - Understand the
      logic of the application and
      increases the attack surface.
    recommendation: >
      Obfuscate all source code files
      in production.
    threat: >
      Anonymous user from the Internet
      with access to the application
      logic being able to view the
      binaries and see the source code.
  es:
    title: Missing secure obfuscation - binary
    description: >
      Un usuario anónimo desde internet puede
      extraer el .apk de la aplicación Android
      para descompilar los binarios con el fin
      de tener acceso a el código fuente y así
      entender mejor la lógica de la aplicación.
    impact: >
      - Extraer el apk de la
      aplicación.

      - Descompilar los binarios
      encontrados en el apk.

      - Entender la lógica
      de la aplicación y aumenta la
      superficie de ataque.
    recommendation: >
      Ofuscar todos los archivos de código
      fuente en producción.
    threat: >
      Usuario anónimo desde Internet
      con acceso a la lógica de
      la aplicación, puede ver los
      binarios y ver el código fuente.
  category: Information Collection
  examples:
    non_compliant: |
      A function that recreates a sensistive part of the business model can be accesed by an attacker
      ```javascript
      const rateLimit = require("express-rate-limit");
      const apiLimiter = rateLimit({
        windowMs: 15 * 60 * 1000,
        max: None
      });
      ```
    compliant: |
      Applying some obfuscation technique, the function above could be mabe uninteligible to an attacker
      ```javascript
      function _0x5760(){const _0x5b43e6=['318ZFoYzZ','13572pkItrl','2840LJWeoj','express-rate-limit','1464175ucMfwb','651524FvQCOL','2517774aEwpWg','2888lRwrdU','6748SYAhfv','1686jgfuoM','169575nYzNCZ'];_0x5760=function(){return _0x5b43e6;};return _0x5760();}const _0x1b2ce3=_0x49ea;function _0x49ea(_0x1abde5,_0x4c6e26){const _0x576075=_0x5760();return _0x49ea=function(_0x49eadd,_0x427b84){_0x49eadd=_0x49eadd-0xaf;let _0x5cf1f9=_0x576075[_0x49eadd];return _0x5cf1f9;},_0x49ea(_0x1abde5,_0x4c6e26);}(function(_0x1a041f,_0x32de2e){const _0x3f5060=_0x49ea,_0x335ce6=_0x1a041f();while(!![]){try{const _0x42fc9f=parseInt(_0x3f5060(0xb0))/0x1*(parseInt(_0x3f5060(0xb9))/0x2)+parseInt(_0x3f5060(0xaf))/0x3+-parseInt(_0x3f5060(0xb5))/0x4+-parseInt(_0x3f5060(0xb4))/0x5+-parseInt(_0x3f5060(0xb6))/0x6+-parseInt(_0x3f5060(0xb8))/0x7*(-parseInt(_0x3f5060(0xb7))/0x8)+parseInt(_0x3f5060(0xb1))/0x9*(parseInt(_0x3f5060(0xb2))/0xa);if(_0x42fc9f===_0x32de2e)break;else _0x335ce6['push'](_0x335ce6['shift']());}catch(_0xcc228){_0x335ce6['push'](_0x335ce6['shift']());}}}(_0x5760,0x370fa));const rateLimit=require(_0x1b2ce3(0xb3)),apiLimiter=rateLimit({'windowMs':0xf*0x3c*0x3e8,'max':None});
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['159']
  metadata:
    en:
      details: __empty__
'163':
  en:
    title: Insecure digital certificates
    description: >
      The apk certificate was signed using
      the SHA1 algorithm.
      This algorithm is considered quite
      insecure, so it should not be used
      to sign certificates since it can
      be reversed in order to obtain
      the signing key.
      On the other hand, there are URLs that,
      just by accessing them, it is possible
      to download the digital certificates
      stored in them, thus exposing confidential
      information of the organization.
    impact: >
      - Obtain the signing key of
      the applications certificate.

      - Change the application in the
      appStore to a malicious one by
      using the obtained signing keys.
    recommendation: >
      Sign the certificate with SHA2 or higher.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure digital certificates
    description: >
      El certificado del apk fue firmado
      usando el algoritmo SHA1.
      Dicho algoritmo es considerado bastante
      inseguro, por lo que no debería ser
      usado para firmar los certificados
      ya que puede ser revertido con el fin
      de obtener la llave de firmado.
      Por otro lado, existen URLs que, con
      solo acceder a ellas, es posible descargar
      los certificados digitales almacenados en
      estas, exponiendo de esta forma información
      confidencial de la organización.
    impact: >
      - Obtener la llave de firmado del
      certificado de la aplicación.

      - Cambiar la aplicación en la
      appStore por una maliciosa al
      usar las llaves de firmado obtenidas.
    recommendation: >
      Firmar el certificado con SHA2 o superior.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application has an insecure algorithm for the certificate signature
      ```kotlin
      android {
        signingConfigs {
          getByName("config") {
            keyAlgorithm = keystoreProperties["SHA1"]
            ...
          }
        }
      }
      ```
    compliant: |
      The application has a secure algorithm for the certificate signature
      ```kotlin
      android {
        signingConfigs {
          getByName("config") {
            keyAlgorithm = keystoreProperties["SHA2"]
            ...
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['088', '089', '090', '091', '092', '093']
  metadata:
    en:
      details: __empty__
'164':
  en:
    title: Insecure service configuration
    description: >
      No requestValidationMode is assigned
      in the server configuration files,
      which would allow XSS attacks.
    impact: >
      Obtain sensitive information
      through XSS attacks.
    recommendation: >
      Activate the recommended protection
      mechanisms as Request validation.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration
    description: >
      En los archivos de configuración del
      servidor no se asigna requestValidationMode,
      lo que permitiría ataques XSS.
    impact: >
      Obtener información sensible
      mediante ataques XSS.
    recommendation: >
      Activar los mecanismos de protección
      recomendados como Request Validation.
    threat: >
      Atacante anónimo desde internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not request validation mode
      ```html
      <system.web>
          <compilation debug="true" targetFramework="4.0" />
          <httpRuntime requestValidationMode=None />
      </system.web>
      ```
    compliant: |
      The application enables request Validation mode
      ```html
      <system.web>
          <compilation debug="true" targetFramework="4.0" />
          <httpRuntime requestValidationMode="2.0" />
      </system.web>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['185', '266']
  metadata:
    en:
      details: __empty__
'165':
  en:
    title: Insecure service configuration - AWS
    description: >
      Because of a misconfiguration in the
      AWS services, it is possible to identify
      and/or try to access resources,
      functionalities, network segments and ports.
    impact: >
      - Identify ports, services and
      network segments.

      - Try to access the services found.

      - Get credentials, services and
      files information.
    recommendation: >
      Securely configure the vulnerable service
      to be accessed only by authorized users.
    threat: >
      External attacker with credentials.
  es:
    title: Insecure service configuration - AWS
    description: >
      Debido a una mala configuración en los
      servicios AWS, es posible identificar y/o
      intentar acceder a recursos, funcionalidades,
      segmentos de red y puertos.
    impact: >
      - Identificar puertos, servicios
      y segmentos de red.

      - Intentar acceder a los
      servicios encontrados.

      - Obtener información de credenciales,
      servicios y archivos.
    recommendation: >
      Configurar de forma segura el servicio
      vulnerable para que sólo puedan acceder
      a él los usuarios autorizados.
    threat: >
      Atacante externo con credenciales.
  category: Functionality Abuse
  examples:
    non_compliant: |
      An AWS resource is configured to be publicly accesible with editing permissions
      ```yaml
      Resources:
        S3Bucket:
          Type: AWS::S3::Bucket
          DeletionPolicy: Retain
          Properties:
            AccessControl: PublicReadWrite
            BucketName: SKIMS-PUBLIC-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: aws:kms
                    KMSMasterKeyID: KMS-KEY-ARN
      ```
    compliant: |
      All AWS sensitive resources have defined security configurations and are private
      ```yaml
      Resources:
        PrivateS3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            AccessControl: Private
            BucketName: SKIMS-PRIVATE-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: aws:kms
                    KMSMasterKeyID: KMS-KEY-ARN
          DeletionPolicy: Delete
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['185', '265', '266']
  metadata:
    en:
      details: __empty__
'166':
  en:
    title: Insecure service configuration - Kerberoast
    description: >
      Due to the operation of the Kerberos
      service it is possible to extract krbtgs
      hashes of users within the domain.
    impact: >
      Obtain users hashes.
    recommendation: >
      Configure a logger to alert
      Kerberoast attacks.
    threat: >
      Unauthorized domain user with valid
      credentials in the internal network.
  es:
    title: Insecure service configuration - Kerberoast
    description: >
      Debido al funcionamiento del servicio
      de Kerberos es posible extraer hashes
      krbtgs de usuarios dentro del dominio.
    impact: >
      Obtener hashes de usuarios.
    recommendation: >
      Configurar un logger que alerte
      los ataques de Kerberoast.
    threat: >
      Usuario del dominio no autorizado con
      credenciales válidas en la red interna.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A Kerberoast service uses the default security group configuration
      ```yaml
      Properties:
        GroupDescription: Domain Controllers Security Group
        VpcId: !Ref VPCID
        SecurityGroupIngress:
          - IpProtocol: tcp
            Description: Kerberos
            FromPort: 88
            ToPort: 88
            SourceSecurityGroupId: Allow
      ```
    compliant: |
      The service should have a defined security group id, that allows a logger to be activated in case of an attack
      ```yaml
      Properties:
        GroupDescription: Domain Controllers Security Group
        VpcId: !Ref VPCID
        SecurityGroupIngress:
          - IpProtocol: tcp
            Description: Kerberos
            FromPort: 88
            ToPort: 88
            SourceSecurityGroupId: !Ref AdminMembersSG
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'167':
  en:
    title: Insecure service configuration - Wireless Certificates
    description: >
      Certificates provide a more secure form of
      network authentication.
      These could be stealed for a malware for use
      communications fraud and data exfiltration,
      furthermore, non-existent or faulty validation of
      the access point certificate, allows attackers
      to obtain the challenge response values used
      in authentication.
      Attackers could use this data to bruteforce the
      password hash for the legitimate network.
    impact: >
      - Falsify business services, corrupting
      the trust provided by a valid certificate,
      so that sensitive communications can
      be decrypted.

      - Exploit for entry due to unsecured or
      lightly protected wireless access.
    recommendation: >
      Install correct certificates on servers, revoke
      vulnerable ones and validate new keys and
      certificates are installed and working.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure service configuration - Wireless Certificates
    description: >
      Los certificados proporcionan una forma más
      segura de autenticación en la red.
      Estos podrían ser robados por un malware para
      utilizar el fraude en las comunicaciones y la
      exfiltración de datos, además, la validación
      inexistente o defectuosa del certificado del
      punto de acceso, permite a los atacantes obtener
      los valores Challenge-Response utilizados
      en la autenticación.
      Los atacantes podrían utilizar estos datos para
      forzar el hash de la contraseña de la red legítima.
    impact: >
      - Falsificar servicios empresariales, corrompiendo
      la confianza que proporciona un certificado válido,
      por lo que las comunicaciones sensibles pueden
      ser descifradas.

      - Explotación de la entrada debido a un acceso
      inalámbrico no seguro o poco protegido.
    recommendation: >
      Instalar los certificados correctos en los servidores,
      revocar los vulnerables y validar que las nuevas claves
      y certificados están instalados y funcionan.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A service is configured with poor security protocols, such as ssl
      ```yaml
      Defaults:
        policyProject: 'DefaultPolicies'
        Policies:
          MQEndpoint: 'MQEndpoint'
          remoteDefaultQueueManager: '{MQClientPolicy}:MQEndpoint'
        RestAdminListener:
          requireClientCert: false
        BrokerRegistry:
          mqKeyRepository: /startup/ssl/keystore
          ResourceManagers: JVM: jvmSystemProperty: '-Dcom.ibm.fxr.passfileenc=n'
        Log:
          consoleLog: true
          outputFormat: 'ibmjson'
        AdminLog:
          enabled: true
          consoleLog: true
        Protocol:
          ssl: enabled
      ```
    compliant: |
      All services use secure configurations and protocols
      ```yaml
      Defaults:
        policyProject: 'DefaultPolicies'
        Policies:
          MQEndpoint: 'MQEndpoint'
          remoteDefaultQueueManager: '{MQClientPolicy}:MQEndpoint'
        RestAdminListener:
          requireClientCert: true
        BrokerRegistry:
          mqKeyRepository: /startup/ssl/keystore
          ResourceManagers: JVM: jvmSystemProperty: '-Dcom.ibm.fxr.passfileenc=n'
        Log:
          consoleLog: true
          outputFormat: 'ibmjson'
        AdminLog:
          enabled: true
          consoleLog: true
        Protocol:
          tls: enabled
          version: 1.2
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['089', '090', '093', '266']
  metadata:
    en:
      details: __empty__
'168':
  en:
    title: Insecure service configuration - Keystore
    description: >
      Cryptographic key containers such as
      keystores should have good security
      practices, among them:

      - The Secretkey and Keystore should
      be in protected environments.

      - The secrets should be aligned with
      strong password policies (do not use
      default passwords).

      - The Secretkey should not be stored
      in the source code.

      - Passwords to access the Keystore
      should not be the same as the
      private password.
    impact: >
      Get access to the private keys of the
      debugging certificates to test the
      application and understand its operation
      to generate new attack vectors.
    recommendation: >
      Implement good security practices
      against Keystore containers.

      - Do not store secrets in the
      source code.

      - Change default passwords.
    threat: >
      Authenticated attacker from intranet.
  es:
    title: Insecure service configuration - Keystore
    description: >
      Los contenedores de llaves criptográficas
      como los Keystore deben contar con buenas
      prácticas de seguridad, entre ellas:

      - El Secretkey y el Keystore deben estar
      en ambientes protegidos.

      - Los secrets deben estar alineadas con
      las políticas de contraseñas fuertes (no
      utilizar contraseñas por defecto).

      - No se debe almacenar el Secretkey
      en el código fuente.

      - Las contraseñas de acceso al Keystore
      no debe ser igual al private password.
    impact: >
      Obtener las llaves privadas de los
      certificados de depuración para probar
      la aplicación y entender su funcionamiento
      para así generar nuevos vectores de ataque.
    recommendation: >
      Implementar las buentas prácticas de
      seguridad frente a contenedor Keystore.

      - No almacenar los secrets en el
      código fuente.

      - Cambiar contraseñas por defecto.
    threat: >
      Atacante autenticado desde intranet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A service is configured with a default password
      ```yaml
      server:
        port: 8443
        ssl:
          key-store: classpath:keystore.jks
          key-store-password: "password"
      ```
    compliant: |
      Password access is correctly and unique for all services
      ```yaml
      server:
        port: 8443
        ssl:
          key-store: classpath:keystore.jks
          key-store-password: password.secret
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'169':
  en:
    title: Insecure service configuration - Keys
    description: >
      The source code repository stores cipher keys directly.
      Allowing an attacker with access to the source code
      to compromise the keys to impersonate the application
      or decrypt the communications between server and client.
    impact: >
      Obtain cypher keys to craft new attack vectors.
    recommendation: >
      Store the cipher keys in a secured Keystore.
    threat: >
      Authenticated attacker from Internet with access
      to the source code.
  es:
    title: Insecure service configuration - Keys
    description: >
      En el repositorio de código fuente
      se encuentran almacenadas llaves de cifrado directamente.
      Permitiendo a un atacante que tenga acceso al código
      comprometer las llaves para suplantar la aplicación
      o descifrar las comunicaciones entre servidor y cliente.
    impact: >
      Obtener llaves de cifrado para generar
      nuevos vectores de ataque.
    recommendation: >
      Almacenar las llaves de cifrado en un Keystore
      debidamente protegido.
    threat: >
      Atacante autenticado desde Internet
      con acceso al código fuente.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Cipher key directly stored on the source code
      ```java
      public class DemoApplication {
        cipherKey = "PlainKEY"
        public static void main(String[] args) {
          decryptPass(password, cipherKey);
        }
      }
      ```
    compliant: |
      Cipher keys are safely used as encrypted secrets in the code
      ```java
      public class DemoApplication {
        public static void main(String[] args) {
          decryptPass(password, secretKey);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['145']
  metadata:
    en:
      details: __empty__
'170':
  en:
    title: Insecure service configuration - Antivirus
    description: >
      It is possible to evade antivirus signatures
      to upload and use hacking tools that are
      commonly detected by any antivirus by
      recompiling the binaries and source code of
      the tools and using obfuscation.
      This would allow an attacker to get information
      in memory, perform attacks on the Kerberos service
      or the organizations network, among others.
    impact: >
      - Evade the organizations security
      controls to install malicious software.

      - Exfiltrate data.

      - Compromise data integrity.

      - Affect server availability.
    recommendation: >
      - Use on-disk monitoring systems to
      detect the use of malicious tools.

      - Update detection and intelligence
      tools periodically.
    threat: >
      Internal attacker in the network.
  es:
    title: Insecure service configuration - Antivirus
    description: >
      Es posible evadir las firmas del antivirus
      para subir y usar herramientas de hacking que
      comúnmente son detectadas por cualquier antivirus,
      esto recompilando los binarios y el código fuente
      de las herramientas y usando ofuscación.
      Esto le permitiría a un atacante conseguir
      información en memoria, realizar ataques al
      servicio de Kerberos o a la red de la
      organización, entre otros.
    impact: >
      - Evadir los controles de seguridad de la
      organización para instalar software malicioso.

      - Exfiltrar datos.

      - Comprometer la integridad de la información.

      - Afectar la disponibilidad del servidor.
    recommendation: >
      - Usar sistemas de monitoreo en disco para
      detectar el uso de herramientas maliciosas.

      - Actualizar las herramientas de detección
      e inteligencia periódicamente.
    threat: >
      Atacante interno en la red.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Some anti virus tools in the network are not up to date or poorly configured
      ```yaml
      hosts: localhost
        vars:
        host: "192.168.122.40"
        username: "admin"
        password: "mypassword"
        vdom: "root"
        tasks:
        - name: Configure AntiVirus profiles.
          app_antivirus_profile:
            host:  "{{ host }}"
            username: "{{ username }}"
            password: "{{ password }}"
            vdom:  "{{ vdom }}"
            antivirus_profile:
              state: "present"
              analytics-max-upload: "5"
              av-virus-log: "disable"
              extended-log: "enable"
              ftgd-analytics: "disable"
              http:
                  emulator: "enable"
                  options: "scan"
                  outbreak-prevention: "disabled"
              inspection-mode: "proxy"
      ```
    compliant: |
      Every resource in the network has monitoring systems and antivirus correctly setup.
      ```yaml
      hosts: localhost
        vars:
        host: "192.168.122.40"
        username: "admin"
        password: ""
        vdom: "root"
        tasks:
        - name: Configure AntiVirus profiles.
          app_antivirus_profile:
            host:  "{{ host }}"
            username: "{{ username }}"
            password: "{{ password }}"
            vdom:  "{{ vdom }}"
            antivirus_profile:
              state: "present"
              analytics-bl-filetype: "3 (source dlp.filepattern.id)"
              analytics-db: "disable"
              analytics-max-upload: "5"
              analytics-wl-filetype: "6 (source dlp.filepattern.id)"
              av-block-log: "enable"
              av-virus-log: "enable"
              content-disarm:...
              extended-log: "enable"
              ftgd-analytics: "disable"
              ftp:...
              http:
                  archive-block: "encrypted"
                  archive-log: "encrypted"
                  emulator: "enable"
                  options: "scan"
                  outbreak-prevention: "enabled"
              inspection-mode: "proxy"
              smb:...
              smtp:...
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: F
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'171':
  en:
    title: Insecure service configuration - Firewall
    description: >
      The server where the application is
      hosted has port 8080 open running
      the http-proxy service.
    impact: >
      - Establish, from the Internet,
      a connection with the port open.

      - Allow malicious clients to mount
      attacks originating from the IP address of
      the server running the proxy, without requiring
      authentication from the attacker.

      - Access to the internal network on
      which the server is located
    recommendation: >
      Securely configure the vulnerable service,
      so that it can only be accessed by authorized users.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration - Firewall
    description: >
      El servidor donde se aloja la aplicación
      tiene abierto el puerto 8080 corriendo el
      servicio http-proxy.
    impact: >
      - Establecer, desde Internet, una conexión
      con un puerto abierto.

      - Permitir que clientes maliciosos
      monten ataques que se originan desde la dirección
      IP del servidor ejecutando el proxy, sin requerir
      autenticación del atacante.

      - Permitir que un atacante acceda a la
      red interna en la que está el servidor.
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sea
      accedido por usuarios autorizados.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is a vulnerable service, configured for public access
      ```yaml
      server:
        port: 8080
        ssl:
          key-store: keystore.ks
          key-store-password: "password"
      ```
    compliant: |
      All sensitive services are configured with restricted access
      ```yaml
      server:
        port: 8443
        ssl:
          key-store: classpath:keystore.jks
          key-store-password: password.secret
        permissions:
          admin: allow
          user: deny
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: W
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'172':
  en:
    title: Insecure service configuration - App Backup
    description: >
      The application has the backup option active,
      which allows an attacker who has access to a
      users device to obtain the information stored
      by the application inside the device.
    impact: >
      Obtain confidential user and application information.
    recommendation: >
      Unless absolutely necessary, the application
      should not allow to backup itself.
    threat: >
      Anonymous attacker with local access
      to a users device.
  es:
    title: Insecure service configuration - App Backup
    description: >
      La aplicación tiene la opción de backup activa,
      lo que le permite a un atacante que tenga acceso
      al dispositivo de un usuario, obtener la información
      almacenada por la aplicación dentro del dispositivo.
    impact: >
      Obtener información confidencial del
      usuario y la aplicación.
    recommendation: >
      A no ser que sea absolutamente necesario,
      la aplicación no debe permitir realizar
      un backup de si misma.
    threat: >
      Atacante anónimo con acceso local al
      dispositivo de un usuario.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The allowBackup option is set to true in the app manifest
      ```yaml
      <manifest ... >
        ...
        <application android:allowBackup="true" ... >
          ...
        </application>
      </manifest>
      ```
    compliant: |
      The app manifest does not allow backup
      ```yaml
      <manifest ... >
        ...
        <application android:allowBackup="false" ... >
          ...
        </application>
      </manifest>
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'173':
  en:
    title: Insecure service configuration - Backup
    description: >
      The mobile application is allowed
      to backup the application data
      stored on the device, allowing
      information leaks to occur.
    impact: >
      Obtain confidential information
      from the application.
    recommendation: >
      Securely configure the service so
      that it does not allow data backups.
    threat: >
      Unauthenticated attacker with
      physical access to mobile device.
  es:
    title: Insecure service configuration - Backup
    description: >
      La aplicación móvil tiene permitido el
      backup a los datos de la aplicación
      almacenados en el dispositivo, permitiendo
      que se den fugas de información.
    impact: >
      Obtener información confidencial
      de la aplicación.
    recommendation: >
      Configurar de manera segura el servicio de
      modo que no permita realizar un backup de los datos.
    threat: >
      Atacante sin autenticar con acceso
      físico al dispositivo móvil.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The allowBackup option is set to true in the app manifest
      ```yaml
      <manifest ... >
        ...
        <application android:allowDataBackup="true" ... >
            ...
        </application>
      </manifest>
      ```
    compliant: |
      The app does not allow backup data
      ```yaml
      <manifest ... >
        ...
        <application android:allowDataBackup="false" ... >
            ...
        </application>
      </manifest>
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'174':
  en:
    title: Insecure service configuration - Backdoor
    description: >
      Due a misconfiguration on services it is
      possible to upload files and install backdoors
      for later access, and leave them for public access.
    impact: >
      - Leave a shell for public access.

      - Get access to server files.

      - Upload and erase resources.
    recommendation: >
      Implement the secure configuration of the
      vulnerable service, allowing it to only be
      accessed by authorized users and execute
      continuous monitoring on resources and  the server.
    threat: >
      Unauthorized external attacker with a
      service that allow the upload of files.
  es:
    title: Insecure service configuration - Backdoor
    description: >
      Debido a una mala configuración en los servicios
      es posible subir archivos e instalar puertas
      traseras para su posterior acceso, y dejarlas
      para el acceso público.
    impact: >
      - Dejar un shell para el acceso público.

      - Obtener acceso a los archivos del servidor.

      - Cargar y borrar recursos.
    recommendation: >
      Implementar la configuración segura del
      servicio vulnerable, permitiendo que sólo
      accedan a él los usuarios autorizados y
      ejecutar una monitorización continua sobre
      los recursos y el servidor.
    threat: >
      Atacante externo no autorizado con un servicio
      que permite la subida de archivos.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A service is wrongly configured to not requiring client certificates
      ```yaml
      Defaults:
        policyProject: 'DefaultPolicies'
        Policies:
          MQEndpoint: 'MQEndpoint'
          remoteDefaultQueueManager: '{MQClientPolicy}:MQEndpoint'
        ReqAccess:
          requireClientCert: false
      ```
    compliant: |
      All services should be configured to require client certificates
      ```yaml
      Defaults:
        policyProject: 'SecurityPolicy'
        Policies:
          MQEndpoint: 'MQEndpoint'
          remoteDefaultQueueManager: '{MQClientPolicy}:MQEndpoint'
        ReqAccess:
          requireClientCert: true
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['158']
  metadata:
    en:
      details: __empty__
'175':
  en:
    title: Insecure service configuration - DNS
    description: >
      The DNS server has recursive DNS
      functionality, which can allow an
      attacker to perform an amplification
      attack through it and cause another
      server to crash.
    impact: >
      Perform amplification attacks to cause DDos.
    recommendation: >
      Disable recursive DNS functionality on the server.
    threat: >
      Anonymous attacker from internal network.
  es:
    title: Insecure service configuration - DNS
    description: >
      El servidor DNS tiene la funcionalidad de
      DNS recursivo, lo que puede permitir a un
      atacante realizar un ataque de amplificación
      por medio de él y causar la caída de otro servidor.
    impact: >
      Realizar ataques de amplificación para causar DDos.
    recommendation: >
      Deshabilitar la funcionalidad de DNS
      recursivo en el servidor.
    threat: >
      Atacante anónimo desde red interna.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The DNS servers allow recursive settings
      ```yaml
      vars:
        app_fqdn: myapp
        timezone: "tz2"
        dns_servers: ["myserver"]
        dns_recursion_settings: "Any"
      ```
    compliant: |
      The DNS server has no recursion services allowed
      ```yaml
      vars:
        app_fqdn: myapp
        timezone: "tz2"
        dns_servers: ["myserver"]
        dns_recursion_settings: "none"
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'176':
  en:
    title: Insecure service configuration - SSH
    description: >
      The SSH service is not filtered by the
      Firewall to avoid external attacks and
      possible intrusions through this service.
    impact: >
      Attempt to access the server through
      brute force attacks or 0-day exploits.
    recommendation: >
      Securely configure the vulnerable service so
      that it can only be accessed by authorized users.
    threat: >
      External attacker without credentials.
  es:
    title: Insecure service configuration - SSH
    description: >
      El servicio de SSH no se encuentra filtrado
      por el Firewall para evitar ataques externos
      y posibles intrusiones a traves de dicho servicio.
    impact: >
      Intentar acceder al servidor a traves de
      ataques de fuerza bruta o exploits 0-day.
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sea
      accedido por usuarios autorizados.
    threat: >
      Atacante externo sin credenciales.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is a resource with an SSH configuration allowing any address
      ```yaml
      name: "myhost""
        AddressFamily: any
        AllowTcpForwarding: true
        ListenAddress: any
      ```
    compliant: |
      The service only allows safe access to certain users
      ```yaml
      name: "myhost""
        AddressFamily: any
        AllowAgentForwarding: false
        AllowTcpForwarding: true
        ListenAddress: {{ ansible_default_ipv4.address }}:{{ ssh_port | default('22') }}
        PubkeyAuthentication: true
      //Firewall configuration
      hosts: myhost.com
        vars:
          ansible_port: "{{ ssh_port | default('22') }}"
        remote_user: sven
        become: true
        roles:
          - hostnames
          - users
          - ssh
          - my.firewall
        firewall_allowed_tcp_ports:
          - 80
          - 443
          - 5930
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'177':
  en:
    title: Insecure service configuration - Security Groups
    description: >
      EC2 Security Groups are not explicitly defined.
      Security Group input/output rules are not defined.
    impact: >
      - Extract information from the server
      without proper consent.

      - Create holes to gain remote access.
    recommendation: >
      Securely configure the vulnerable service by
      explicitly defining the Security Groups.
    threat: >
      Anonymous attacker with access to an EC2
      instance from an internal network.
  es:
    title: Insecure service configuration - Security Groups
    description: >
      No se definen explicitamente los Security
      Groups de EC2.
      No se definen las reglas de entrada/salida
      de los Security Group.
    impact: >
      - Extraer información del servidor sin
      el consentimiento adecuado.

      - Crear agujeros para tener acceso remoto.
    recommendation: >
      Configurar de manera segura el servicio vulnerable
      definiendo explicitamente los Security Groups.
    threat: >
      Atacante anónimo con acceso a una instancia
      de EC2 desde una red interna.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are services with the default security groups configured
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
              SecurityGroupIds:
                - sg-083cd3bfb8example
        MyEC2Instance:
          Type: AWS::EC2::Instance
          Properties:
            ImageId: "ami-79fd7eee"
            KeyName: "testkey"
      ```
      Using the AWS CLI, the following command checks if the EC2 instance uses the default security groups
      ```
      $ aws ec2 describe-instances
            --region us-east-1
            --filters "Name=instance.group-name,Values=default"
            --output table
            --query 'Reservations[*].Instances[*].InstanceId'
      ```
      If the output returns one or more instance ID, these have the default security group configured
    compliant: |
      The services have specific security groups configured
      ```yaml
      Resources:
        MyLaunchTemplate2:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
        MyEC2Instance:
          Type: AWS::EC2::Instance
          Properties:
            ImageId: "ami-79fd7eee"
            KeyName: "testkey"
            SecurityGroups:
              - name1
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'178':
  en:
    title: Insecure service configuration - RDP
    description: >
      The RDP service has enabled the RC4 cipher
      suite considered outdated when is used in
      conjunction with TLS/SSL.
    impact: >
      Obtain information derived from the encrypted channel.
    recommendation: >
      Disable the RC4 cipher suite on the server.
    threat: >
      Anonymous attacker in the intranet.
  es:
    title: Insecure service configuration - RDP
    description: >
      El servicio RDP tiene habilitado la suite de
      cifrado RC4 considerada obsoleta cuando se
      usa en conjunto con TLS/SSL.
    impact: >
      Obtener información derivada del canal cifrado.
    recommendation: >
      Deshabilitar la suite de cifrado
      RC4 en el servidor.
    threat: >
      Atacante anónimo en la Intranet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The server allows a RC4 cipher suite
      ```yaml
      name: Configure the Remote Desktop Gateway
        win_rds_settings:
          certificate_hash: B0D0FA8408FC67B230338FCA584D03792DA73F4C
          max_connections: 50
          cipher_suite: ECDHE_ECDSA_WITH_RC4_128_SHA
        notify:
          - Restart TSGateway service
      ```
    compliant: |
      The server allows only secure cipher suites
      ```yaml
      name: Configure the Remote Desktop Gateway
        win_rds_settings:
          certificate_hash: B0D0FA8408FC67B230338FCA584D03792DA73F4C
          max_connections: 50
          cipher_suite: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        notify:
          - Restart TSGateway service
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'179':
  en:
    title: Insecure service configuration - SMB
    description: >
      SMBv1 is enabled, this version does not
      support encryption and has multiple vulnerabilities.
    impact: >
      Exploit known vulnerabilities
      found in the affected components.
    recommendation: >
      Disable SMBv1 and use SMBv3 version.
    threat: >
      Authenticated internal attacker.
  es:
    title: Insecure service configuration - SMB
    description: >
      SMBv1 se encuentra habilitado, esta versión
      no admite cifrado y tiene múltipes vulnerabilidades.
    impact: >
      Explotar vulnerabilidades conocidas encontradas
      en los componentes afectados.
    recommendation: >
      Deshabilitar SMBv1 y usar la versión SMBv3.
    threat: >
      Atacante interno autenticado.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The SMBv1 version is used by the application
      ```c
      public static void CreateTestMessage(string server){
        SmbClient client = new SmbClient(server);
        client.UseVersion = 1.0;
        client.Send(message);
      }
      ```
    compliant: |
      The SMBv3 version is used
      ```c
      public static void CreateTestMessage(string server){
        SmbClient client = new SmbClient(server);
        client.UseVersion = 3.1;
        client.Send(message);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'180':
  en:
    title: Insecure service configuration - SMTP
    description: >
      The hosting server has an open port (SMTP 25)
      which allows attackers to send emails using
      the web server.
    impact: >
      Send emails as anyone using the servers.
    recommendation: >
      Close unused ports to prevent SMTP relay attacks.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration - SMTP
    description: >
      El servidor de alojamiento tiene un puerto
      abierto (SMTP 25) que permite a los atacantes
      enviar correos electrónicos utilizando
      el servidor web.
    impact: >
      Enviar correos electrónicos como cualquier
      persona utilizando los servidores.
    recommendation: >
      Cierre los puertos no utilizados para
      evitar ataques de retransmisión SMTP.
    threat: >
      Atacante anónimo de Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are unsafe smtp ports opened
      ```yaml
      host_server:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 25
          domain: "yourdomain"
          authentication: plain
          user_name: "appadmin"
      ```
    compliant: |
      The smtp ports are securely configured
      ```yaml
      host_server:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 587
          domain: "promotions_domain"
          authentication: cipher_key
          user_name: "appadmin"
          time_delay: 24h
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'181':
  en:
    title: Insecure service configuration - DynamoDB
    description: >
      The DynamoDB service has insecure configurations.
    impact: >
      Access to the database and exploit
      vulnerabilities in the system configuration to
      affect the service and have access to stored information.
    recommendation: >
      Set correct configurations and in line with
      AWS best security practices.
    threat: >
      Unauthorized Internet user with credentials.
  es:
    title: Insecure service configuration - DynamoDB
    description: >
      El servicio DynamoDB tiene configuraciones inseguras.
    impact: >
      Acceder a la base de datos y explotar las
      vulnerabilidades en la configuración del
      sistema para afectar al servicio y tener
      acceso a la información almacenada.
    recommendation: >
      Establecer configuraciones correctas y en
      línea con las mejores prácticas de seguridad de AWS.
    threat: >
      Usuario de Internet no autorizado con credenciales.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The dynamo db service does not have restricted access configuration
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage    = 10
        engine               = "dynamoDB"
        engine_version       = "5.7"
        instance_class       = "db.t3.micro"
        name                 = "mydb"
        username             = "admin"
        password             = "*"
        allowed_groups       = all
      }
      ```
    compliant: |
      All sensitive resources have restricted access configuration
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage    = 10
        engine               = "dynamoDB"
        engine_version       = "5.7"
        instance_class       = "db.t3.micro"
        name                 = "mydb"
        username             = "admin"
        password             = "encrypted_password"
        allowed_groups       = admin
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'182':
  en:
    title: Email spoofing
    description: >
      The absence of DMARC records could
      allow spoofing of the email domain.
    impact: >
      Send unauthorized emails from the
      domain of the company, supplanting
      their identity and facilitating the
      realization of phishing attacks.
    recommendation: >
      Configure a DMARC record with policies
      suitable for the domain.
    threat: >
      Anonymous attacker from Internet
  es:
    title: Email spoofing
    description: >
      La ausencia de registros DMARC podría
      permitir la suplantación de identidad
      del dominio de correo electrónico.
    impact: >
      Enviar correos electrónicos sin autorización
      desde el dominio de la empresa, suplantando
      su identidad y facilitando la realización de
      ataques de phishing.
    recommendation: >
      Configurar un registro DMARC con las políticas
      adecuadas para el dominio.
    threat: >
      Atacante anónimo desde Internet
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The end point of the sendEmail delivery allows anonymous configuration
      ```yaml
      email_delivery:
        host: "myhost"
        port: 5400
        email_over_ssl: true
        authentication: :plain
        allow_anonymous-connection: true
        user_name: "appadmin"
        password: "*"
      ```
    compliant: |
      The end point of the Email delivery does not allow anonyous configuration
      ```yaml
      email_delivery:
        host: "myhost"
        port: 5400
        email_over_ssl: true
        authentication: admin
        allow_anonymous-connection: false
        user_name: "appadmin"
        password: "encrypted_password"
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['062', '273']
  metadata:
    en:
      details: __empty__
'183':
  en:
    title: Debugging enabled in production
    description: >
      The system has the debug mode active
      which generates an information leak
      when an error is generated.
    impact: >
      Obtain sensitive information such as
      stacktraces and versions of the systems used.
    recommendation: >
      Make sure that debugging mode is not
      enabled in the production environment
      and remove statements or portions of code
      that are executing in debugging mode.
    threat: >
      External attacker with access to the application.
  es:
    title: Debugging enabled in production
    description: >
      El sistema tiene el modo debug activo
      lo que genera una fuga de información
      cuando se genera un error.
    impact: >
      Obtener información sensible como stacktraces
      y versiones de los sistemas usados.
    recommendation: >
      Asegurarse que no esté habilitado el modo
      depuración en el ambiente de producción y
      remover las sentencias o porciones de código
      que se ejecutan en modo depuración.
    threat: >
      Atacante externo con acceso a la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Debugging mode is active in a production environment
      ```java
      <build>
          <finalName>remote-debugging</finalName>
          <plugins>
              <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
              </plugin>
          </plugins>
      </build>
      ```
    compliant: |
      Disable any plugin or dependencies that could allow debugging mode in the application production code
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['077', '078']
  metadata:
    en:
      details: __empty__
'184':
  en:
    title: Lack of data validation
    description: >
      The application does not control the
      the server side where you have permission
      to modify certain fields and allows the
      use of invalid data in some fields, for
      example, an ID composed of only letters.
    impact: >
      Inject potentially malicious characters
      into application fields.
    recommendation: >
      Validate on the server side the data
      types that are entered into different
      kind of fields in the application.
    threat: >
      External attacker with access to the application.
  es:
    title: Lack of data validation
    description: >
      La aplicación no controla el lado del
      servidor donde se tenga permiso de modificar
      ciertos campos y permite utilizar datos
      inválidos en algunos campos, por ejemplo
      una cédula compuesta por solo letras.
    impact: >
      Inyectar caracteres potencialmente maliciosos
      en los campos de la aplicación.
    recommendation: >
      Validar en el lado del servidor los tipos
      de datos que se ingresan a distintos tipos
      de campos en la aplicación.
    threat: >
      Atacante externo con acceso a la aplicación.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application performs a query with unvalidated user input
      ```javascript
      func ErroneousString(request *http.Request) {
        userId := request.id
        sql.QueryRow(`INSERT INTO tbl $1`, userId)
      }
      ```
    compliant: |
      All user input is validated and sanitize before using it to access resources
      ```javascript
      func ErroneousString(request *http.Request) {
        userId := request.id
        if /[0-9]/.test(str){
          sql.QueryRow(`INSERT INTO tbl $1`, userId)
        }else{
          return "Invalid User ID"
        }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'185':
  en:
    title: Lack of data validation - Header x-amzn-RequestId
    description: >
      The application does not control server side
      permission to modify certain fields and allows
      potentially dangerous character strings to be
      entered in the x-amzn-RequestId Header.
    impact: >
      - Reflect dangerous character strings
      to try to achieve an injection.

      - Use very long character strings
      to try to deny the service.
    recommendation: >
      Validate on the server side the types of
      data that are entered into different kind
      of fields in the application.
    threat: >
      Internet attacker with access to the service.
  es:
    title: Lack of data validation - Header x-amzn-RequestId
    description: >
      La aplicación no controla el lado de servidor
      que se tenga permiso de modificar ciertos campos
      y permite que se introduzcan cadenas de caracteres
      potencialmente peligrosos en la Cabecera x-amzn-RequestId.
    impact: >
      - Reflejar cadenas de caracteres peligrosos
      para tratar de lograr una inyección.

      - Utilizar cadenas de caracteres muy largas
      para tratar de denegar el servicio.
    recommendation: >
      Validar en el lado del servidor los tipos
      de datos que se ingresan a distintos tipos
      de campos en la aplicación.
    threat: >
      Atacante en Internet con acceso al servicio.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The x-amzn-RequestId header is set by a potentially unsafe unverified input
      ```javascript
      const server = http.createServer((req,res))

      server.listen(port, (requestedId) => {
        var options = {
          port: 8080,
          host: '127.0.0.1',
        };
        var request = http.request(options);

        request.setHeader('Cookie', ['type=ninja', 'language=javascript']);
        request.setHeader('x-amzn-RequestId', requestedId);
        request.end();
      });
      ```
    compliant: |
      The x-amzn-RequestId header is set by the application with a sanitized/verified input
      ```javascript
      const server = http.createServer((req,res))

      server.listen(port, (requestedId) => {
        var options = {
          port: 8080,
          host: '127.0.0.1',
        };
        var request = http.request(options);
        if(isValidRequest(requestedId)){
          request.setHeader('Cookie', ['type=ninja', 'language=javascript']);
          request.setHeader('x-amzn-RequestId', requestedId);
        }
        request.end();
      });
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'186':
  en:
    title: Lack of data validation - Web Service
    description: >
      The application does not control on the server
      side the data being sent in certain fields and
      allows the use of special characters, which
      leads to new attack vectors.
      In addition, there is no adequate control
      over the size of the fields that can be
      sent to the server.
    impact: >
      - Exhaust server resources in the
      file storage space.

      - Achieve XSS, SQLi or HTML injection
      to have a wider attack vector.
    recommendation: >
      - Validate on the server side, the types
      of data that are entered by using white lists,
      where a set of accepted characters is defined.

      - Validate the minimum and maximum length for
      the data entered by the user.
    threat: >
      Anonymous attacker from intranet.
  es:
    title: Lack of data validation - Web Service
    description: >
      La aplicación no controla del lado de servidor
      los datos que se están enviando en ciertos campos
      y permite utilizar caracteres especiales, que
      conllevan a nuevos vectores de ataque.
      Además no existe un control adecuado sobre
      el tamaño de los campos que se pueden enviar al servidor.
    impact: >
      - Agotar recursos del servidor en el
      espacio de almacenamiento de archivos.

      - Lograr una inyección XSS, SQLi o HTML
      para tener un vector de ataque más amplio.
    recommendation: >
      - Validar en el lado del servidor los tipos
      de datos que se ingresan mediante el uso de
      listas blancas, donde se defina un conjunto
      de caracteres aceptados.

      - Validar la longitud mínima y máxima para
      los datos ingresados por el usuario.
    threat: >
      Atacante anónimo desde intranet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```c {3, 7 ,15}
      public void doPost( HttpServletRequest request, HttpServletResponse response){
        try {
          String fileReq = request.getParameter( "file" );
          // Process file without validating
        } catch(YourValidationException e ) {
          response.sendError( response.SC_BAD_REQUEST, e.getMessage() );
        }
      }
      ```
    compliant: |
      The application uses user input only after validating/sanitizing it
      ```c {3, 7 ,15}
      public void doPost( HttpServletRequest request, HttpServletResponse response){
        try {
          String fileReq = request.getParameter( "file" );
          //Whitelist the input parameter against a verified string
          if ( !whiteListExample.matcher( fileReq ).matches() ) {
            throw new YourValidationException( "Improper file" );
          }
          // Code to process the file after it has been validated
        } catch(YourValidationException e ) {
          response.sendError(response.SC_BAD_REQUEST, e.getMessage());
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'187':
  en:
    title: Lack of data validation - Source Code
    description: >
      Within the source code there is evidence
      of the use of dangerous regular expressions,
      because they make use of complex operations
      to find matches, which can lead an attacker
      to send a specific string of data that could
      cause the server to crash when evaluating the
      string with the dangerous regular expression.
    impact: >
      Generate server crash.
    recommendation: >
      Securely configure the vulnerable service so,
      it can only be accessed by authorized users.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Lack of data validation - Source Code
    description: >
      Dentro del código fuente se evidencia el uso
      de expresiones regulares peligrosas, porque
      hacen uso de operaciones complejas para encontrar
      coincidencias, lo que puede llevar a que un
      atacante envíe una cadena de datos específica
      que podria generar la caída del servidor al
      evaluar la cadena con la expresión regular peligrosa.
    impact: >
      Generar la caída del servidor.
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así, que solo sea
      accedido por usuarios autorizados.
    threat: >
      Atacante anónimo desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      function ValidateEmail(mail){
        regex = {ComplexRegEx}
        if regex.test(myForm.emailAddr.value)){
          return (true)
        }
        //Code to handle the exception after the regex
      }
      ```
    compliant: |
      The application uses user input only after validating/sanitizing the information
      ```javascript
      function ValidateEmail(mail){
        if ({simpleRegex}).test(myForm.emailAddr.value)){
          return (true)
        }
        //handle the exception when the email input is not valid
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'188':
  en:
    title: Lack of data validation - Modify DOM Elements
    description: >
      The application allows the creation of dynamic DOM
      (Document Object Model) elements
      from user controlled inputs.
      In addition to being functionally expensive, this operation
      can lead to the creation and exploitation of other vulnerabilities
      such as buffer overflow or memory corruption.
    impact: >
      Cause unexpected behaviours in the application
      which can lead to system unavailability.
    recommendation: >
      Avoid generating dynamic DOM
      from user controlled inputs
    threat: >
      Authenticated attacker from the Internet
  es:
    title: Lack of data validation - Modify DOM Elements
    description: >
      La aplicación permite generar elementos DOM
      (Document Object Model) de forma dinámica a partir
      de una o más entradas controladas por un usuario.
      Este operación además de ser funcionalmente costosa,
      puede conducir a la creación y explotación de otras vulnerabilidades
      como buffer overflow o corrupción de memoria.
    impact: >
      Generar comportamientos inesperados en la aplicación
      que pueden conducir a una indisponibilidad del sistema.
    recommendation: >
      Evitar generar DOM dinámico
      a partir de entradas manipuladas por el usuario.
    threat: >
      Atacante autenticado desde Internet
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      function ErroneousDOMCreation(request *http.Request) {
        element = document.createElement(request.content);
        document.body.appendChild(element);
      }
      ```
    compliant: |
      The application uses user input only after validating its contents
      ```javascript
      function DOMCreation(request *http.Request) {
        userOutput = validateString(request.content);
        const para = document.createElement("p");
        para.innerText = userOutput;
        document.body.appendChild(para);
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'189':
  en:
    title: Lack of data validation - Content Spoofing
    description: >
      An unauthorized attacker generating a
      token without credentials, due to a
      misconfiguration in the file upload can
      replace files already uploaded by a client
      since the application does not validate if
      these were already sent in the file upload request.
    impact: >
      Replace information sent by customers.
    recommendation: >
      Enable a mechanism to identify the status
      of the procedure and restrict access to
      objects to authorized users.
    threat: >
      Unauthorized external attacker with process ID.
  es:
    title: Lack of data validation - Content Spoofing
    description: >
      Un atacante no autorizado generando un token
      sin credenciales, debido a una mala configuración
      en la carga de archivos puede reemplazar los
      archivos ya subidos por un cliente ya que la
      aplicación no valida si estos ya fueron enviados
      en la petición de carga de archivos.
    impact: >
      Reemplazar información enviada por los clientes.
    recommendation: >
      Habilitar un mecanismo para identificar en
      qué estado se encuentra el procedimiento y
      restringir el acceso a objetos a usuarios autorizados.
    threat: >
      Atacante externo no autorizado con ID de proceso.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      function uploadFile(request){
        const storage = getStorage();
        const storageRef = ref(storage, `/files/${request.file.name}`)
        const uploadTask = uploadBytesResumable(storageRef, request.file);
      }
      ```
    compliant: |
      The application uses user input after validating its contents
      ```javascript
      function uploadFile(request){
        const storage = getStorage();
        const storageRef = ref(storage, `/files/${request.file.name}`);
        if !checkIfFileExists{
          const uploadTask = uploadBytesResumable(storageRef, request.file);
        }
      }

      //A function to check if the file being uploaded already exists in the db
      function checkIfFileExists(filePath: string): Promise<boolean> {
        const storage = getStorage();
        const storageRef = ref(storage, filePath);

        getDownloadURL(storageRef)
          .then(url => {
            return Promise.resolve(true);
          })
          .catch(error => {
            if (error.code === 'storage/object-not-found') {
              return Promise.resolve(false);
            } else {
              return Promise.reject(error);
            }
          });
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'190':
  en:
    title: Lack of data validation - Session Cookie
    description: >
      The Session Cookie is generated from any
      value sent from the front end, allowing to
      modify it and set an insecure session cookie.
    impact: >
      - Set any value as a session cookie.

      - Consume reporting services without authorization.
    recommendation: >
      Prevent modification of the session cookie value.
    threat: >
      External attacker with Internet
      access and a valid token.
  es:
    title: Lack of data validation - Session Cookie
    description: >
      La Cookie de sesión en generada desde un
      valor cualquiera enviado desde el front,
      permitiendo así modificarlo y establecer
      una cookie de sesión insegura.
    impact: >
      - Fijar cualquier valor como cookie de sesión.

      - Consumir servicios de reportes sin autorización.
    recommendation: >
      Prevenir la modificación del valor de
      la cookie de sesión.
    threat: >
      Atacante externo con acceso a Internet
      y con un token válido.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses an unsafe method to generate session cookies
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!username) {
          // If the username isn't present, return an HTTP unauthorized code
          res.status(401).end()
          return
        }

        // generate a random unsafe session token
        const sessionToken = Math.random()*100000
        res.cookie("session_token", sessionToken, { expires: expiresAt })
        res.end()
      }
      ```
    compliant: |
      The application uses a safe method to generate unique session cookies
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!username) {
          // If the username isn't present, return an HTTP unauthorized code
          res.status(401).end()
          return
        }

        // validate the password against our data
        // if invalid, send an unauthorized code
        const expectedPassword = users[username]
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end()
          return
        }

        // generate a random UUID as the session token
        const sessionToken = uuid.v4()
        const now = new Date()
        const expiresAt = new Date(+now + 120 * 1000)
        const session = new Session(username, expiresAt)
        sessions[sessionToken] = session
        res.cookie("session_token", sessionToken, { expires: expiresAt })
        res.end()
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'191':
  en:
    title: Lack of data validation - Responses
    description: >
      The response data of some requests are
      sent in subsequent requests, so when the
      values of these responses are changed to
      invalid data, subsequent requests take
      this erroneous information without any
      type of validation.
    impact: >
      Compromise the integrity of the information
      requests that are processed by the server.
    recommendation: >
      Validate at all times from the server
      the types of data that are entered into
      different types of fields in the application.
    threat: >
      Attacker from intranet with access
      to the application.
  es:
    title: Lack of data validation - Responses
    description: >
      Los datos de las respuestas de algunas
      peticiones son enviados en request posteriores,
      por lo que al cambiar los valores de dichas
      respuestas por datos inválidos, las peticiones
      siguientes toman esa información errónea sin
      ningún tipo de validación.
    impact: >
      Comprometer la integridad de la información de
      las peticiones que son procesadas por el servidor.
    recommendation: >
      Validar en todo momento desde el servidor los
      tipos de datos que se ingresan a distintos tipos
      de campos en la aplicación.
    threat: >
      Atacante desde intranet con acceso a la aplicación.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        const expectedPassword = users[username]
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end()
          return
        }
      }

      const returnSessionInfo(req, res)=>{
        res1 = signinHandler(req, res);
        //Request data is sent again without validating response
        if isValid(res1){
          getInfo(res1, res);
        }
      }
      ```
    compliant: |
      The application uses user input only after validating the contents
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        const expectedPassword = users[username]
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end()
          return
        }
      }

      const returnSessionInfo(req, res)=>{
        res1 = signinHandler(req, res);
        //Validate first request and avoid its use
        if res1.status == 200{
          getuserInfo(req, res, res1.sessionData);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'192':
  en:
    title: Lack of data validation - Reflected Parameters
    description: >
      Included in the server error responses
      is unvalidated user input containing
      special characters, which can lead to
      vulnerabilities such as XSS.
    impact: >
      Inject special characters in server responses.
    recommendation: >
      Validate on the server side the types
      of data that are entered into different
      kind of fields in the application.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Lack of data validation - Reflected Parameters
    description: >
      Dentro de las respuestas de error del servidor
      se incluye la entrada del usuario sin validar
      que contenga caracteres especiales, lo que puede
      dar lugar a que se presenten vulnerabilidades como XSS.
    impact: >
      Inyectar caracteres especiales en las
      respuestas del servidor.
    recommendation: >
      Validar en el lado del servidor los tipos de
      datos que se ingresan a distintos tipos de
      campos en la aplicación.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      const signinHandler = (req, res) => {
        const { username, password } = req.body;
        const expectedPassword = users[username];
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end();
          //Include possible harmful data in the response
          res.message("Invalid field" + password);
          return
        }
      }
      ```
    compliant: |
      The application uses user input only after validating it on the server side
      ```javascript
      const signinHandler = (req, res) => {
        const { username, password } = req.body;
        const expectedPassword = users[username];
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end();
          res.message("Password provided is not valid");
          return
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'193':
  en:
    title: Lack of data validation - Host Header Injection
    description: >
      The application allows to manipulate the host header
      which may lead to unintended redirects
      to malicious websites.
    impact: >
      Redirect the user to harfmful websites.
    recommendation: >
      Validate the host header against a whitelist
      of trusty domains.
    threat: >
      Anonymous attacker from adjacent network.
  es:
    title: Lack of data validation - Host Header Injection
    description: >
      La aplicación permite manipular la cabecera host
      lo cual podría conducir a redirecciones no controladas
      a sitios web maliciosos.
    impact: >
      Redirigir al usuario a sitios maliciosos.
    recommendation: >
      Validar la cabecera host contra una lista blanca
      de dominios confiables permitidos.
    threat: >
      Atacante anónimo desde una red adyacente.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      const signinHandler = (req, res) => {
        //Do data manipulation without validating the header request against a whitelist
      }
      ```
    compliant: |
      The application uses user input after validating it on the server side
      ```javascript
      var http = require('http');
      const { validateHeaderName } = require('http');

      const signinHandler = (req, res) => {
        try {
          validateHeaderName(req.header.name, whitelist);
          // Do data manipulation
        } catch (err) {
          err instanceof TypeError; // true
          return err.message;
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'194':
  en:
    title: Lack of data validation - Input Length
    description: >
      Endpoints allow more content to be added
      to the body than is usually allowed by
      the endpoint, thus making it possible to
      send massive amounts of characters and
      expand attack vectors.
    impact: >
      Send massive information in the request body.
    recommendation: >
      Validate on the server side that user
      entries comply with a character limit.
    threat: >
      Authorized attacker from the Internet.
  es:
    title: Lack of data validation - Input Length
    description: >
      Los endpoints permiten que en el cuerpo se
      añada más contenido de lo que habitualmente
      el endpoint permite, de esta manera es
      posible enviar masivos carácteres y
      expandir los vectores de ataque.
    impact: >
      Enviar masiva información en el body de request.
    recommendation: >
      Validar en el lado del servidor que las
      entradas de los usuarios cumplan con un
      límite de caracteres.
    threat: >
      Atacante autorizado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      function ErroneousDOMCreation(request *http.Request) {
        element = document.createElement(request.content);
        document.body.appendChild(element);
      }
      ```
    compliant: |
      The application uses user input after validating its length
      ```javascript
      function DOMCreation(request *http.Request) {
        userOutput = validateLength(request.content);
        const para = document.createElement("p");
        para.innerText = userOutput;
        document.body.appendChild(para);
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'195':
  en:
    title: Lack of data validation - Headers
    description: >
      In the source code the information of some
      HTTP headers is not being validated, so
      different values could be injected in order
      to achieve some XSS attack or compromise the
      integrity of the stored information.
    impact: >
      Inject potentially dangerous characters
      into application fields.
    recommendation: >
      Validate on the server side the types of
      data that are entered into different kind
      of fields in the application.
    threat: >
      Authorized user from the Internet.
  es:
    title: Lack of data validation - Headers
    description: >
      En el código fuente no se está validando
      la información de algunas cabeceras HTTP,
      por lo que se podrían inyectar diferentes
      valores con el fin de lograr algún ataque
      tipo XSS o comprometer la integridad de
      la información almacenada.
    impact: >
      Inyectar caracteres potencialmente peligrosos
      en los campos de la aplicación.
    recommendation: >
      Validar en el lado del servidor los tipos de
      datos que se ingresan a distintos tipos de
      campos en la aplicación.
    threat: >
      Usuario autorizado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      const requestHandler = (req, res) => {
        //Code to handle the request without validating the header against a whitelist
      }
      ```
    compliant: |
      The application uses user input after validating it against a white list
      ```javascript
      var http = require('http');
      const { validateHeaderName } = require('http');

      const requestHandler = (req, res) => {
        try {
          // validate request header against a predefined whitelist
          validateHeaderName(req.header.name, whitelist);
          //  Code to handle the request
        } catch (err) {
          err instanceof TypeError; // true
          return err.message;
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'196':
  en:
    title: Lack of data validation - Dates
    description: >
      The application does not control on the
      server side that you have permission to
      modify certain fields, on the front end
      there are restrictions but it is possible
      to ignore them and send requests that the
      server does not validate and process as
      valid requests.
    impact: >
      Generate the history of all movements
      associated with a product number, in
      some cases it could generate availability
      problems.
    recommendation: >
      Validate on the server side the data that is
      entered before processing the received request.
    threat: >
      Unauthorized user with access to the application.
  es:
    title: Lack of data validation - Dates
    description: >
      La aplicación no controla del lado de servidor
      que se tenga permiso de modificar ciertos campos,
      en el front existen restricciones pero es posible
      ignorarlas y enviar peticiones que el servidor no
      valida y procesa como peticiones válidas.
    impact: >
      Generar el histórico de todos los movimientos
      asociados a un numero de producto, en algunos casos
      podría generar problemas de disponibilidad.
    recommendation: >
      Validar en el lado del servidor los datos que se
      ingresan antes de procesar la petición recibida.
    threat: >
      Usuario no autorizado con acceso a la aplicación.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      function erroneousDateReq(request *http.Request) {
        transactions = getTransactionInfo(request.startDate, request.endDate);
        return transactions;
      }
      ```
    compliant: |
      The application uses user input after validating on the server side
      ```javascript
      function dateReq((request *http.Request) {
        startDate = request.startDate;
        endDate = request.endDate;
        //Function to validate date ranges are allowed
        if isValidDate(startDate) & isValidDate(endDate){
          transactions = getTransactionInfo(startDate, endDate);
          return transactions;
        }else{
          return None;
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'197':
  en:
    title: Lack of data validation - Numbers
    description: >
      There is insecure functionality that can
      break the current business logic and
      negatively impact the business.
    impact: >
      Carry out transactions with a lower
      value than it should be.
    recommendation: >
      Validate that the values of the transaction
      drafts do not travel in the request or that
      when they are modified, the request is cancelled.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Lack of data validation - Numbers
    description: >
      Existe una funcionalidad insegura que
      permite romper la lógica del negocio
      actual e impactar negativamente en él.
    impact: >
      Realizar transacciones con valor de giro
      menor al que debería ser.
    recommendation: >
      Validar que los valores de los giros de las
      transacciones no viajen en la petición o que
      cuando sean modificados, se cancele la petición.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application does not validate the transaction values after they were modified
      ```javascript
      item.addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        //Set the request data with an invalid transaction draft
        formData.set(e.submitter.name, e.submitter.value, e.submitter.transactionDraft);
        fetch(pagePath, {
          method: "post",
          body: formData
        })
          .then(function (response) {
            return response.text();
          })
          .catch(function (error) {
            return Message ("Invalid data")
          });
      });
      ```
    compliant: |
      The application performs validation of the transaction values and aborts in case of any modification to the values
      ```javascript
      item.addEventListener("submit", function (e) {
        e.preventDefault();
        const formData = new FormData(this);
        const confirmationCode = confirm(e.submitter.transactionDraft);
        if confirmationCode = 200 {
          //Set the request data with confirmed transaction amount
          formData.set(e.submitter.name, e.submitter.value, e.submitter.transactionDraft);
          fetch(pagePath, {
            method: "post",
            body: formData
          })
            .then(function (response) {
              return response.text();
            })
            .catch(function (error) {
              return Message ("Invalid data")
            });
        }
      });
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'198':
  en:
    title: Lack of data validation - Out of range
    description: >
      Authenticated user in a domain that
      restricts certain functionalities such
      as Employee Management, can bypass the
      restrictions by using absolute paths to
      these functionalities.
    impact: >
      Access the employee management panel
      from an unauthorized domain.
    recommendation: >
      Verify that domains that have restricted
      certain functionalities cannot access them
      through absolute paths of these functionalities.
    threat: >
      Authenticated user on the Internet.
  es:
    title: Lack of data validation - Out of range
    description: >
      Usuario autenticado en un dominio que
      restrinja ciertas funcionalidades como
      Gestión de Empleados, puede saltar las
      restricciones al usar rutas absolutas de
      estas funcionalidades.
    impact: >
      Acceder al panel de gestión empleados
      desde un dominio no permitido.
    recommendation: >
      Verificar que los dominios que tienen
      restringidas ciertas funcionalidades
      no pueden acceder a ellas mediante
      rutas absolutas de estas.
    threat: >
      Usuario autenticado en Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```java
      public void grantAccess(user){
        AuthenticationContext context = new AuthenticationContext(AUTHORITY, false, service);
        AuthenticationResult result = future.get(user.id, user.domain);
        if (result == True){
          //The modify files could be used with a relative path to access files outside of the domain restrictions
          modifyFiles(userid, user.requestedPath, user.request.file);
        }
      }
      ```
    compliant: |
      The application uses user input after validating it on the server side
      ```java
      public void grantAccess(user){
        AuthenticationContext context = new AuthenticationContext(AUTHORITY, false, service);
        AuthenticationResult result = future.get(user.id, user.domain);
        if (result==True) {
          File requestedFile = getFile(user.request.file);
          //get only allowed paths for each user before accesing domain folders or files
          userPath = getuserAllowedPath(user.role);
          modifyFiles(userid, userPath, requestedFile);
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'199':
  en:
    title: Lack of data validation - Emails
    description: >
      The application does not control that
      server-side emails used to register
      users do not belong to disposable
      mailboxes such as yopmail.
    impact: >
      Reset passwords for registered users
      with disposable mailboxes.
    recommendation: >
      Implement a blacklisting system with
      disposable mailbox domains or implement
      federated authentication.
    threat: >
      Anonymous attacker from the Internet
      using enumerated users.
  es:
    title: Lack of data validation - Emails
    description: >
      La aplicación no controla que los correos
      electrónicos del lado de servidor se usan
      para registrar usuarios no pertenezcan a
      buzones desechables como yopmail.
    impact: >
      Restablecer las contraseñas de los usuarios
      registrados con buzones desechables.
    recommendation: >
      Implementar un sistema de listas negras
      con los dominios de buzones desechables
      o implementar autenticación federada.
    threat: >
      Atacante anónimo desde Internet utilizando
      usuarios enumerados.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application uses user input without server side validation
      ```javascript
      exports.signup = (req, res) => {
        const token = jwt.sign({email: req.body.email}, config.secret)
        //Create user without whitelisting the email address
        const user = new User({
          username: req.body.username,
          email: req.body.email,
          password: bcrypt.hashSync(req.body.password, 8),
          confirmationCode: token
        });
      }
      ```
    compliant: |
      The application uses user input only after verifying it according to business logic
      ```javascript
      exports.signup = (req, res) => {
        const token = jwt.sign({email: req.body.email}, config.secret)
        userEmail = req.body.email
        if isValidAddress(userEmail){
          //Create user after verifying the address
          const user = new User({
          username: req.body.username,
          email: req.body.email,
          password: bcrypt.hashSync(req.body.password, 8),
          confirmationCode: token
        }else {
          return Exception("Invalid email address")
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['173', '320', '342']
  metadata:
    en:
      details: __empty__
'200':
  en:
    title: Traceability loss
    description: >
      Some features of the application do not properly keep track of errors,
      exceptional events or critical actions on the system,
      hidering the detection of possible security events.
    impact: >
      Lose the tracking of exceptional events and
      fail to detect potential security breaches.
    recommendation: >
      Set alerts for errors, events and critical actions
      using the mechanisms available by the technology stack.
    threat: >
      Unauthorized internal attacker.
  es:
    title: Traceability loss
    description: >
      Algunas funcionalidades de la aplicación
      no guardan adecuadamente la trazabilidad
      de errores, eventos excepcionales
      o acciones críticas sobre el sistema,
      dificultando la detección de posibles eventos de seguridad
    impact: >
      Perder el seguimiento de eventos excepcionales
      y no detectar posibles violaciones de la seguridad.
    recommendation: >
      Establecer alertas para errores, eventos y acciones críticas
      utilizando los mecanismos disponibles por las tecnologías
      utilizadas
    threat: >
      Atacante interno no autorizado.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has an expression that does not correctly track exceptions and errors
      ```javascript
      function do_something() {
        try {
          return something;
        } finally {
          return somethingElse;
        }
        //Potential uncaught error
      }
      ```
    compliant: |
      The application correctly handles all possible errors and exceptions
      ```javascript
      try {
        // a function that potentially throws an error
        do_Something();
      } catch (err) {
        // this code handles exceptions
        throw new Error(err);
      } finally {
        // this code will always be executed
        return ResultMsg();
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['075', '320']
  metadata:
    en:
      details: __empty__
'201':
  en:
    title: Unauthorized access to files
    description: >
      In the functionality corresponding to update
      user data, it is possible to inject potentially
      dangerous characters that generate inappropriate
      behavior in the application, exposing the access
      to Sharepoint and allowing the user to access
      functionalities and files without authorization.
    impact: >
      - Access the Sharepoint administrative center.

      - Access files without authorization.
    recommendation: >
      Validate on the server side the types of data
      that are entered into different types of fields
      in the application. Restrict file access to
      authenticated and authorized users only.
    threat: >
      Attacker authenticated from the Internet.
  es:
    title: Unauthorized access to files
    description: >
      En la funcionalidad correspondiente a actualizar
      datos de usuario, es posible inyectar caracteres
      potencialmente peligrosos que generar un
      comportamiento inadecuado en la aplicación,
      exponiendo el acceso a Sharepoint y permitiendo
      que el usuario accesa a funcionalidades y
      archivos sin autorización.
    impact: >
      - Acceder al centro administrativo de Sharepoint.

      - Acceder a archivos sin autorización.
    recommendation: >
      Validar en el lado del servidor los tipos
      de datos que se ingresan a distintos tipos
      de campos en la aplicación.
      Restringir el acceso a archivos únicamente
      a usuarios autenticados y autorizados.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows unauthorized users to access sensitive information
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Updating user without validating data
          user.email = emailEdit;
          user.local.email = emailEdit;
          user.first_name = first_nameEdit;
          user.last_name = last_nameEdit;
          user.username = usernameEdit;
          res.redirect('/profile/');
        }
      });
      ```
    compliant: |
      The application restricts access to sensitive information to authorized users
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          var usernameEdit = req.body.username;
          //Validate data before editing
          if(!isValidData(req.body)){
            req.flash('error', 'Found several conflicting fields');
            res.redirect('/edit');
          }
          else{
            user.email = emailEdit;
            user.local.email = emailEdit;
            user.first_name = first_nameEdit;
            user.last_name = last_nameEdit;
            user.username = usernameEdit;
            res.redirect('/profile/');
          }
        }
      });
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['096', '176', '264', '320']
  metadata:
    en:
      details: __empty__
'202':
  en:
    title: Unauthorized access to files - Debug APK
    description: >
      The debug APK is available to anyone
      on the Internet.
    impact: >
      - Host an APK in AWS.

      - Download the debug APK without any
      authentication, being able to analyze
      the application and find vulnerabilities easily.
    recommendation: >
      Protect the APK behind some kind of authentication.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Unauthorized access to files - Debug APK
    description: >
      La APK de depuración está disponible
      para cualquiera en internet.
    impact: >
      - Hostear una APK en AWS.

      - Descargar la APK de depuración sin
      ningún tipo de autenticación, pudiendo
      analizar la aplicación y encontrar
      vulnerabilidades fácilmente.
    recommendation: >
      Proteger la apk detrás de algún
      tipo de autenticación.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      An S3 AWS service allows the source code to be downloaded by anyone
      ```yaml
      BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: APK-BUCKET
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "s3:Download"
                Effect: Allow
                Restriction: None
      ```
    compliant: |
      Sensitive resources are restricted to be read only by authorized users
      ```yaml
      BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
          Bucket: APK-BUCKET
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - "s3:Download"
                Effect: Deny
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['096', '176', '264', '320']
  metadata:
    en:
      details: __empty__
'203':
  en:
    title: Unauthorized access to files - S3 Bucket
    description: >
      Some buckets used by the application
      can be publicly accessed, without requiring any authentication,
      allowing an attacker to download its content,
      modify or delete the stored information
    impact: >
      Compromise the information stored in the buckets.
    recommendation: >
      Restrict the access of the public buckets of the system
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Unauthorized access to files - S3 Bucket
    description: >
      Algunos buckets utilizados por la aplicación
      pueden ser accedidos públicamente sin ninguna autenticación,
      permitiendo a un atacante descargar su contenido,
      modificar o eliminar la información allí almacenada
    impact: >
      Comprometer la información almacenada en los buckets
    recommendation: >
      Restringir el acceso de los buckets públicos del sistema.
    threat: >
      Anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      An S3 AWS bucket has public permissions to allow deletion of files
      ```yaml
      Resources:
        S3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            AccessControl: PublicReadWrite
            BucketName: SKIMS-PUBLIC-BUCKET-2
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                  SSEAlgorithm: aws:kms
                  KMSMasterKeyID: KMS-KEY-ARN
          DeletionPolicy: Delete
      ```
      Terraform example
      ```terraform
      resource "aws_s3_bucket" "example" {
        bucket = "s3-website-test.hashicorp.com"
        acl    = "public-read-write"

        cors_rule {
          allowed_headers = ["*"]
          allowed_methods = ["PUT", "POST"]
          allowed_origins = ["https://s3-website-test.hashicorp.com"]
          expose_headers  = ["ETag"]
          max_age_seconds = 3000
        }
      }
      ```
      Using the AWS CLI, the following command returns the S3 bucket ACL configuration
      ```
      $ aws s3api get-bucket-acl
            --bucket {bucket_id}
            --query 'Grants[?(Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`)]'
      ```
      If the command output returns "FULL_CONTROL" for the "Permission" attribute, the bucket is publicly accessible and insecure
    compliant: |
      All AWS buckets have restricted permissions only accesible to authorized users
      ```yaml
      Resources:
        PrivateS3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            AccessControl: Private
            BucketName: SKIMS-PRIVATE-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                  SSEAlgorithm: aws:kms
                  KMSMasterKeyID: KMS-KEY-ARN
          DeletionPolicy: Delete
      ```
      Terraform example
      ```terraform
      resource "aws_s3_bucket" "test" {
        bucket = "my-tf-test-bucket"
        acl    = "log-delivery-write"

        logging {
          target_bucket = aws_s3_bucket.log_bucket.id
          target_prefix = "log/"
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['096', '176', '264', '320']
  metadata:
    en:
      details: __empty__
'204':
  en:
    title: Insufficient data authenticity validation
    description: >
      The application does not control on the
      server if someone have permission to
      modify certain fields and allows to
      use invalid data in some fields, for
      example non-existing names.
    impact: >
      Inject potentially malicious characters
      into application fields.
    recommendation: >
      Validate on the server side the types of
      data that are entered into different types
      of fields in the application.
    threat: >
      Authorized user from Internet.
  es:
    title: Insufficient data authenticity validation
    description: >
      La aplicación no controla del lado de
      servidor que se tenga permiso de modificar
      ciertos campos y permite utilizar datos
      inválidos en algunos campos, por ejemplo
      nombres no existentes.
    impact: >
      Inyectar caracteres potencialmente maliciosos
      en los campos de la aplicación.
    recommendation: >
      Validar en el lado del servidor los tipos de
      datos que se ingresan a distintos tipos de
      campos en la aplicación.
    threat: >
      Usuario autorizado desde Internet.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application does not validate input data on the server side
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Updating user without validating data on the server side
          user.email = emailEdit;
          user.local.email = emailEdit;
          user.first_name = first_nameEdit;
          user.last_name = last_nameEdit;
          user.username = usernameEdit;
          res.redirect('/profile/');
        }
      });
      ```
    compliant: |
      The application implements server side validation for all input fields
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          var usernameEdit = req.body.username;
          //Validate data before editing
          if(!isValidData(req.body)){
            req.flash('error', 'Found several conflicting fields');
            res.redirect('/edit');
          }
          else{
            user.email = emailEdit;
            user.local.email = emailEdit;
            user.first_name = first_nameEdit;
            user.last_name = last_nameEdit;
            user.username = usernameEdit;
            res.redirect('/profile/');
          }
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['096', '176', '264', '320']
  metadata:
    en:
      details: __empty__
'205':
  en:
    title: Insuficient Physical Access Controls
    description: >
      It is possible to access the
      facilities by tailgating.
    impact: >
      Access to facilities and offices.
    recommendation: >
      Ask everyone who enters the office
      for an access card.
      Make employees aware of tailgating.
    threat: >
      Anonymous attacker entering the branch.
  es:
    title: Insuficient Physical Access Controls
    description: >
      Es posible acceder a las instalaciones
      haciendo uso del tailgating.
    impact: >
      Acceder a las instalaciones y oficinas.
    recommendation: >
      - Solicitar a toda persona que entre en
      la oficina carnet de acceso.
      Concientizar a los empleados acerca
      del tailgating.
    threat: >
      Atacante anónimo entrando en la sucursal.
  category: Access Subversion
  examples:
    non_compliant: |
      There are no code examples for physical vulnerabilities
    compliant: |
      There are no code examples for physical vulnerabilities
  remediation_time: __empty__
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'206':
  en:
    title: Security controls bypass or absence - Anti hooking
    description: >
      The application does not have anti-hooking
      protections, allowing tools such as Frida
      to work in its execution.
    impact: >
      - Evade security controls
      such as SSL pinning.

      - Intercept function calls and
      messages to alter the behavior of
      the application.
    recommendation: >
      Enabling anti-hooking controls
      in the application.
    threat: >
      Anonymous attcker from the Internet.
  es:
    title: Security controls bypass or absence - Anti hooking
    description: >
      El aplicativo no cuenta con
      las protecciones anti-hooking,
      permitiendo a herramientas como
      Frida funcionar en su ejecución.
    impact: >
      - Evadir controles de seguridad
      como SSL pinning.

      - Interceptar llamadas a funciones
      y mensajes para alterar el comportamiento
      del aplicativo.
    recommendation: >
      Habilitar los controles anti-hooking
      en el aplicativo.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There are no specific protection methods in the application to detect external hooks and stop the runtime
    compliant: |
      The application should implement several methods to detect non native files
      ```java
      try {
        //Code to detect external hooks/files or non native files or procedures
        throw new Exception("Deteck hook");
      } catch (Exception e) {
        Log.Careful("HookDetection", e.toString());
      }
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'207':
  en:
    title: Security controls bypass or absence - SSLPinning
    description: >
      The application does not define an SSLPinning mechanism
      or configures it insecurely,
      allowing an attacker to intercept and manipulate
      the information that travels through the application
    impact: >
      - Intercept data from the app.

      - Tamper  data from the app.
    recommendation: >
      - Establish security controls for certificates
      that include integrity checks and white lists of trusted public keys
      that will be accepted by the application

       - Define pin-sets with integrity hashes
       in res/xml/network_security_config.xml file
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Security controls bypass or absence - SSLPinning
    description: >
      La aplicación no define un mecanismo de SSLPinning
      o lo configura de forma insegura,
      permitiendo a un atacante interceptar y manipular
      la información que viaja por la aplicación
    impact: >
      - Interceptar datos de la aplicación.

      - Manipular datos de la aplicación.
    recommendation: >
      - Establecer controles de seguridad
      para los certificados que incluyan verificaciones de integridad
      y listas blancas de llaves públicas de confianza
      que serán aceptadas por la aplicación

      - Definir pin-sets con los hashes de integridad
      en el archivo res/xml/network_security_config.xml
    threat: >
      Ataque anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not define any SSLPining mechanisms in the security configuration xml file
      ```html
      <?xml version="1.0" encoding="utf-8"?>
      <network-security-config>
        <domain-config>
          <domain includeSubdomains="true">example.com</domain>
        </domain-config>
      </network-security-config>
      ```
    compliant: |
      There are correctly defined pin-sets in the security configuration file
      ```html
      <?xml version="1.0" encoding="utf-8"?>
      <network-security-config>
        <domain-config>
            <domain includeSubdomains="true">example.com</domain>
            <pin-set>
              <pin digest="SHA-256">ZC3lTYTDBJQVf1P2V7+fibTqbIsWNR/X7CWNVW+CEEA=</pin>
              <pin digest="SHA-256">GUAL5bejH7czkXcAeJ0vCiRxwMnVBsDlBMBsFtfLF8A=</pin>
            </pin-set>
        </domain-config>
      </network-security-config>
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'208':
  en:
    title: Security controls bypass or absence - Antivirus
    description: >
      It is possible to modify files
      that disable antivirus and DLP
      so that protection settings against
      various attacks are disabled.
    impact: >
      - Disable antivirus and DLP policies.

      - Access and modifying system
      information and configurations.
    recommendation: >
      Implement mechanisms to avoid modifying
      antivirus and DLP configurations.
    threat: >
      Unauthorized internal attacker.
  es:
    title: Security controls bypass or absence - Antivirus
    description: >
      Es posible modificar archivos que
      desactivan el antivirus y DLP de modo
      que las configuraciones de protección
      contra varios ataques quedan deshabilitadas.
    impact: >
      - Desactivar las políticas de antivirus y DLP.

      - Acceder y modificar información y
      configuraciones del sistema.
    recommendation: >
      Implementar mecanismos que eviten modificar
      las configuraciones del antivirus y DLP.
    threat: >
      Atacante interno no autorizado.
  category: Access Subversion
  examples:
    non_compliant: |
      A resource storing sensitive information (Like the antivirus configuration) has unsafe restriction policies
      ```yaml
      Resources:
        DLPPolicy:
          Name: "MyPolicy"
          Rule: "Sensitive_Information"
          Mode: Edit
          AccessControl: PublicReadWrite
          DeletionPolicy: Delete
      ```
    compliant: |
      Sensitive resources have strict access policies
      ```yaml
      Resources:
        DLPPolicy:
          Name: "MyPolicy"
          Rule: "Sensitive_Information"
          Mode: Audit
          AccessControl: Private
          DeletionPolicy: false
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'209':
  en:
    title: Security controls bypass or absence - Emulator
    description: >
      The application does not have a
      control that detects if it is being
      used in an emulator, allowing a wider
      surface for reverse engineering.
    impact: >
      Apply reverse engineer to the application.
    recommendation: >
      Implement recommended security controls
      for mobile applications.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Security controls bypass or absence - Emulator
    description: >
      La aplicación no cuenta con un control
      que detecte si está siento utilizada en
      un emulador, permitiendo tener una superficie
      más amplia para realizar ingeniería inversa.
    impact: >
      Realizar ingeniería inversa a la aplicación.
    recommendation: >
      Implementar los controles de seguridad
      recomendados para las aplicaciones móviles.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Source code does not sufficiently check if the app is being run on an emulator
      ```java
      private boolean isEmulator() {
        return (Build.BRAND.startsWith("generic") && Build.DEVICE.startsWith("generic"))
      }
      ```
    compliant: |
      The methods used to check if the app is being run on an emulator should be as strong as possible given current techiniques
      ```java
      private boolean isEmulator() {
      return (Build.BRAND.startsWith("generic") && Build.DEVICE.startsWith("generic"))
              || Build.FINGERPRINT.startsWith("generic")
              || Build.FINGERPRINT.startsWith("unknown")
              || Build.HARDWARE.contains("goldfish")
              || Build.HARDWARE.contains("ranchu")
              || Build.MODEL.contains("google_sdk")
              || Build.MODEL.contains("Emulator")
              || Build.MODEL.contains("Android SDK built for x86")
              || Build.MANUFACTURER.contains("Genymotion")
              || Build.PRODUCT.contains("sdk_google")
              || Build.PRODUCT.contains("google_sdk")
              || Build.PRODUCT.contains("sdk")
              || Build.PRODUCT.contains("sdk_x86")
              || Build.PRODUCT.contains("sdk_gphone64_arm64")
              || Build.PRODUCT.contains("vbox86p")
              || Build.PRODUCT.contains("emulator")
              || Build.PRODUCT.contains("simulator");
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'210':
  en:
    title: Security controls bypass or absence - Facial Recognition
    description: >
      By using the F015 finding to obtain
      a token, it is possible to bypass
      facial recognition processes to enter
      application transactions, and likewise
      to accept or deny authorizations from a user.
    impact: >
      - Log in to the allied portal as any user.

      - Approve or reject a users transactions.
    recommendation: >
      Put in place for every resource with
      business-critical functionality a
      strong authentication process and
      ensure that every user attempting
      to access it is logged in.
    threat: >
      Anonymous attacker from the
      Internet with a valid token.
  es:
    title: Security controls bypass or absence - Facial Recognition
    description: >
      Usando el hallazgo F015 para obtener
      un token, es posible evitar los procesos
      de reconocimiento facial para ingresar a
      las transacciones de la aplicación, y de
      igual forma aceptar o denegar autorizaciones
      de un usuario.
    impact: >
      - Iniciar sesión al portal aliados
      como cualquier usuario.

      - Aprobar o rechazar las
      transacciones de un usuario.
    recommendation: >
      Poner para todo recurso con una funcionalidad
      crítica para el negocio un proceso de autenticación
      fuerte y asegurarse de que cada usuario que intente
      acceder tenga una sesión iniciada.
    threat: >
      Atacante anónimo desde internet con un token válido.
  category: Access Subversion
  examples:
    non_compliant: |
      There are methods in the code that allow the facil recognition features to be bypassed in some scenarios
      ```c
      using namespace std;
      using namespace cv;
      // Function for Face Detection
      void detectAndDraw( Mat& img, CascadeClassifier& cascade,
        CascadeClassifier& nestedCascade, double scale );
      string cascadeName, nestedCascadeName;

      void getAccess(Scanner, imgFile, backUpToken){
        nestedCascade.detectMultiScale( Scanner img);
        if (isMatch(Scanner, imgFile)){
          //Granting access through a secure process
        }else if (backUpToken != null){
          //granting access through secondary vulnerable process
        }
      }
      ```
    compliant: |
      The secure facial recognition procedures should never be allowed to be bypassed
      ```c
      using namespace std;
      using namespace cv;
      // Function for Face Detection
      void detectAndDraw( Mat& img, CascadeClassifier& cascade,
        CascadeClassifier& nestedCascade, double scale );
      string cascadeName, nestedCascadeName;

      void getAccess(Scanner, imgFile){
        nestedCascade.detectMultiScale( Scanner img);
        if (isMatch(Scanner, imgFile)){
          //Granting access through a secure process
        }else{
          //Deny access
        }
      }
      ```
  remediation_time: '450'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'211':
  en:
    title: Asymmetric denial of service - ReDoS
    description: >
      Within the source code there is evidence
      of the use of dangerous regular expressions,
      because they make use of complex operations
      to find matches, which can lead to an attacker
      sending a specific string of data that could
      cause the server to crash when evaluating the
      string with the dangerous regular expression.
    impact: >
      Generate server crash.
    recommendation: >
      Use optimized regular expressions to perform
      functions without much computational overhead.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Asymmetric denial of service - ReDoS
    description: >
      Dentro del código fuente se evidencia el uso
      de expresiones regulares peligrosas, porque
      hacen uso de operaciones complejas para encontrar
      coincidencias, lo que puede llevar a que un
      atacante envíe una cadena de datos específica que
      podría generar la caída del servidor al evaluar
      la cadena con la expresión regular peligrosa.
    impact: >
      Generar la caída del servidor.
    recommendation: >
      Utilizar expresiones regulares optimizadas para
      realizar funciones sin mucho gasto computacional.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Complex regular expressions can cause a server overload
      ```c {3,7,15}
      using System.Text.RegularExpressions;
      namespace Controllers {
        public class Controller : Controller {
          public IActionResult Validate(string regex, string input) {
            var expreg = "^(http|https|ftp):[\/]{2}([a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,4})(:[0-9]+)?\/?([a-zA-Z0-9\-\._\?\,\'\/\\\+&amp;%\$#\=~]*);
            Regex reg = new Regex(pat, RegexOptions.IgnoreCase);
            bool match2 = reg.IsMatch(input, expreg);
          }
        }
      }
      ```
      Example where the application uses unverified input to search in regex
      ```c {3,7,15}
      using System;
      using System.Text.RegularExpressions;
      public partial class WebForm : System.Web.UI.Page{
        protected void Page_Load(object sender, EventArgs e){
          string findTerm = Request.Form["findTerm"];
          Match m = Regex.Match(SearchableText, "^term=" + findTerm);
        }
      }
      ```
    compliant: |
      The application simplifies the regular expressions used to compare input strings
      ```java
      using System.Text.RegularExpressions;
      //use standard regex to verify and sanitize input
      namespace Controllers {
        public class Controller : Controller {
          public IActionResult Validate(string regex, string input) {
            var expreg = ^\+[0-9]{11};
            Regex reg = new Regex(pat, RegexOptions.IgnoreCase);
            bool match = reg.IsMatch(input, reg.Escape(regex));
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'212':
  en:
    title: Security controls bypass or absence - Cloudflare
    description: >
      It is possible to make requests
      directly to the servers IP and
      thus bypass Cloudflare.
    impact: >
      - Extract technical information
      that Cloudflare masks and thus
      expand the attack surface.

      - Make malicious requests that
      are rejected by Cloudflare.

      - Perform DDoS attacks by evading
      the service that protects against them.
    recommendation: >
      Redirect any request to the
      server to the security service.
    threat: >
      Unauthorized user from the Internet.
  es:
    title: Security controls bypass or absence - Cloudflare
    description: >
      Es posible hacer peticiones
      directamente a la IP del servidor
      y de esta forma evadir Cloudflare.
    impact: >
      - Extraer información técnica que
      Cloudflare enmascara y de esta forma
      ampliar la superficie de ataque.

      - Realizar peticiones maliciosas que
      son rechazadas por Cloudflare.

      - Hacer ataques DDoS al evadir el
      servicio que protege de los mismos.
    recommendation: >
      Redirigir cualquier petición al servidor
      hacia el servicio de seguridad.
    threat: >
      Usuario no autorizado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The cloudfare uses the server as the default ingress
      ```yaml
      tunnel: The tunnel UUID
      credentials-file: /path/credentials.json
      warp-routing:
          enabled: true
      ingress:
        - hostname: gitlab.widgetcorp.tech
          service: http://localhost:80
      ```
    compliant: |
      The cloudfare is securely configured
      ```yaml
      tunnel: The tunnel UUID
      credentials-file: /path/credentials.json
      warp-routing:
          enabled: true
      ingress:
        - hostname: yourhost
          service: http://localhost:80
        - service: http_status:404
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['062', '266']
  metadata:
    en:
      details: __empty__
'213':
  en:
    title: Business information leak - JWT
    description: >
      Business information is obtained
      within the JWT, such as:

      - Username

      - Password
    impact: >
      - Get the username from the JWT.

      - Get the encrypted password from the JWT.
    recommendation: >
      Remove the sensitive information from
      the JWT and manage this kind of
      information in the server-side.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Business information leak - JWT
    description: >
      La información comercial se obtiene
      dentro del JWT, como por ejemplo:

      - Nombre de usuario

      - Contraseña
    impact: >
      - Obtener el nombre de usuario del JWT.

      - Obtener la contraseña cifrada del JWT.
    recommendation: >
      Eliminar la información sensible del JWT
      y gestionar este tipo de información en
      el lado del servidor.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The jwt token response includes password and username
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        // Validate User Code
        let jwtSecretKey = process.env.JWT_SECRET_KEY;
        let data = {
          userName: req.body.user,
          password: req.body.password,
        }
        const token = jwt.sign(data, jwtSecretKey);
        res.send(token);
      });
      ```
    compliant: |
      The jwt token is securely configured to avoid including sensitive information
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        // Validate User Code
        let jwtSecretKey = process.env.JWT_SECRET_KEY;
        let data = {
          time: Date(),
          userId: 12,
        }
        const token = jwt.sign(data, jwtSecretKey);
        res.send(token);
      });
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'214':
  en:
    title: Business information leak - Credentials
    description: >
      A leaked account gives attackers instant
      access to sensitive data or internal systems.
      Can be used to compromise customer and employee
      data, financial records, intellectual property
      and other sensitive information that could
      leave you at great risk.
    impact: >
      - Attempt to compromise the account that
      the credentials leaked from.

      - Leverage credentials from one application
      to compromise additional ones.
    recommendation: >
      - Enable multi-factor authentication on business
      accounts to add an extra layer of security.

      - Ensure strong passwords creation and management.

      - Establish security policies warranting restrictions
      and penalties concerning to the use of work related credentials.

      - Network security and access controls should be reviewed.
    threat: >
      Unauthorized attacker with access to business information.
  es:
    title: Business information leak - Credentials
    description: >
      Una cuenta filtrada da a los actores de la amenaza
      acceso instantáneo a datos sensibles o sistemas internos.
      Puede utilizarse para comprometer datos de clientes
      y empleados, registros financieros, propiedad intelectual
      y otra información sensible que podría dejarle en gran riesgo.
    impact: >
      - Intentar comprometer la cuenta desde la
      que se filtraron las credenciales.

      - Aprovechar las credenciales de una
      aplicación para comprometer otras.
    recommendation: >
      - Habilite la autenticación de factor múltiple
      en las cuentas empresariales para añadir una
      capa adicional de seguridad.

      - Garantizar la creación y gestión de contraseñas seguras.

      - Establecer políticas de seguridad que garanticen
      las restricciones y sanciones relativas al uso de
      credenciales relacionadas con el trabajo.

      - Se debe revisar la seguridad de la red y los controles de acceso.
    threat: >
      Atacante no autorizado con acesso a la
      información de la empresa.
  category: Information Collection
  examples:
    non_compliant: |
      Example with a weak password configuration
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 8
              ExcludeLowercase: true
              ExcludeNumbers: false
              ExcludePunctuation: true
              ExcludeUppercase: false
              IncludeSpace: true
              RequireEachIncludedType: false
      ```
    compliant: |
      Setting a strong password configuration policy
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 16
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: false
              ExcludeNumbers: false
              ExcludePunctuation: false
              ExcludeUppercase: false
              IncludeSpace: false
              RequireEachIncludedType: true
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'215':
  en:
    title: Business information leak - Repository
    description: >
      JFrog Artifactory repositories are accessed,
      with credentials stored in the source code.
    impact: >
      Access the repository with credentials
      obtained in the source code.
    recommendation: >
      Establish the necessary controls to
      ensure that the information is accessible
      only to the indicated persons.
    threat: >
      Internal attacker with access to source code.
  es:
    title: Business information leak - Repository
    description: >
      Se accede a los repositorios JFrog Artifactory,
      con credenciales almacenadas en el código fuente.
    impact: >
      Acceder al repositorio con credenciales
      obtenidas en el código fuente.
    recommendation: >
      Establecer los controles necesarios para
      que la información sea accesible sólo a
      las personas indicadas.
    threat: >
      Atacante interno con acceso al código fuente.
  category: Information Collection
  examples:
    non_compliant: |
      The JFrog credential are stored directly in the source code
      ```yaml
      jfrog.accesskey   = "AKIA0000000000000000"
      artifact.password = "123"
      ```
    compliant: |
      The sensitive credentials are stored as encrypted secrets
      ```yaml
      jfrog.accesskey   = ${access_key}
      artifact.password = ENC(something-base64-encoded-but-encrypted)
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'216':
  en:
    title: Business information leak - Source Code
    description: >
      Within the source code you get
      business information, such as:

      - Employee information.

      - Customer information.
    impact: >
      Obtain business information to
      generate new attack vectors.
    recommendation: >
      According to the classification of the
      information found, establish the necessary
      controls so that the information is only
      accessible to the indicated persons.
    threat: >
      Internal attacker with access to source code.
  es:
    title: Business information leak - Source Code
    description: >
      Dentro del código fuente se obtiene
      información de negocio, como:

      - Información de empleados.

      - Información de clientes.
    impact: >
      Obtener información de negocio para
      generar nuevos vectores de ataque.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a personas indicadas.
    threat: >
      Atacante interno con acceso al código fuente.
  category: Information Collection
  examples:
    non_compliant: |
      There is a file in the source code that stores the employee information
      ```json
      Employees {
        ids {
          name: "index.html";
          phone: "localhost:4446 ssl";
          role: "admin";
        }
      }
      ```
    compliant: |
      Sensitive information should be encrypted and stored in a database only accessed with admin privileges
      ```terraform
      resource "db_storage_rules" "name" {
        resource_group_name  = db_resource_group.test.name
        storage_account_name = db_storage_account.test.name
        default_action = "Deny"
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'217':
  en:
    title: Business information leak - Credit Cards
    description: >
      As a result of a misconfiguration in
      the creditcarId variable, customer
      credit card data can be seen through
      the responses to the requests made.
      Thus, it was possible to obtain business
      information, such as:

      - Strategic information.

      - Customer information.
    impact: >
      -Obtain credit card information
      of current users.

      -List valid cards and their
      expiration dates.
    recommendation: >
      According to the classification of
      the information found, establish the
      necessary controls so that the information
      is accessible only to the indicated persons.
    threat: >
      External attacker with access to valid token.
  es:
    title: Business information leak - Credit Cards
    description: >
      Debido a una mala configuración en
      la variable creditcarId se pueden
      ver datos de tarjetas de crédito de
      los clientes mediante las respuestas
      a las peticiones realizadas.
      Así, se pudo obtener información
      de negocio, como:

      - Información estratégica.

      - Información de clientes.
    impact: >
      -Obtener información de las tarjetas
      de crédito de los usuarios actuales.

      -Listar tarjetas válidas y sus
      fechas de expiración.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer
      los controles necesarios para que
      la información sea accesible sólo
      a las personas indicadas.
    threat: >
      Atacante externo con acceso a token válido.
  category: Information Collection
  examples:
    non_compliant: |
      Credit card numbers are passed as plain text to variable that can be accessed
      ```javascript
      app.post('/editPaymentMethod', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //The credit card number gets passed to a variable without hashing
          creditCardId = req.body.creditCardNumber;
          res.message("creditCardid"+creditCardId);
          res.redirect('/profile/payments');
        }
      });
      ```
    compliant: |
      Credit card numbers are correctly handled by using secure encrypting algorithms
      ```javascript
      app.post('/editPaymentMethod', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //A credit card gets assigned a random id
          creditCardId = createUuid(user);
          res.message("creditCardid"+creditCardId);
          res.redirect('/profile/payments');
        }
      });
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: F
      remediation_level: O
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'218':
  en:
    title: Business information leak - Network Unit
    description: >
      Different network units are used to identify
      the vulnerabilities present in the organization's network.
    impact: >
      - Leverage breaches or security bottlenecks
      to cause a leakage of information.

      - Collect security event logs from the internal network.
    recommendation: >
      - Check the network segmentation.

      - Secure transport encryption is crucial to
      encrypt the transmission in this layer.
    threat: >
      Anonymous atacker in local network.
  es:
    title: Business information leak - Network Unit
    description: >
      Diferentes unidades de la red se utilizan
      para identificar las vulnerabilidades presentes
      en la red de la organización.
    impact: >
      - Aprovechar las brechas o los cuellos
      de botella de seguridad para provocar
      una fuga de información.

      - Recoge los registros de eventos de seguridad
      de la red interna.
    recommendation: >
      - Compruebe la segmentación de la red.

      - El cifrado de transporte seguro es crucial para
      cifrar la transmisión en esta capa.
    threat: >
      Atacante anónimo en red local.
  category: Information Collection
  examples:
    non_compliant: |
      Secure transport encryption is disabled
      ```c
      public static void CreateTestMessage(string server){
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = false;
        client.Send(message);
      }
      ```
    compliant: |
      Secure transport encryption is enabled
      ```c
      public static void CreateTestMessage(string server){
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = true;
        client.Send(message);
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'219':
  en:
    title: Business information leak - Redis
    description: >
      Due to a misconfiguration of the Redis
      service, it is possible to connect to
      the dictionary server and obtain business
      information by deserializing objects
      contained in the keys, from which the
      following can be extracted:

      - List of users.

      - Employee information such as IDs and names.

      - Customer information such as Nits, names and IDs.
    impact: >
      Obtain information from users,
      customers and employees.
    recommendation: >
      According to the classification of the information
      found, establish the necessary controls so that
      the information is accessible only to the indicated
      persons and from authorized segments.
    threat: >
      Internal attacker with Redis credentials.
  es:
    title: Business information leak - Redis
    description: >
      Debido a una mala configuración del servicio
      Redis es posible conectarse al servidor de
      diccionario y obtener información de negocio
      al llevar acabo la deserializacion de objetos
      contenidos en las llaves, de los cuales
      se puede extraer:

      - Lista de usuarios.

      - Información de empleados como cedulas, nombres y IDs.

      - Información de clientes como nits, nombres y IDs.
    impact: >
      Obtener información de usuarios clientes y empleados.
    recommendation: >
      De acuerdo a la clasificación de la información
      encontrada, establecer los controles necesarios
      para que la información sea accesible sólo a las
      personas indicadas y desde segmentos autorizados.
    threat: >
      Atacante interno con credenciales Redis.
  category: Information Collection
  examples:
    non_compliant: |
      The server configuration does not enable protected mode
      ```yaml
      serverConfiguration:
        bind * -::*
        enable-protected-configs no
        enable-debug-command no
        tls-port 6379
        tls-key-file redis.key
        tls-auth-clients no
        tls-protocols "TLSv1.2 TLSv1.3"
        tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256
        protected-mode no
      ```
    compliant: |
      Servers with sensitive information have protected modes enabled
      ```yaml
      serverConfiguration:
        bind * -::*
        enable-protected-configs no
        enable-debug-command no
        tls-port 6379
        tls-key-file redis.key
        tls-auth-clients no
        tls-protocols "TLSv1.2 TLSv1.3"
        tls-ciphersuites TLS_CHACHA20_POLY1305_SHA256
        protected-mode yes
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'220':
  en:
    title: Business information leak - Token
    description: >
      Some of the information of the user like
      the username/email and full name is included
      in the data contained in the session token.
    impact: >
      Obtain name and emails of users.
    recommendation: >
      Avoid to include sensitive user
      information in the session token.
    threat: >
      External attacker with access to tokens.
  es:
    title: Business information leak - Token
    description: >
      Parte de la información del usuario, como
      el nombre de usuario/correo electrónico y
      el nombre completo, se incluye en los datos
      contenidos en el token de sesión.
    impact: >
      Obtener el nombre y correos
      electrónicos de los usuarios.
    recommendation: >
      Evite incluir información sensible del
      usuario en el token de sesión.
    threat: >
      Atacante externo con acceso a los tokens.
  category: Information Collection
  examples:
    non_compliant: |
      The response token includes sensitive information as plain text
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        // Validate User Code
        let jwtSecretKey = process.env.JWT_SECRET_KEY;
        let data = {
          //Include confidential information in the response
          userName: req.body.user,
          password: req.body.password,
        }
        const token = jwt.sign(data, jwtSecretKey);
        res.send(token);
      });
      ```
    compliant: |
      The response token does not include any sensitive user information
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        // Validate User Code
        let jwtSecretKey = process.env.JWT_SECRET_KEY;
        let data = {
          time: Date(),
          userId: 12,
        }
        const token = jwt.sign(data, jwtSecretKey);
        res.send(token);
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'221':
  en:
    title: Business information leak - Users
    description: >
      Business information is obtained, such as:

      - List of valid users.
    impact: >
      Access to the code to identify that
      there is insufficiently
      protected business information.
    recommendation: >
      According to the classification of the
      information found, establish the necessary
      controls so that the information is accessible
      only to the indicated persons.
    threat: >
      Internal attacker with access to the code.
  es:
    title: Business information leak - Users
    description: >
      Se obtiene información de negocio, como:

      - Lista de usuarios válidos.
    impact: >
      Acceso al código para identificar que hay
      información empresarial insuficientemente
      protegida.
    recommendation: >
      De acuerdo a la clasificación de la información
      encontrada, establecer los controles necesarios
      para que la información sea accesible sólo a las
      personas indicadas.
    threat: >
      Atacante interno con acceso al código.
  category: Information Collection
  examples:
    non_compliant: |
      The application includes functionality that could allow an unauthorized user to access sensitive data
      ```javascript
      app.post('/accessUsers', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //It is possible to access the list of users with basic registration
          if isLoggedIn{
            const users = getUserList();
            updateDOM(users);
            res.message("Valid Access);
            res.redirect('/database/users');
          }
        }
      });
      ```
    compliant: |
      Only authorized users with high credentials can access sensitive information
      ```javascript
      app.post('/accessUsers', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Add controls to see if the user is Admin before accessing business information
          const isUserAdmin = getUserCredentials(user.id);
          if (isLoggedIn && isUserAdmin){
            const users = getUserList(user.cipher_key);
            updateDOM(users);
            res.message("Valid Access);
            res.redirect('/database/users');
          }
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: F
      remediation_level: O
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'222':
  en:
    title: Business information leak - DB
    description: >
      From sensitive information stored in the source
      code, business information is obtained, such as:

      - Users who have made recent transactions, document
      number and full name.

      - Wallet IDs.

      - Versions and operating system names.

      - Transaction codes.

      - Endpoints available to, and consumed by each user.

      - Associated credit cards.

      - Available balance.
    impact: >
      - Obtain information about users and
      their common transactions.

      - Obtain information about the
      applications APIs, and the parameters
      required to query them.

      - Identify the devices a user uses to
      access the application.

      - Associate a user with an account number,
      credit card number, and available balance.
    recommendation: >
      According to the classification of the
      found information, establish the necessary
      controls, so the information is accessible
      only to the indicated persons.
    threat: >
      Authorized attacker with the credentials
      obtained from the source code, on Internet.
  es:
    title: Business information leak - DB
    description: >
      De información sensible almacenada en el código
      fuente, se obtiene información de negocio, como:

      - Usuarios que han hecho transacciones recientes,
      número de documento y nombre completo.

      - Wallet IDs.

      - Versiones y nombres de sistema operativo.

      - Códigos de transacción.

      - Endpoints disponibles para, y consumidos por cada usuario.

      - Tarjetas de crédito asociadas.

      - Saldo disponible.
    impact: >
      - Obtener información de los usuarios
      y sus transacciones comunes.

      - Obtener información sobre las API
      de la aplicación, y los parámetros
      requeridos para consultarlas.

      - Identificar los dispositivos que un
      usuario usa para acceder a la aplicación.

      - Asociar a un usuario con un número de
      cuenta, número de tarjeta de crédito, y
      saldo disponible.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a las personas indicadas.
    threat: >
      Atacante autorizado con las credenciales
      obtenidas desde el código fuente, en Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The source code shows the db credentials directly
      ```javascript
      let connection = mysql.createConnection({
          host: 'localhost',
          user: 'root',
          password: '1234',
          database: 'clients'
      });

      function getUserInfo(isLoggedIn, user){
        connection.query('SELECT * FROM employee', function (error, results, fields) {
          if (error) throw error;
          results.forEach(result => {
            //Code to handle the results
          });
        });
      }
      ```
    compliant: |
      The application uses a secure method to access the db without showing credentials in the source code
      ```javascript
      function getUserInfo(isLoggedIn, user){
        const connection = createSQLConnection(user.Credentials);
        connection.query('SELECT * FROM employee', function (error, results, fields) {
          if (error) throw error;
          results.forEach(result => {
            //Code to handle the results
          });
        });
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'223':
  en:
    title: Business information leak - JFROG
    description: >
      Through the credentials obtained in the
      code, access is obtained to external
      resources where there are binaries of
      which, if reverse engineering is applied,
      it is possible to find information burned
      in the code, such as access credentials to
      the Active directory.
    impact: >
      Use the collected information for further
      attacks, such as AD information to
      access organizational information.
    recommendation: >
      - According to the classification of the
      information found, establish the necessary
      controls so that the information is accessible
      only to the indicated persons.

      - Sensitive information should not be stored
      in binaries or source code.
    threat: >
      External attacker with access to business information.
  es:
    title: Business information leak - JFROG
    description: >
      A través de las credenciales obtenidas en
      el código se obtiene acceso a recursos
      externos en donde se encuentran binarios
      de los cuales si se aplica ingenieria inversa
      es posible encuentrar información quemada
      en el código, como credenciales de acceso
      al directorio Activo.
    impact: >
      Utilizar la información recopilada para
      otros ataques, como la información de
      AD para acceder a la información de la
      organización.
    recommendation: >
      -  De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a las personas indicadas.

      - No se debe almacenar información sensible
      en binarios o código fuente.
    threat: >
      Atacante externo con acceso a
      la información empresarial.
  category: Information Collection
  examples:
    non_compliant: |
      Access keys directly stored in the source code
      ```yaml
      jfrog.accesskey   = "AKIA0000000000000000"
      artifact.password = "123"
      ```
    compliant: |
      The access keys to sensitive resources are stored correctly encrypted
      ```yaml
      jfrog.accesskey   = ${access_key}
      artifact.password = ENC(something-base64-encoded-but-encrypted)
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'224':
  en:
    title: Business information leak - AWS
    description: >
      Business information is obtained, such as:

      - Application flows, script and operation.

      - User list.

      - Employee information.

      - Customer information Through the use of AWS
      credentials found in plain text in the source code.
    impact: >
      Gain access to cloud repositories
      will be able to gain access to
      sensitive information.
    recommendation: >
      According to the classification of the
      information found, establish the necessary
      controls so that the information is
      accessible only to the indicated persons.
    threat: >
      Attacker with access to the code.
  es:
    title: Business information leak - AWS
    description: >
      Se obtiene información de negocio, como:

      - Flujos, script y funcionamiento de la aplicación.

      - Lista de usuarios.

      - Información de empleados.

      - Información de clientes-

      - Mediante el uso de credenciales de AWS que se
      encuentran en texto plano en el código fuente.
    impact: >
      Conseguir acceso a los repositorios en
      la nube podrá obtener acceso a
      información sensible.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a las personas indicadas.
    threat: >
      Atacante con acceso a código.
  category: Information Collection
  examples:
    non_compliant: |
      The source code shows the db credentials directly
      ```javascript
      const AWS = require('aws-sdk');
      const ID = 'MyBucketID';
      const SECRET = 'AccessKeyInCode';
      const BUCKET_NAME = 'bucket';

      const uploadFile = (fileName) => {
        const fileContent = fs.readFileSync(fileName);
        // Setting up S3 upload parameters
        const params = {
          Bucket: BUCKET_NAME,
          Key: 'file',
          Body: fileContent
        };
        // Uploading files to the bucket
        s3.upload(params, function(err, data) {
          //Code to upload files and handle errors
        });
      };
      ```
    compliant: |
      The application correctly sets up access to the databases without showing credentials
      ```javascript
      const uploadFile = (fileName) => {
        const fileContent = fs.readFileSync(fileName);
        //Function to establish connection to the db without storing plain text credentials on the code
        const s3 = establishBucketConnection();
        // Setting up S3 upload parameters
        const params = {
          Bucket: BUCKET_NAME,
          Key: 'file',
          Body: fileContent
        };
        // Uploading files to the bucket
        s3.upload(params, function(err, data) {
          //Code to upload files and handle errors
        });
      };
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'225':
  en:
    title: Business information leak - Azure
    description: >
      A series of flaws in Azures service
      feature created a loophole.
      This vulnerability could allow users to
      access other customers information in the platform.
    impact: >
      - Lead to compromise the Kubernetes clusters,
      thus providing attackers with full control over
      other Azure customers' containers.

      - The vulnerability could have allowed users to
      access other customers information in the service.

      - Allow any user to download, delete or manipulate
      a massive collection of commercial databases.
    recommendation: >
      - Change users login credentials.

      - Rotate privileged credentials on a frequent basis.
    threat: >
      External attacker with access and permissions
      over the database and service architecture.
  es:
    title: Business information leak - Azure
    description: >
      Una serie de fallos en la función de servicio
      de Azure creó una laguna.
      Esta vulnerabilidad podía permitir a los usuarios
      acceder a la información de otros clientes en la plataforma.
    impact: >
      - Llevar a comprometer los clusters de
      Kubernetes, proporcionando así a los atacantes
      un control total sobre los contenedores de
      otros clientes de Azure.

      - La vulnerabilidad podría haber permitido a
      los usuarios acceder a la información de otros
      clientes del servicio.

      - Permitir a cualquier usuario descargar,
      borrar o manipular una colección masiva de
      bases de datos comerciales.
    recommendation: >
      - Cambiar las credenciales de acceso de los usuarios.

      - Rotar las credenciales privilegiadas con frecuencia.
    threat: >
      Atacante externo con acceso y permisos sobre
      la base de datos y arquitectura del servicio.
  category: Information Collection
  examples:
    non_compliant: |
      Configuration and credentials directly stored in the source code
      ```javascript
      var sql = require("mssql");
      var dbConfig = {
        server: "zavier-test.database.windows.net",
        database: "AdventureWorks",
        user: "<your username>",
        password: "<your password>",
        port: 1433,
        // Since we're on Windows Azure, we need to set the following options
        options: {
          encrypt: true
        }
      };

      const uploadFile = (fileName) => {
        const fileContent = fs.readFileSync(fileName);
        var conn = new sql.Connection(dbConfig);
        // Code to handle the upload of files
      };
      ```
    compliant: |
      The application is correctly configured to access the databases without showing credentials on the source code
      ```javascript
      const uploadFile = (fileName) => {
        const fileContent = fs.readFileSync(fileName);
        //Function to establish connection to the db without storing credentials on the code
        const connection = establishAzureConnection();
        // Code to handle the upload of files
      };
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'226':
  en:
    title: Business information leak - Personal Information
    description: >
      Real user information such as real ID
      numbers and phone numbers are being
      stored in the source code.
    impact: >
      Obtain personal information from the
      user of the application in order to
      use it in different attacks such as
      social engineering, among others.
    recommendation: >
      Personal information should not be
      exposed in the source code, and in
      case it is necessary, the data used
      should not correspond to reality.
    threat: >
      Attacker with access to the applications source code.
  es:
    title: Business information leak - Personal Information
    description: >
      En el código fuente se está almacenando
      información real de los usuarios como
      números de cédula y teléfonos reales.
    impact: >
      Conseguir información personal del usuario
      de la aplicación con el fin de utilizarla
      en diferentes ataques como ingeniería
      social, entre otros.
    recommendation: >
      La información personal no debe ser
      expuesta en el código fuente, y en
      caso de ser necesaria los datos utilizados
      no deben corresponder con la realidad.
    threat: >
      Atacante con acceso al código fuente de la aplicación.
  category: Information Collection
  examples:
    non_compliant: |
      There is a file in the source code that stores the employee information
      ```json
      Employees {
        ids {
          name: "index.html";
          phone: "localhost:4446 ssl";
          role: "admin";
          government_id = "1234095";
        }
      }
      ```
    compliant: |
      Sensitive information should be encrypted and stored in a database only accessed with admin privileges
      ```terraform
      resource "db_storage_rules" "name" {
        resource_group_name  = db_resource_group.test.name
        storage_account_name = db_storage_account.test.name
        default_action = "Deny"
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '180', '261', '300']
  metadata:
    en:
      details: __empty__
'227':
  en:
    title: Business information leak - NAC
    description: >
      An organization can set its own policies
      for each user with NAC, it could result in
      too much information that sometimes overload it.
      On the other hand, attackers use malicious
      devices, they install malicious devices between
      a legitimate device and the switch, compromising
      and allowing information leakage.
    impact: >
      - Disrupt the NAC infrastructure to
      make it inaccessible.

      - Circumvent the NAC solution by
      using a man-in-the-middle attack.
    recommendation: >
      - Implement NAC can drastically improve an
      organizations network security posture.

      - A clean NAC solution can greatly increase
      the difficulty of a successful attack.

      - MAC-based NAC should not be used due to it is
      easy for a hacker to spoof a MAC address.

      - Ensure that no devices with access to the
      internal client network are used in publicly
      accessible areas.
    threat: >
      Anonymous attacker from the Internet
      performing man-in-the-middle attack.
  es:
    title: Business information leak - NAC
    description: >
      Una organización puede establecer sus propias
      políticas para cada usuario con NAC, podría
      resultar en demasiada información que a
      veces la sobrecarga.
      Por otro lado, los atacantes utilizan dispositivos
      maliciosos, instalan dispositivos maliciosos entre
      un dispositivo legítimo y el switch, comprometiendo
      y permitiendo la fuga de información.
    impact: >
      - Interrumpir la infraestructura del NAC
      para hacerla inaccesible.

      - Eludir la solución NAC mediante
      un ataque man-in-the-middle.
    recommendation: >
      - Implementar NAC puede mejorar drásticamente
      la postura de seguridad de la red de una organización.

      - Una solución NAC limpia puede aumentar en
      gran medida la dificultad de un ataque exitoso.

      - El NAC basado en MAC no debe ser utilizado
      debido a que es fácil para un hacker
      falsificar una dirección MAC.

      - Asegúrese de que no se utilicen dispositivos
      con acceso a la red interna del cliente en
      zonas de acceso público.
    threat: >
      Atacante anónimo desde Internet realizando
      un ataque man-in-the-middle.
  category: Information Collection
  examples:
    non_compliant: |
      The NAC policy is based on MAC
      ```yaml
      config user nac-policy
        Description: Configure NAC policy
        edit <name>
          set description {description}
          set category [device]
          set status [enable]
          set mac {mac-address}
          set switch-mac-policy {switchPolicy}
        next
      end
      ```
    compliant: |
      The NAC policy is correctly configured
      ```yaml
      config user nac-policy
        Description: Configure NAC policy
        edit <name>
          set description {description}
          set category [device]
          set status [enable]
          set host {string}
          set user {string}
        next
      end
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'228':
  en:
    title: Business information leak - Analytics
    description: >
      Business insights from mobile app usage
      analytics are obtained via a Swagger URL
      exposed along with the APIKey.
    impact: >
      Obtain business information about the
      analytics of the mobile application.
    recommendation: >
      According to the classification of
      the found information, establish the
      necessary controls so that the information
      is accessible only to the indicated persons.
    threat: >
      Unauthenticated external attacker in the application.
  es:
    title: Business information leak - Analytics
    description: >
      Se obtiene información de negocio de
      la analítica de uso de la app móvil
      mediante una URL de Swagger expuesta
      junto con el APIKey.
    impact: >
      Obtener información de negocio sobre
      la analítica de la aplicación móvil.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a las personas indicadas.
    threat: >
      Atacante externo no autenticado en la aplicación.
  category: Information Collection
  examples:
    non_compliant: |
      There are credentials stored on the source code as plain text
      ```javascript
      const SW_URL = "myurl";
      const APIKey = "My APIKEY"

      const getAnalytics= (params) => {
        const reqUrl = SW_URL + "/?" + APIKey;
        const analytics = fetch(reqUrl, params)
        // Code to handle analytics information
      };
      ```
    compliant: |
      Access credentials based on authorized user credentials
      ```javascript
      const getAnalytics= (params, user) => {
        //Use a secure encrypted method to get url and Key data
        const reqUrl = getEncryptedUrl(user.credentials);
        const analytics = fetch(reqUrl, params)
        // Code to handle analytics information
      };
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'229':
  en:
    title: Business information leak - Power BI
    description: >
      Business information is obtained, such as:

      - Strategic Information

      - KIPS

      - Sales Information

      - Dispatch Information
    impact: >
      - Obtain strategic business information.

      - Obtain KPI indicators.

      - Obtain sales and dispatches information.
    recommendation: >
      Establish access controls to resources
      with potentially sensitive information.
    threat: >
      User not authenticated in the
      application from the Internet.
  es:
    title: Business information leak - Power BI
    description: >
      Se obtiene información de negocio, como:

      - Información estratégica

      - KIPS

      - Información de ventas

      - Información de despachos
    impact: >
      - Obtener información estratégica del negocio.

      - Obtener indicadores KPI.

      - Obtener información de ventas y despachos.
    recommendation: >
      Establecer controles de acceso a recursos
      con información potencialmente sensible.
    threat: >
      Usuario no autenticado en la
      aplicación desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      There are Power BI credentials stored in the source code
      ```javascript
      const request = require('request');
      const getAccessToken = function () {
        return new Promise(function (resolve, reject) {
          const url = POWERBI_URL;
          const username = 'myUserName';
          const password = 'myPassword';
          const clientId = 'myClientId';

          //Remaining code to handle connection to Token
        }
      };
      ```
    compliant: |
      The application handles connections without storing parameters in source code
      ```javascript
      const request = require('request');
      const prepareView: function(req, res) {
        getAccessToken().then(function(accessToken) {
          getEmbedToken(accessToken, req.params.groupId, req.params.dashboardId).then(function(embedToken) {
            res.render('index', {
              dashboardId: req.params.dashboardId,
              embedToken,
              embedUrl: POWERBI_URL + req.params.dashboardId + '&groupId=' + req.params.groupId
            });
          });
        });
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'230':
  en:
    title: Business information leak - Firestore
    description: >
      When attempting to activate a plan, it
      is evident that the responses to firestore
      API requests contain user credentials.
    impact: >
      Obtain credentials from other services.
    recommendation: >
      Ensure that responses to requests do
      not contain confidential information.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Business information leak - Firestore
    description: >
      Cuando se intenta activar un plan se
      evidencia que las respuestas de las
      solicitudes al API de firestore contienen
      credenciales de usuario.
    impact: >
      Obtener credenciales de otros servicios.
    recommendation: >
      Asegurarse que las respuestas de las solicitudes
      no contengan información confidencial
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application attaches user credentials to the response of a db query
      ```javascript
      let db = firebase.database();
      app.get("/user/request", (req, res) => {
        const userCredentials = req.body.user.token;
        const ref = db.ref(req.body.reqDb);
        res.send(userCredentials);
        res.send(ref);
      });
      ```
    compliant: |
      The responses of the application do not include user sensitive data
      ```javascript
      let db = firebase.database();

      app.get("/user/request", (req, res) => {
        const userCredentials = req.body.user.token;
        const ref = db.ref(req.body.reqDb);
        //Code to retrieve information and send it back, without displaying user credentials
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: R
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'231':
  en:
    title: Message flooding
    description: >
      It is possible to send mass messages to
      the phones numbers and emails of the
      victims, causing saturation of the inbox
      and consuming resources of the user.
    impact: >
      - Flood the inbox of the victim.

      - Increase abruptly the consumed
      resources of the device.

      - Hide important information
      from other messages.

      - Facilitate other attacks like phishing.
    recommendation: >
      Restrict the consecutive sending of
      messages through mechanisms such as
      time delays or controls over the
      amount of messages sent
    threat: >
      External attacker with access to the code.
  es:
    title: Message flooding
    description: >
      Es posible enviar mensajes masivos a
      los números de teléfono y correos
      electrónicos de las víctimas, provocando
      la saturación de la bandeja de entrada y
      consumiendo recursos del usuario.
    impact: >
      - Inundar la bandeja de entrada
      de la víctima.

      - Aumentar bruscamente los recursos
      consumidos del dispositivo.

      - Ocultar información importante de
      otros mensajes.

      - Facilitar otros ataques como el phishing.
    recommendation: >
      Restringir el envío consecutivo de mensajes
      a través de mecanismos como retrasos o controles
      sobre la cantidad de mensajes enviados.
    threat: >
      Atacante externo con acceso al código.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The email delivery configuration does not set a time-delay limit
      ```yaml
      email_delivery:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 587
          domain: "yourdomain"
          authentication: :plain
          user_name: "appadmin"
      ```
    compliant: |
      Accordign to business needs, the email delivery configuration sets a minimun time-delay to avoid overflooding
      ```java
      email_delivery:
        delivery_method: :smtp
        smtp_settings:
          enable_starttls_auto: true
          address: "address"
          port: 587
          domain: "promotions_domain"
          authentication: :plain
          user_name: "appadmin"
          time_delay: 24h
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['327']
  metadata:
    en:
      details: __empty__
'232':
  en:
    title: Technical information leak - Angular
    description: >
      Get technical information about the
      system, such as:

      - Angular version (ng-version).
    impact: >
      Display technical information of the system.
    recommendation: >
      Disable functionalities that give information
      about the components used such as names and versions.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Technical information leak - Angular
    description: >
      Se obtiene información técnica del
      sistema, como:

      - Versión de Angular (ng-version).
    impact: >
      Exponer información técnica del sistema.
    recommendation: >
      Deshabilitar las funcionalidades que
      den información de los componentes
      usados como nombres y versiones.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There is information in the code that displays the ng-version of the system
      ```html
      <app-root _nghost-iie-c28="" ng-version="11.0.4"><router-outlet _ngcontent-iie-c28="">
      ```
    compliant: |
      No functionalities that show technical information about the system
      ```javascript
      @Component({
          selector: '[data-app]',
          templateUrl: './app.component.html',
          styleUrls: ['./app.component.scss']
      })
      export class AppComponent {
          constructor(private _elementRef: ElementRef) {
          }

          ngOnInit(): void {
              this._elementRef.nativeElement.removeAttribute("ng-version");
          }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'233':
  en:
    title: Incomplete funcional code
    description: >
      There are binary files in the repositories
      without their corresponding source code,
      which could be malicious in nature, have
      vulnerabilities or store sensitive information.
      Decompiling one of the binaries was found to
      have unencrypted sensitive information.
    impact: >
      - Suffer an attack on binary vulnerabilities.

      - Lose code maintainability.
    recommendation: >
      Include the source code of the binaries
      in the security analysis to determine
      the existence of vulnerabilities.
    threat: >
      Insider attacker with access to source code.
  es:
    title: Incomplete funcional code
    description: >
      Existen archivos binarios en los repositorios
      sin su correspondiente código fuente, los
      cuales podrían ser de naturaleza maliciosa,
      tener vulnerabilidades o almacenar información sensible.
      Descompilando uno de los binarios se encontró
      que tenía información sensible sin cifrar.
    impact: >
      - Sufrir un ataque a las
      vulnerabilidades de los binarios.

      - Perder la mantenibilidad del código.
    recommendation: >
      Incluir el código fuente de los binarios
      dentro del análisis de seguridad para
      determinar la existencia de vulnerabilidades.
    threat: >
      Atacante interno con acceso al código fuente.
  category: Functionality Abuse
  examples:
    non_compliant: |
      After decompiling an unreferenced binary file in the source code, sensitive information was found
      ```java
      Public const MYPASSWORD ="sensitivePassword";
      result =  shell("myroute.exe" & MYPASSWORD , vbHide);
      ```
    compliant: |
      All binary files have corresponding source code and there is no sensitive information stored as plain text
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: W
      report_confidence: X
  requirements: ['164']
  metadata:
    en:
      details: __empty__
'234':
  en:
    title: Technical information leak - Stacktrace
    description: >
      Errors or exceptional events
      are not properly handled by the application
      allowing an attacker to disclose technical information
      from system error traces:
    impact: >
      Exhibit technical information of the system.
    recommendation: >
      - Remove functions that print technical information
      such as PrintStacktrace from the source code

       - Handle errors with typified exceptions
       and store them in duly protected logs
    threat: >
      Internal attacker with access to the server console.
  es:
    title: Technical information leak - Stacktrace
    description: >
      La aplicación no maneja adecuadamente
      los errores o eventos excepcionales
      permitiendo a un atacante
      conocer información técnica
      de las trazas de error del sistema
    impact: >
      Exponer información técnica del sistema.
    recommendation: >
      - Eliminar del código fuente
      las funciones que imprimen información técnica
      como  PrintStacktrace

      - Manejar los errores con excepciones tipificadas
      y almacenarlas en logs debidamente protegidos
    threat: >
      Atacante autenticado desde Internet
  category: Information Collection
  examples:
    non_compliant: |
      The application uses stacktrace functions that could potentially print sensitive information
      ```java
      public class Test {
        public static void main(String[ ] args) {
          try {
            //Code to handle data that could result in an exception
          } catch (IndexException e) {
            if (e.toString() == "Error"){
              System.out.println("Error");
            }
            e.printStackTrace();
          }
        }
      }
      ```
    compliant: |
      The application correctly handles exceptions without using print functions that leak technical information
      ```java
      public class Test {
        public static void main(String[ ] args) {
          try {
            //Code to handle data that could result in an exception
          } catch (IndexException e) {
            if (e.toString() == "Error"){
              return Exception("Error message")
            }
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'235':
  en:
    title: Technical information leak - Headers
    description: >
      It is possible to obtain technical information
      such as technology names or component versions
      through the server response headers.
    impact: >
      Obtain technical information to craft new attack vectors
    recommendation: >
      Verify that HTTP response headers
      do not contain any name or version.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Technical information leak - Headers
    description: >
      Es posible obtener información técnica
      como nombres de tecnologías o versiones de componentes
      mediante las cabeceras de respuesta del servidor.
    impact: >
      Obtener información técnica
      para elaborar nuevos vectores de ataque.
    recommendation: >
      Verificar que las respuestas HTTP
      no contengan ningún nombre o versión.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The http responses include the system versions and names
      ```http
      HTTP/1.1 200 OK
      Date: Mon, 27 Jul 2009 12:28:53 GMT
      Server: Apache/2.2.14 (Win32)
      Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
      Content-Length: 88
      Content-Type: text/html
      Connection: Open
      Message: System Version 2.0
      ```
    compliant: |
      The http responses do not include any system versions or names
      ```http
      HTTP/1.1 200 OK
      Date: Mon, 27 Jul 2009 12:28:53 GMT
      Server: Apache/2.2.14 (Win32)
      Last-Modified: Wed, 22 Jul 2009 19:15:56 GMT
      Content-Length: 88
      Content-Type: text/html
      Connection: Closed
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'236':
  en:
    title: Technical information leak - SourceMap
    description: >
      The .map files are exposed, making
      it easy for a malicious actor to
      analyze the application.
    impact: >
      Understand the inner workings of the
      application to generate new attack vectors.
    recommendation: >
      Limit access of map files to authorized users and roles.
    threat: >
      Unauthorized user from the Internet.
  es:
    title: Technical information leak - SourceMap
    description: >
      Los archivos .map se encuentran expuestos
      lo que facilita el análisis de la aplicación
      por parte de un actor malintencionado.
    impact: >
      Comprender el funcionamiento interno de la
      aplicación para generar nuevos vectores de ataque.
    recommendation: >
      Limitar el acceso a los archivos map
      a usuarios y roles autorizados.
    threat: >
      Usuario no autorizado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The source code includes direct access to SourceMap files
      ```javascript
      (function() {
        var greet, greetButton, person;
        person = document.getElementById('person');
        greet = function(greeting) {
          return console.log(greeting + " " + person.value);
        };
        person.addEventListener("focus", function() {
          return person.value = "";
        });
        greetButton = document.getElementById('greet');
        greetButton.addEventListener("click", function() {
          var greeting, helloOption;
          helloOption = document.querySelector("#hello");
          greeting = helloOption.checked ? "Hello" : "Goodbye";
          return greet(greeting);
        });
      }).call(this);

      //# sourceMappingURL=http://example.com/path/to/your/sourcemap.map</pre>
      ```
    compliant: |
      The sourceMap files should only be used to debug production code but should not be included in the source code
      ```javascript
      (function() {
        var greet, greetButton, person;
        person = document.getElementById('person');
        greet = function(greeting) {
          return console.log(greeting + " " + person.value);
        };
        person.addEventListener("focus", function() {
          return person.value = "";
        });
        greetButton = document.getElementById('greet');
        greetButton.addEventListener("click", function() {
          var greeting, helloOption;
          helloOption = document.querySelector("#hello");
          greeting = helloOption.checked ? "Hello" : "Goodbye";
          return greet(greeting);
        });
      }).call(this);
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'237':
  en:
    title: Technical information leak - Print Functions
    description: >
      Technical information is obtained
      from the application due to the use
      of print functions (Print, PrinStackTrace, Println, among others)
      whose outputs are normally shown in
      the stdout (standard output).
      In development environment it is acceptable
      to use these functions to see errors (Debug),
      but using them in production environment is
      the same as exposing yourself to show
      sensitive information of the application.
    impact: >
      - Enlarge attack surface.

      - Access to technical information of
      the application.
    recommendation: >
      The application must securely report
      all possible events that may occur, it
      must not provide technical or sensitive
      information to unauthorized users, as
      they could exploit it to extend the
      knowledge of the attack surface.
    threat: >
      Authenticated local attacker
      with access to the server console.
  es:
    title: Technical information leak - Print Functions
    description: >
      Se obtiene información técnica de la
      aplicación debido al uso de funciones print
      (Print, PrinStackTrace, Println, entre otras)
      cuyas salidas normalmente
      se muestran en el stdout (salida estándar).
      En ambiente de desarrollo es aceptable utilizar
      estas funciones para ver errores (Debug), pero
      utilizarlas en ambiente de producción es igual
      a exponerse a mostrar información sensible
      de la aplicación.
    impact: >
      - Ampliar superficie de ataque.

      - Acceder a información técnica de la aplicación.
    recommendation: >
      La aplicación debe informar de forma segura
      todos los posibles eventos que puedan ocurrir,
      no debe proporcionar información técnica ni
      sensible a usuarios no autorizados, ya que
      podrían aprovecharla para ampliar el conocimiento
      de la superficie de ataque.
    threat: >
      Atacante local autenticado con
      acceso a la consola del servidor.
  category: Information Collection
  examples:
    non_compliant: |
      The source code contains printing functions that could potentially disclose sensitive information
      ```java
      public class Test{
        public static void main(String[] args){
          try {
            throw new IOException();
          }
          catch (IOException e) {
            e.printStackTrace();
          }
        }
      }
      ```
    compliant: |
      The application does not make use of any printing functions
      ```java
      public class Test{
        public static void main(String[] args){
          try {
            throw new IOException();
          }
          catch (IOException e) {
            //Code to handle the exception
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'238':
  en:
    title: Technical information leak - API
    description: >
      An attacker is able to gather the
      entire GraphQL API Schema Structure
      (both queries and mutations).
    impact: >
      Get the knowledge of the Schema Structure
      to open a door for more dangerous attacks.
    recommendation: >
      Disable introspection queries.
    threat: >
      An anonymous attacker from the Internet
      network crafts an introspection query.
  es:
    title: Technical information leak - API
    description: >
      Un atacante es capaz de reunir toda la
      estructura del esquema de la API GraphQL
      (tanto las consultas como las mutaciones).
    impact: >
      Conseguir el conocimiento de la estructura
      del esquema para abrir una puerta a ataques
      más peligrosos.
    recommendation: >
      Desactivar las consultas de introspección.
    threat: >
      Un atacante anónimo desde la red de Internet
      realiza una consulta de introspección.
  category: Information Collection
  examples:
    non_compliant: |
      The application has introspection queries that could potentially leak the GraphQL Schema Structure
      ```javascript
      app.use('/graphql', graphqlHTTP({
        schema: MyGraphQLSchema,
      + validationRules: [*]
      }));
      ```
    compliant: |
      The back end correctly disables introspection for graphql
      ```javascript
      app.use('/graphql', graphqlHTTP({
        schema: MyGraphQLSchema,
      + validationRules: [NoIntrospection]
      }));
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'239':
  en:
    title: Technical information leak - Errors
    description: >
      It is possible to cause the server
      to throw errors after analyzing the
      endpoints with different techniques
      such as: sending massive requests to
      the endpoint, sending massive characters
      in the body of the application.
    impact: >
      Obtain technical information from the server.
    recommendation: >
      Use generic messages to indicate server
      errors and avoid sending technical information.
    threat: >
      Authorized attacker from the Internet.
  es:
    title: Technical information leak - Errors
    description: >
      Es posible hacer que el servidor arroje
      errores después de analizar los endpoints
      con diferentes técnicas como: enviar
      peticiones masivas al endpoint, enviar
      caracteres masivos en el body de la aplicación.
    impact: >
      Obtener información técnica del servidor.
    recommendation: >
      Usar mensajes genéricos para indicar
      errores por parte del servidor y evitar
      enviar información técnica.
    threat: >
      Atacante autorizado desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application uses response messages that include sensitive information
      ```c {3,7,15}
      using System;
      namespace API {
        public class Program{
          public static void Main(){
            BuildWebHost();
          }
          public static IWebHost BuildWebHost() =>
            WebHost.CreateDefaultBuilder()
              .UseSetting(WebHostDefaults.DetailedErrorsKey, "true")
              .Build();
        }
      }
      ```
    compliant: |
      The response messages do not include any specific or sensitive information in the content
      ```c {3,7,15}
      using System;
      namespace API{
        public class Program{
          public static void Main(){
            BuildWebHost();
          }
          public static IWebHost BuildWebHost() =>
            WebHost.CreateDefaultBuilder()
              .Build();
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'240':
  en:
    title: Authentication mechanism absence or evasion - OTP
    description: >
      During the registration process of a
      new user, it is necessary to confirm
      the 6-digit verification code sent to
      the associated cellular number, however,
      it is possible to evade this mechanism
      since this code is not validated, being
      valid any combination, even if it does
      not comply with the specified number of digits.
    impact: >
      - Create unauthorized users
      of the system.

      - Impersonate users.
    recommendation: >
      Validate on the server side that the
      code entered by the user, corresponds
      to the one generated by the system.
    threat: >
      Unauthorized attacker from the Internet.
  es:
    title: Authentication mechanism absence or evasion - OTP
    description: >
      Durante el proceso de Registro de un
      usuario nuevo, es necesario confirmar el
      código de verificación de 6 dígitos enviado
      al número celular asociado, sin embargo, es
      posible evadir este mecanismo ya que no se
      valida dicho código, siendo válido cualquier
      combinación, incluso si no cumple con la
      cantidad de dígitos especificada.
    impact: >
      - Crear de forma no autorizada usuarios
      en el sistema.

      - Suplantar usuarios.
    recommendation: >
      Validar en el lado del servidor que el
      código ingresado por el usuario corresponda
      al generado por el sistema.
    threat: >
      Atacante no autorizado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application updates user credentials without validating the confirmation code
      ```javascript
      app.post('/accessProfile', function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          if (length(req.body.ConfirmationCode)>6){
            user.Login = True;
          }
          res.redirect('/profile/');
        }
      });
      ```
    compliant: |
      The application correctly verifies the confirmation code is equal to the one sent to the user
      ```javascript
      app.post('/accessProfile', hashedSentCode, function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          if (req.body.ConfirmationCode == hashedSentCode){
            user.Login = True;
          }
          res.redirect('/profile/');
        }
      });
      ```
  remediation_time: '300'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'241':
  en:
    title: Authentication mechanism absence or evasion - AWS
    description: >
      The system has not been configured with one
      of the AWS authentication mechanism available
      or has one that can be bypassed.
    impact: >
      Access among the most critical parts of
      an information security program.
    recommendation: >
      Set up the operating AWS system authentication
      mechanisms based and evaluating the business
      security requirements.
    threat: >
      Unauthorized attacker with probability of
      bypassing the authentication process.
  es:
    title: Authentication mechanism absence or evasion - AWS
    description: >
      El sistema no ha sido configurado con uno
      de los mecanismos de autenticación de AWS
      disponibles o tiene uno que puede ser eludido.
    impact: >
      Acceder a una de las partes más críticas de
      un programa de seguridad de la información.
    recommendation: >
      Configurar los mecanismos de autenticación del
      sistema operativo AWS basándose y evaluando los
      requisitos de seguridad de la empresa.
    threat: >
      Atacante no autorizado con probabilidad de que
      se salte el proceso de autenticación.
  category: Access Subversion
  examples:
    non_compliant: |
      The system does not define any authentication mechanisms
      ```terraform
      resource "aws_iam_saml_provider" "default" {
        name                   = "my-saml-provider"
        saml_metadata_document = file("saml-metadata.xml")
      }

      resource "aws_cognito_identity_pool" "main" {
        identity_pool_name               = "identity pool"
        allow_unauthenticated_identities = true
        allow_classic_flow               = true
      }
      ```
    compliant: |
      There is at least one authentication mechanism enabled in the system
      ```terraform
      resource "aws_iam_saml_provider" "default" {
        name                   = "my-saml-provider"
        saml_metadata_document = file("saml-metadata.xml")
      }

      resource "aws_cognito_identity_pool" "main" {
        identity_pool_name               = "identity pool"
        allow_unauthenticated_identities = false
        allow_classic_flow               = false

        cognito_identity_providers {
          client_id               = "6lhlkkfbfb4q5kpp90urffae"
          provider_name           = "cognito-idp.us-east-1.amazonaws.com/us-east-1_Tv0493apJ"
          server_side_token_check = false
        }

        supported_login_providers = {
          "/auth"  = "7346241598935552"
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'242':
  en:
    title: Authentication mechanism absence or evasion - WiFi
    description: >
      Te system has one old authentication mechanism
      that can be bypassed and be vulnerable to an intrusion.
      An attacker can gain access to the network and see
      communication traffic, whether encrypted or not.
    impact: >
      Set a fragil encryption technique in authentication
      become a target for exploitation.
    recommendation: >
      - Select the most secure authentication method
      that is supported by your wireless network clients.

      - Set up strong encryption algorithms in order
      to enforce authentication protocol.
    threat: >
      Unauthenticated internal attacker.
  es:
    title: Authentication mechanism absence or evasion - WiFi
    description: >
      El sistema Te tiene un mecanismo de autenticación
      antiguo que puede ser evitado y ser vulnerable a una intrusión.
      Un atacante puede acceder a la red y ver el tráfico
      de comunicaciones, ya sea cifrado o no.
    impact: >
      Configurar una frágil técnica de encriptación
      en la autenticación se convierte en un objetivo
      de explotación.
    recommendation: >
      - Seleccione el método de autenticación más
      seguro que admitan los clientes de su red inalámbrica.

      - Establezca algoritmos de encriptación fuertes
      para aplicar el protocolo de autenticación.
    threat: >
      Atacante interno sin autenticar
  category: Access Subversion
  examples:
    non_compliant: |
      The application uses an unsafe encryption method as authentication protocol
      ```html
      <authentication>
        <anonymousAuthentication enabled="true" />
        <basicAuthentication enabled="true" />
        <clientCertificateMappingAuthentication enabled="false" />
        <digestAuthentication enabled="false" />
        <iisClientCertificateMappingAuthentication enabled="false">
        </iisClientCertificateMappingAuthentication>
      </authentication>
      ```
    compliant: |
      A secure authentication method is provided
      ```html
      <authentication>
        <anonymousAuthentication enabled="false" />
        <basicAuthentication enabled="false" />
        <clientCertificateMappingAuthentication enabled="false" />
        <digestAuthentication enabled="false" />
        <iisClientCertificateMappingAuthentication enabled="false">
        </iisClientCertificateMappingAuthentication>

        <windowsAuthentication enabled="true">
          <providers>
            <add value="Negotiate" />
            <add value="NTLM" />
          </providers>
        </windowsAuthentication>
      </authentication>
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'243':
  en:
    title: Authentication mechanism absence or evasion - Admin Console
    description: >
      Some functions of the application
      can be accessed without having to
      be logged into the server.
      Some only allow you to view and
      others, to edit some values.
    impact: >
      - List confidential information in
      the application.

      - Edit information in the application.
    recommendation: >
      Protect resources that are not
      authenticated for access.
    threat: >
      Unauthorized user from internal network.
  es:
    title: Authentication mechanism absence or evasion - Admin Console
    description: >
      Algunas funciones de la aplicación son
      accedidas sin necesidad de tener una
      sesión iniciada en el servidor.
      Otras, solo permiten visualizar y
      otros más, para editar algunos valores.
    impact: >
      - Enumerar información confidencial
      en la aplicación.

      - Editar información en la aplicación.
    recommendation: >
      Proteger los recursos a los cuales no se
      les tiene una autenticación para ser accedidos.
    threat: >
      Usuario no autorizado desde red interna.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows access to sensitive data without requiring user credentials
      ```javascript
      app.post('/accessAdmin', function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          //Allowing access to system files without verifying if user is logged in
          user.allowAccess = True;
          res.redirect('/profile/consoleManager');
        }
      });
      ```
    compliant: |
      Sensitive resources are restricted from being access by unauthorized users
      ```javascript
      app.post('/accessAdmin', hashedSentCode, function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          //Validating user has privileges and is correctly logged in
          if (req.body.isLoggedIn && user.isAdmin){
            user.allowAccess = True;
          }
          res.redirect('/profile/consoleManager');
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'244':
  en:
    title: Authentication mechanism absence or evasion - BIOS
    description: >
      The system lacks an authentication mechanism
      or has one that can be bypassed.
      Therefore, an attacker can access system
      resources by logging into the BIOS.
    impact: >
      - Access disk information through other systems.

      - Modify and disabling machine configurations.

      - Delete all machine information by
      formatting the disk.
    recommendation: >
      Put in place for every resource with
      business-critical functionality a strong
      authentication process and ensure that
      every user attempting to access it is logged in.
    threat: >
      Unauthorized internal attacker.
  es:
    title: Authentication mechanism absence or evasion - BIOS
    description: >
      El sistema carece de un mecanismo de autenticación
      o tiene uno que puede ser evadido.
      Por lo tanto, un atacante puede acceder a
      recursos del sistema al ingresar en la BIOS.
    impact: >
      - Acceder a la información del disco a
      través de otros sistemas.

      - Modificar y deshabilitar configuraciones
      de las máquinas.

      - Eliminar toda la información de la máquina
      al formatear el disco.
    recommendation: >
      Poner para todo recurso con una funcionalidad
      crítica para el negocio un proceso de autenticación
      fuerte y asegurarse de que cada usuario que intente
      acceder tenga una sesión iniciada.
    threat: >
      Atacante interno no autorizado.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows access to BIOS without verifying permissions and secure authentication
      ```javascript
      app.post('/accessAdmin', function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          user.allowBIOSAccess = True;
          res.redirect('/profile/BIOSManager');
        }
      });
      ```
    compliant: |
      The application restricts access to sensitive resources only to authorized users
      ```javascript
      app.post('/accessAdmin', hashedSentCode, function(req, res, next){
        User.register({ _id: req.user.id}, req.body, function(err, user){
          //Validating user has privileges and is correctly logged in
          if (req.body.isLoggedIn && user.isSuperAdmin){
            run userMFA();
            user.allowBIOSAccess = True;
          }
          res.redirect('/profile/BIOSManager');
        }
      });
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: P
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '319']
  metadata:
    en:
      details: __empty__
'245':
  en:
    title: Non-encrypted confidential information - Credit Cards
    description: >
      In alignment with the PCI DSS standard,
      sensitive information regarding payment
      cards must be masked and encrypted at
      the user end and at the server end.
    impact: >
      Obtain credit card information.
    recommendation: >
      Encrypt all sensitive information
      that is transported or stored within
      the application according to the
      organizations policies.
    threat: >
      Unauthorized insider attacker performing a MitM.
  es:
    title: Non-encrypted confidential information - Credit Cards
    description: >
      En alineación con el estándar PCI DSS,
      la información confidencial con respecto
      a tarjetas de pago, debe estar enmascarada
      y cifrada de cara al usuario y en el servidor.
    impact: >
      Obtener información de las tarjetas de crédito.
    recommendation: >
      Cifrar toda información sensible que se transporte
      o se guarde dentro la aplicación de acuerdo a las
      políticas de la organización.
    threat: >
      Atacante interno sin autorización realizando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The application unsafely saves a hash number that could be accessed through user credentials
      ```javascript
      function processCreditCarNumber(hashed_CCNumber){
        saveNumber(hashed_CCNumber);
        return True;
      }
      ```
    compliant: |
      All sensitive information is securely encrypted
      ```javascript
      const crypto = require('crypto');
      const CIPHER_ALGORITHM = 'aes-256-ctr';

      const key = createKey();

      let kg = new KeyGen(key, CIPHER_ALGORITHM);

      function processCreditCarNumber(hashed_CCNumber){
        cipheredNumber = kg.cipher(hashed_CCNumber);
        saveNumber(cipheredNumber);
        return True;
      }
      //Be aware you need special secure infrastructure to securely store the keys and be sure to rotate them regularly
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'246':
  en:
    title: Non-encrypted confidential information - DB
    description: >
      The application stores information from
      user queries within the database that is
      stored on the device, allowing an attacker
      to access the information.
    impact: >
      Obtain information from user queries.
    recommendation: >
      Encrypt all sensitive information that is
      transported or stored within the application
      according to the organizations policies.
    threat: >
      Unauthenticated attacker with access to the device.
  es:
    title: Non-encrypted confidential information - DB
    description: >
      La aplicación almacena información de las
      consultas del usuario dentro de la base de
      datos que se almacena en el dispositivo,
      lo que permite que un atacante pueda
      acceder a la información.
    impact: >
      Obtener información de las consultas de los usuarios.
    recommendation: >
      Cifrar toda información sensible que se
      transporte o se guarde dentro la aplicación
      de acuerdo a las políticas de la organización.
    threat: >
      Atacante sin autenticar con acceso al dispositivo.
  category: Information Collection
  examples:
    non_compliant: |
      A resource is insecurely configured with the credentials stored in the code
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage       = 10
        storage_encrypted       = false
        engine                  = "mysql"
        engine_version          = "5.7"
        instance_class          = "db.t3.micro"
        name                    = "mydb"
        username                = "foo"
        deletion_protection     = true
        password                = "foobarbaz"
        backup_retention_period = 2
        parameter_group_name    = "default.mysql5.7"
        skip_final_snapshot     = true
      }
      ```
      A resource that does not have its storage encrypted
      ```yaml
      RDSCluster2:
        Properties:
          DBClusterParameterGroupName:
            Ref: RDSDBClusterParameterGroup
          DBSubnetGroupName:
            Ref: DBSubnetGroup
          Engine: aurora
          MasterUserPassword:
            Ref: password
          MasterUsername:
            Ref: username
          StorageEncrypted: false
        Type: "AWS::RDS::DBCluster"
      ```
      Using the AWS CLI, the following command checks if the RDS enables encryption for the information
      ```
      $ aws rds describe-db-instances
            --region us-east-1
            --db-instance-identifier prod-mysql-db
            --query 'DBInstances[*].StorageEncrypted'
      ```
      If the command output returns false, data encryption is not enabled on the RDS.
    compliant: |
      All sensitive resources are correctly configured without storing their credentials in the source code
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage       = 10
        storage_encrypted       = true
        engine                  = "mysql"
        engine_version          = "5.7"
        instance_class          = "db.t3.micro"
        name                    = "mydb"
        username                = "foo"
        deletion_protection     = true
        password                = "foobarbaz"
        backup_retention_period = 2
        parameter_group_name    = "default.mysql5.7"
        skip_final_snapshot     = true
      }
      ```
      All resource should have storage encryption enabled
      ```yaml
      RDSDBInstance1:
        Properties:
          AvailabilityZone:
            Fn::GetAtt:
              - Subnet1
              - AvailabilityZone
          DBClusterIdentifier:
            Ref: RDSCluster
          DBInstanceClass: db.r3.xlarge
          DBParameterGroupName:
            Ref: RDSDBParameterGroup
          DBSubnetGroupName:
            Ref: DBSubnetGroup
          Engine: aurora
          PubliclyAccessible: "true"
          StorageEncrypted: true
        Type: "AWS::RDS::DBInstance"
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'247':
  en:
    title: Non-encrypted confidential information - AWS
    description: >
      AWS credentials are stored in plain
      text within the source code.
    impact: >
      - Expose resources, processes and sensitive
      information that could be compromised.

      - Copy sensitive information from S3 Buckets.

      - Remove sensitive information from S3 Buckets.
    recommendation: >
      Encrypt all sensitive information that is
      transported or stored within the application
      according to the organizations policies.
    threat: >
      Attacker with access to the code from the Internet.
  es:
    title: Non-encrypted confidential information - AWS
    description: >
      Dentro del código fuente se almacenan
      credenciales de AWS en texto plano.
    impact: >
      - Exponer recursos, procesos e información
      sensible que podrían ser comprometidos.

      - Copiar información sensible de los buckets de S3.

      - Eliminar información sensible de los buckets de S3.
    recommendation: >
      Cifrar toda información sensible que se
      transporte o se guarde dentro la aplicación
      de acuerdo a las políticas de la organización.
    threat: >
      Atacante con acceso al código desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Some sensitive resources have their access credentials exposed in the source code
      ```terraform
      provider "aws" {
        region     = "us-west-2"
        access_key = "plain_access_key"
        secret_key = "my-secret-key"
      }
      resource "aws_lb" "test" {
        name               = ""test-lb-tf""
        internal           = false
        load_balancer_type = ""application""
        security_groups    = [aws_security_group.lb_sg.id]
        enable_deletion_protection = false
      }
      ```
      ```yaml
      Resources:
        NewVolume1:
          Type: AWS::EC2::Volume
          Properties:
            Size: 100
            Encrypted: false
            AvailabilityZone: us-east-1
          DeletionPolicy: Snapshot
      ```
    compliant: |
      Sensitive resources should have access credentials stored as encrypted values
      ```terraform
      provider "aws" {
        region     = "us-west-2"
        access_key = encrypted_key
        secret_key = secret_key
      }
      resource "aws_lb" "test" {
        name               = ""test-lb-tf""
        internal           = false
        load_balancer_type = ""application""
        security_groups    = [aws_security_group.lb_sg.id]
        enable_deletion_protection = true
      }
      ```
      ```yaml
      Resources:
        NewVolume1:
          Type: AWS::EC2::Volume
          Properties:
            Size: 100
            Encrypted: true
            AvailabilityZone: us-east-1
          DeletionPolicy: Snapshot
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'248':
  en:
    title: Non-encrypted confidential information - LDAP
    description: >
      LDAP service credentials are exposed
      in plain text in the code.
    impact: >
      - Access the LDAP service.

      - Obtain confidential information.
    recommendation: >
      Use secure encryption methods to
      encrypt any sensitive information.
    threat: >
      An attacker with access to the code from the Internet.
  es:
    title: Non-encrypted confidential information - LDAP
    description: >
      Las credenciales del servicio LDAP
      están expuestas en texto plano en el código.
    impact: >
      - Acceder al servicio de LDAP.

      - Obtener información confidencial.
    recommendation: >
      Usar métodos de cifrado seguro, para cifrar
      cualquier información sensible.
    threat: >
      Un atacante con acceso al código desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      The LDAP service has the access credentials stored in the source code
      ```c
      password = "PlainPassword"
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "LDAP://myserver/OU=People,O=mycompany";
      de.AuthenticationType = AuthenticationTypes.None;

      de(path, username, password);
      ```
    compliant: |
      The LDAP service is securely accessed
      ```c
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "LDAP://myserver/OU=People,O=mycompany";
      de.AuthenticationType = AuthenticationTypes.SFTP;

      de(path, username, encryptedPass);
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'249':
  en:
    title: Non-encrypted confidential information - Credentials
    description: >
      The passwords are in plain text in
      the source code of the application
      allowing an attacker to view it
      without any encryption.
    impact: >
      Obtain sensitive information
      to compromise resources or services
    recommendation: >
      Verify that sensitive information, API keys
      and passwords are not included in the source
      code, nor in online code repositories.
    threat: >
      Authenticated attacker from the Internet
      with access to the source code
  es:
    title: Non-encrypted confidential information - Credentials
    description: >
      Las contraseñas se encuentran en plano en
      el código fuente de la aplicación permitiendo
      a un atacante visualizarla sin ningún tipo de cifrado.
    impact: >
      Obtener información sensible
      para comprometer más recursos o servicios
    recommendation: >
      Verificar que información sensible, llaves
      API y contraseñas no sean incluidas en el
      código fuente, ni en repositorios en línea
      de código.
    threat: >
      Atacante autenticado desde Internet
      con acceso al código fuente
  category: Information Collection
  examples:
    non_compliant: |
      Some credentials are stored as plain text in the source code
      ```c
      password = "PlainPassword"
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "serverPath";
      de.AuthenticationType = AuthenticationTypes.None;
      de(path, username, password);
      ```
    compliant: |
      There are no sensitive access credentials stored in the source code
      ```c
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "serverPath";
      de.AuthenticationType = AuthenticationTypes.SFTP;
      de(path, username, encryptedPass);
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['134', '135', '185', '229', '264', '300']
  metadata:
    en:
      details: __empty__
'250':
  en:
    title: Non-encrypted hard drives
    description: >
      Disk or hard drives without encryption, leave
      data stored on a computer or network storage
      system unprotected. Full disk encryption is a
      great way to protect sensitive customer data.
    impact: >
      - Access to company sensitive information

      - Modify or delete the information stored
      in the disks
    recommendation: >
      Set the encrypted property
      for all the hard drives instances
      defined as code.
    threat: >
      Authenticated attacker with local access to the machine
  es:
    title: Non-encrypted hard drives
    description: >
      Los discos o unidades de disco duro sin
      encriptación, dejan sin protección los datos
      almacenados en un ordenador o sistema de
      almacenamiento en red.
      El cifrado de todo el disco es una buena
      manera de proteger los datos sensibles de los clientes.
    impact: >
      - Acceder a información sensible para la empresa.

      - Modificar o eliminar la información almacenada en los discos
    recommendation: >
      Establecer la propiedad encrypted
      para todas las instancias
      de discos definidas desde el código.
    threat: >
      Atacante autenticado con acceso local a la máquina.
  category: Information Collection
  examples:
    non_compliant: |
      Some storing services are unencrypted
      ```yaml
      Resources:
        NewVolume1:
          Type: AWS::EC2::Volume
          Properties:
            Size: 100
            Encrypted: false
            AvailabilityZone: us-east-1
          DeletionPolicy: Snapshot
      ```
      ```terraform
      resource "aws_instance" "project-iac" {
        ami                         = lookup(var.awsprops, "ami")
        instance_type               = lookup(var.awsprops, "itype")
        subnet_id                   = lookup(var.awsprops, "subnet")
        associate_public_ip_address = lookup(var.awsprops, "publicip")
        key_name                    = lookup(var.awsprops, "keyname")


        vpc_security_group_ids = [
          aws_security_group.project-iac-sg.id
        ]

        root_block_device {
          encrypted             = false
          delete_on_termination = true
          iops                  = 150
          volume_size           = 50
          volume_type           = "gp2"
        }

        ebs_block_device {
          delete_on_termination = true
          iops                  = 150
          volume_size           = 50
          volume_type           = "gp2"
        }
      }
      ```
      Using the AWS CLI, the following command checks if an EBS volume has encryption enabled
      ```
      $ aws ec2 describe-volumes
            --filters Name=attachment.instance-id, Values= {storage_id}
      ```
      The command outputs the following structure
      ```
      {
        "Volumes": [
          {
            "AvailabilityZone": "us-east-1a",
            "Attachments": [
              {
                "AttachTime": "2016-04-04T16:51:00.000Z",
                "InstanceId": "i-67988ffd",
                "VolumeId": "vol-f0e0ee2e",
                "State": "attached",
                "DeleteOnTermination": true,
                "Device": "/dev/xvda"
              }
            ],
            "Encrypted": false,
            "VolumeType": "gp2",
            "VolumeId": "vol-f0e0ee2e",
            "State": "in-use",
            "Iops": 90,
            "SnapshotId": "snap-12c47a84",
            "CreateTime": "2016-04-04T16:51:00.136Z",
            "Size": 30
          }
        ]
      }
      ```
      If the "Encrypted" attribute is set to "false", the EBS volume does not enable encryption
    compliant: |
      All storing resources are securely configured through the use of encryption
      ```yaml
      Resources:
        NewVolume1:
          Type: AWS::EC2::Volume
          Properties:
            Size: 100
            Encrypted: true
            KmsKeyId: arn:aws:kms:us-east-1:012345678910:alias/ExampleAlias
            AvailabilityZone: us-east-1
          DeletionPolicy: Snapshot
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'251':
  en:
    title: Non-encrypted confidential information - JFROG
    description: >
      Confidential information is stored
      in plain text allowing an attacker
      to view it without any encryption.
    impact: >
      - Obtain confidential JFrog user information.

      - Create, edit and delete JFrog user information.
    recommendation: >
      Encrypt all sensitive information that is
      transported or stored within the application
      according to the organizations policies.
    threat: >
      External attacker with access to source code.
  es:
    title: Non-encrypted confidential information - JFROG
    description: >
      La información confidencial es almacenada
      en texto plano permitiendo a un atacante
      visualizarla sin ningún tipo de cifrado.
    impact: >
      - Obtener información confidencial de
      usuarios de JFrog.

      - Crear, editar y eliminar información
      de usuarios de JFrog.
    recommendation: >
      Cifrar toda información sensible que se
      transporte o se guarde dentro la aplicación
      de acuerdo a las políticas de la organización.
    threat: >
      Atacante externo con acceso al código fuente.
  category: Information Collection
  examples:
    non_compliant: |
      Password are stored in plain text in the source code
      ```yaml
      //JFrog Docker Repository
      localRepositories:
        docker-local:
          type: docker
          password: "12234"
      ```
    compliant: |
      Sensitive services are correctly configured to use secure encryption algorithms for the credentials
      ```yaml
      //JFrog Docker Repository
      localRepositories:
        docker-local:
          type: docker
          security:
        passwordSettings:
          encryptionPolicy: REQUIRED | SUPPORTED | UNSUPPORTED
          expirationPolicy:
            enabled: false
            passwordMaxAge: 60
            notifyByEmail: true
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264']
  metadata:
    en:
      details: __empty__
'252':
  en:
    title: Automatic information enumeration - Open ports
    description: >
      The security group is configured to open
      an unnecessarily large range of ports.
      With the scan is possible to list the
      services available on the servers to
      know which one can be consumed.
    impact: >
      - Scan all the system ports and access
      the services that are running on them.

      - Install backdoors on the compromised
      system through the open ports.
    recommendation: >
      Securely configure the vulnerable service
      to be accessed only by authorized users.
    threat: >
      Internal attacker with access to the VPC.
  es:
    title: Automatic information enumeration - Open ports
    description: >
      El grupo de seguridad está configurado
      para abrir un rango innecesario de puertos.
      Con el escaneo es posible listar los servicios
      disponibles en los servidores para saber
      cuál puede ser consumido.
    impact: >
      - Escanear todos los puertos del sistema y
      acceder a los servicios que se ejecutan en ellos.

      - Instalar puertas traseras en el sistema
      comprometido a través de los puertos abiertos.
    recommendation: >
      Configurar de forma segura el servicio
      vulnerable para que sólo puedan acceder
      a él los usuarios autorizados.
    threat: >
      Atacante interno con acceso al VPC.
  category: Information Collection
  examples:
    non_compliant: |
      There is an insecure range of ports enabled on the service
      ```yaml
      Resources:
        InstanceSecurityGroup:
          Type: AWS::EC2::SecurityGroup
          Properties:
              GroupDescription: Allow http to client host
              VpcId:
                Ref: myVPC
              SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 0
                ToPort: 8000
                CidrIp: 10.0.0.0/8
              SecurityGroupEgress:
              - IpProtocol: udp
                FromPort: 0
                ToPort: 8000
                CidrIp: 0.0.0.0/0
      ```
    compliant: |
      The service has a secure port configuration
      ```yaml
      Resources:
        InstanceSecurityGroup:
          Type: AWS::EC2::SecurityGroup
          Properties:
              GroupDescription: Allow http to client host
              VpcId:
                Ref: myVPC
              SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 20
                ToPort: 22
                CidrIp: 10.0.0.0/8
              SecurityGroupEgress:
              - IpProtocol: udp
                FromPort: 20
                ToPort: 22
                CidrIp: 0.0.0.0/0
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '327']
  metadata:
    en:
      details: __empty__
'253':
  en:
    title: Automatic information enumeration - AWS
    description: >
      The system exposes resources that are not
      necessary for the operation of the application.
    impact: >
      Expose system resources that can be enumerated.
    recommendation: >
      The application should not expose resources
      that are not explicitly necessary for the
      operation of the application, exposing
      unnecessary resources could expand the
      attack surface.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Automatic information enumeration - AWS
    description: >
      El sistema expone recursos que no son necesarios
      para el funcionamiento de la aplicación.
    impact: >
      Exponer recursos del sistema que pueden ser
      enumerados.
    recommendation: >
      La aplicación no debe exponer recursos que
      no sean explícitamente necesarios para el
      funcionamiento de la aplicación, la exposición
      de recursos innecesarios podría ampliar la
      superficie de ataque.
    threat: >
      Atacante anónimo desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      There is a wildcard passrole that could potentially expose all resources
      ```terraform
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "*"
        ]
      }
      ```
    compliant: |
      The access for each passrole whould have the resources defined with given specific roles
      ```terraform
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "arn:aws:::123456789012:role/admin"
          "arn:aws:::123456789012:role/user"
        ]
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '327']
  metadata:
    en:
      details: __empty__
'254':
  en:
    title: Automatic information enumeration - Credit Cards
    description: >
      It is possible to automatically list
      credit card information, as the expiration
      date and security code are not validated.
    impact: >
      List credit cards in payments.
    recommendation: >
      Filter the information received for payments.
    threat: >
      Attacker with access to the aplication
      from the Internet.
  es:
    title: Automatic information enumeration - Credit Cards
    description: >
      Es posible enumerar automáticamente información
      de tarjetas de crédito, ya que no se valida la
      fecha de vencimiento y el código de seguridad.
    impact: >
      Enumerar tarjetas de crédito en los pagos.
    recommendation: >
      Filtrar la información que se recibe por los pagos.
    threat: >
      Atacante con acceso a la aplicación desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application only checks the CC number before accesing a list of them
      ```javascript
      const accessCreditCards = (req, res) => {
        if (isValidNumber(req.body.creditCard)) {
          //Sending credit card information based only on CC number
          const creditCards = listCards(req.body.creditCard);
          res.end(creditCards);
        }
      }
      ```
    compliant: |
      The application verifies the credit card is valid using all the information (Number, expiry date and security code)
      ```javascript
      const accessCreditCards = (req, res) => {
        if (isValidNumber(req.body.creditCardInfo)) {
          //Sending credit card information based on CC info and user Id
          const creditCards = listCards(req.body.creditCardinfo, req.body.userId);
          res.end(creditCards);
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '327']
  metadata:
    en:
      details: __empty__
'255':
  en:
    title: Insecure functionality - Pass the hash
    description: >
      It is possible to use the Pass The
      Hash technique to access resources
      within the domain.
    impact: >
      Use account hashes to access domain resources.
    recommendation: >
      Implement monitoring policies to detect
      the use of lateral movement techniques
      such as Pass The Hash.
    threat: >
      Attacker from internal network without
      authentication with domain user hashes.
  es:
    title: Insecure functionality - Pass the hash
    description: >
      Es posible utilizar la técnica de Pass
      The Hash para acceder a recursos dentro
      del dominio.
    impact: >
      Utilizar los hashes de cuentas para
      acceder a recursos del dominio.
    recommendation: >
      Implmentar políticas de monitoreo para
      detectar el uso de técnicas de movimiento
      lateral como Pass The Hash.
    threat: >
      Atacante desde red interna sin autenticación
      con hashes de usuarios del dominio.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The server configuration has LM hash storing allowed, which makes it vulnerable to brut force attacks
      ```yaml
      Security Policy:
        Control Set:
          LSA:
            LMHash
      ```
    compliant: |
      Configure the server to avoid LM Hashing
      ```yaml
      Security Policy:
        Control Set:
          LSA:
            NoLMHash
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'256':
  en:
    title: Lack of protection against deletion - RDS
    description: >
      The current configuration has no
      protection against deletion, this
      can lead to the deletion of databases
      in Amazon Web Services RDS.
    impact: >
      Delete a database by mistake or without
      having to go through additional validations.
    recommendation: >
      Securely configure the Amazon Web
      Services service, allowing protection
      against accidental deletion.
    threat: >
      Attacker with access to the AWS console.
  es:
    title: Lack of protection against deletion - RDS
    description: >
      La configuración actual no posee protección
      contra borrado, esto puede llevar a la
      eliminación de bases  de datos en Amazon
      Web Services RDS.
    impact: >
      Eliminar una base de datos por error o
      sin tener que pasar por validaciones adicionales.
    recommendation: >
      Configurar de manera segura el servicio
      de Amazon Web Services, permitiendo así que
      exista protección en contra de borrado accidental.
    threat: >
      Atacante con acceso a la consola AWS.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have any protection against deletion
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage       = 10
        engine                  = "mysql"
        engine_version          = "5.7"
        instance_class          = "db.t3.micro"
        name                    = "mydb"
        username                = "foo"
        deletion_protection     = false
        password                = "foobarbaz"
        backup_retention_period = 0
        parameter_group_name    = "default.mysql5.7"
        skip_final_snapshot     = true
      }
      ```
      ```terraform
      Resources:
        RDSCluster1:
          Properties:
            BackupRetentionPeriod: 0
            DBClusterParameterGroupName:
              Ref: RDSDBClusterParameterGroup
            DBSubnetGroupName:
              Ref: DBSubnetGroup
            Engine: aurora
            MasterUserPassword:
              Ref: password
            MasterUsername:
              Ref: username
            StorageEncrypted: true
          Type: "AWS::RDS::DBCluster"
      ```
      Using the AWS CLI, verify that the RDS instances are protected against deletion
      ```
      $ aws rds describe-db-instances
          --region us-east-1
          --db-instance-identifier {resource_identifier}
          --query 'DBInstances[*].DeletionProtection'
      ```
      If the command output returns false, deletion protection is not enabled
    compliant: |
      All resources have a secure protection mechanism against deletion
      ```terraform
      resource "aws_db_instance" "default" {
        allocated_storage       = 10
        engine                  = "mysql"
        engine_version          = "5.7"
        instance_class          = "db.t3.micro"
        name                    = "mydb"
        username                = "foo"
        deletion_protection     = true
        password                = "foobarbaz"
        backup_retention_period = 7
        parameter_group_name    = "default.mysql5.7"
        skip_final_snapshot     = true
      }
      ```
      ```terraform
      Resources:
        RDSCluster1:
          Properties:
            BackupRetentionPeriod: 2
            DBClusterParameterGroupName:
              Ref: RDSDBClusterParameterGroup
            DBSubnetGroupName:
              Ref: DBSubnetGroup
            Engine: aurora
            MasterUserPassword:
              Ref: password
            MasterUsername:
              Ref: username
            StorageEncrypted: true
          Type: "AWS::RDS::DBCluster"
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: H
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'257':
  en:
    title: Lack of protection against deletion - EC2
    description: >
      Instances do not have the termination/removal
      protection option enabled.
    impact: >
      - Delete or terminate instances by accident.

      - Lose of EBS data.
    recommendation: >
      Ensure that instances have Termination
      Protection safety feature enabled.
    threat: >
      External attacker with AWS credentials.
  es:
    title: Lack of protection against deletion - EC2
    description: >
      Las instancias no tienen activada la
      opción de protección de terminación/eliminación.
    impact: >
      - Eliminar o finalizar
      instancias por accidente.

      - Perder datos de EBS.
    recommendation: >
      Asegúrese de que las instancias tienen
      activada la función de seguridad de
      protección de la terminación.
    threat: >
      Atacante externo con credenciales de AWS.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have any protection against deletion
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
              DisableApiTermination: false
      ```
      ```terraform
      resource "aws_launch_template" "foo" {
        name = "foo"
        ...
        cpu_options {
          core_count       = 4
          threads_per_core = 2
        }

        disable_api_termination = false
      }
      ```
      Using the AWS CLI, verify that EC2 has protection against deletion using the following command
      ```
      $ aws ec2 describe-instance-attribute
            --region us-east-1
            --instance-id {instance_id}
            --attribute disableApiTermination
      ```
      If the command output returns false, termination protection is not enabled for the selected instance
    compliant: |
      The resource has correctly configured protection against deletion
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              InstanceType: t2.micro
              KeyName: MyKeyPair
              DisableApiTermination: true
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'258':
  en:
    title: Lack of protection against deletion - ELB
    description: >
      The current configuration of Elastic Load Balancing
      has no Deletion Protection safety feature enabled.
    impact: >
      - AWS load balancers can be accidentally deleted.

      - Load-balanced environments remain unsafe.

      - Intentional  or accidental deletion of data integrity.
    recommendation: >
      Check the Deletion Protection configuration attribute
      value inside attributes section and enable it.
    threat: >
      Attacker with access to the AWS console that
      modifies or deletes information.
  es:
    title: Lack of protection against deletion - ELB
    description: >
      La configuración actual de Elastic Load Balancing
      no tiene activada la función de seguridad de
      protección contra el borrado.
    impact: >
      - Los balanceadores de carga de AWS pueden
      ser eliminados accidentalmente.

      - Los entornos con equilibrio de carga
      siguen siendo inseguros.

      - Eliminación intencionada o accidental de la
      integridad de los datos.
    recommendation: >
      Compruebe el valor del atributo Configuración de
      Protección contra el borrado dentro de la sección
      de atributos y actívelo.
    threat: >
      Atacante con acceso a la consola de AWS
      que modifica o borra información.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have any protection against deletion
      ```yaml
      Resources:
        LoadBalancer:
          Type: AWS::ElasticLoadBalancingV2::LoadBalancer
          Properties:
            Name: "test-Application-Load-Balancer"
            IpAddressType: String
            LoadBalancerAttributes:
            - Key: "deletion_protection.enabled"
              Value: false
            - Key: "access_logs.s3.bucket"
              Value: "bk"
      ```
      Using the AWS CLI, verify that ELB has protection against deletion using the following command
      ```
      $ aws elbv2 describe-load-balancer-attributes
            --region us-east-1
            --load-balancer-arn {elb_arn_id}
            --query 'Attributes[?(Key == `deletion_protection.enabled`)].Value | []'
      ```
      If the command output returns false, deletion protection is not enabled for the selected instance
    compliant: |
      The resource has correctly configured its protection against deletion
      ```yaml
      Resources:
        LoadBalancer:
          Type: AWS::ElasticLoadBalancingV2::LoadBalancer
          Properties:
            Name: "test-Application-Load-Balancer"
            IpAddressType: String
            LoadBalancerAttributes:
            - Key: "deletion_protection.enabled"
              Value: true
            - Key: "access_logs.s3.bucket"
              Value: "bk"
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'259':
  en:
    title: Lack of protection against deletion - DynamoDB
    description: >
      The current configuration has no protection
      against deletion (recovery points in time).
      The deletion of DynamoDB instances deletes
      the information without the possibility of
      recovery.
    impact: >
      Delete a DynamoDB instance by mistake or without
      having to go through additional validations.
    recommendation: >
      Securely configure the Amazon Web Services
      service, enabling protection against accidental
      deletion with recovery points in time.
    threat: >
      Internet attacker with access to the AWS console.
  es:
    title: Lack of protection against deletion - DynamoDB
    description: >
      La configuración actual no posee protección contra
      borrado (puntos de recuperación en el tiempo).
      La eliminación de instancias de DynamoDB borra
      la información sin posibilidad de recuperación.
    impact: >
      Eliminar una instancia de DynamoDB por error o
      sin tener que pasar por validaciones adicionales.
    recommendation: >
      Configurar de manera segura el servicio de
      Amazon Web Services,  permitiendo así que
      exista protección en contra de borrado accidental
      con puntos de recuperación en el tiempo.
    threat: >
      Atacante en Internet con acceso a la consola AWS.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have any protection against deletion or
      the deletion protection is missconfigured
      ```terraform
      resource "aws_dynamodb_table" "unsafe-table" {
        name           = "unsafe_Example"

        deletion_protection_enabled = false
        point_in_time_recovery {
          enabled = false
        }

        //Other service configuration settings not shown
      }
      ```
      ```yaml
      Resources:
        table1:
          Type: AWS::DynamoDB::Table
          Properties:
            DeletionProtectionEnabled: true
            PointInTimeRecoverySpecification:
              PointInTimeRecoveryEnabled: false
      ```
    compliant: |
      The resource has correctly configured protection against deletion.
      The deletion_protection_enabled and point_in_time_recovery are both
      properly configured
      ```terraform
      resource "aws_dynamodb_table" "test-table" {
        name                        = "example"

        deletion_protection_enabled = true
        point_in_time_recovery {
          enabled = true
        }

        //Other service configuration settings not shown
      }
      ```
      ```yaml
      Resources:
        table1:
          Type: AWS::DynamoDB::Table
          Properties:
            DeletionProtectionEnabled: true
            PointInTimeRecoverySpecification:
              PointInTimeRecoveryEnabled: true
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'260':
  en:
    title: Insecure Binary compilation
    description: >
      The binary for the IOS platform has been compiled
      without the Stack Smashing Protector (SSP) and
      Automatic Reference Counting (ARC) flags which
      provide protection against Stack Overflow attacks
      and memory corruption.
    impact: >
      Overwrite registers in memory or cause a denial
      of service through buffer overflow attacks.
    recommendation: >
      Compile binaries with ARC and fstack-protector-all flags.
    threat: >
      Internal attacker with access to the IPA.
  es:
    title: Insecure Binary compilation
    description: >
      El binario para la plataforma IOS ha sido
      compilado sin las banderas Stack Smashing
      Protector (SSP) y Automatic Reference Counting (ARC)
      las cuales brindan protección contra ataques de
      Stack Overflow y corrupción de memoria.
    impact: >
      Sobreescribir registros en memoria o causar
      una denegación de servicio a través de ataques
      buffer overflow.
    recommendation: >
      Compilar los binarios con las banderas ARC
      y fstack-protector-all.
    threat: >
      Atacante interno con acceso al IPA.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has insecure configuration for binary file compilation
      ```java
      sample_app = executable('sample_app',
        'app/main.c',
        dependencies: libc_dep,
        # Added flag below
        c_args: '-fstack-protector-none',
        c_args: '-fno-objc-arc',
        link_args: [
            linker_script_flags,
            map_file.format(meson.current_build_dir()+'/sample_app'),
        ],
        link_depends: linker_script_deps,
        native: false
      )
      ```
    compliant: |
      The application includes ARC and fstack-protector-all flags configured for binary file compilation
      ```java
      sample_app = executable('sample_app',
        'app/main.c',
        dependencies: libc_dep,
        # Added flag below
        c_args: '-fstack-protector-all',
        c_args: '-f-objc-arc',
        link_args: [
            linker_script_flags,
            map_file.format(meson.current_build_dir()+'/sample_app'),
        ],
        link_depends: linker_script_deps,
        native: false
      )
      ```
  remediation_time: '450'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'261':
  en:
    title: Insecure encryption algorithm - DSA
    description: >
      The server where the application is
      stored supports insecure encryption.
    impact: >
      Decrypt the information transmitted
      between the client and the server.
    recommendation: >
      Use algorithms considered cryptographically secure.
    threat: >
      Anonymous attacker from intranet.
  es:
    title: Insecure encryption algorithm - DSA
    description: >
      El servidor donde se almacena la aplicación
      soporta cifrados inseguros.
    impact: >
      Descifrar la información transmitida
      entre el cliente y el servidor.
    recommendation: >
      Usar algoritmos considerados criptograficámente seguros.
    threat: >
      Atacante anónimo desde intranet.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure DSA cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "ECDH_ECDSA_WITH_AES_256_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses a secure encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'262':
  en:
    title: Insecure encryption algorithm - SHA1
    description: >
      The server where the application is stored
      supports insecure ciphers - SHA1.
    impact: >
      Reverse a summary function to find
      sensitive information.
    recommendation: >
      Use algorithms considered cryptographically secure.
    threat: >
      Unauthorized attacker from internal
      network executing a MitM.
  es:
    title: Insecure encryption algorithm - SHA1
    description: >
      El servidor donde se almacena la aplicación
      soporta cifrados inseguros - SHA1.
    impact: >
      Reversar una función resumen para
      encontrar información sensible.
    recommendation: >
      Utilizar algoritmos considerados
      criptográficamente seguros.
    threat: >
      Atacante no autorizado desde red
      interna ejecutando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure SHA1 cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "ECDH_ECDSA_WITH_AES_256_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses a secure encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'263':
  en:
    title: Insecure encryption algorithm - MD5
    description: >
      The web application uses insecure
      algorithms such as MD5 to hash passwords.
    impact: >
      Crack captured credential easly.
    recommendation: >
      Use secure hashing algorithms to store
      passwords like PBKDF2.
    threat: >
      Authenticated attacker from the Internet
      with compromised DB hashes.
  es:
    title: Insecure encryption algorithm - MD5
    description: >
      La aplicación web utiliza algoritmos
      inseguros como MD5 para el hash de
      las contraseñas.
    impact: >
      Descifrar las credenciales
      capturadas con facilidad.
    recommendation: >
      Utilizar algoritmos hash seguros para
      almacenar las contraseñas, como PBKDF2.
    threat: >
      Atacante autentificado desde Internet con
      hashes de BD comprometidos.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure MD5 cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "RSA_WITH_RC4_128_MD5";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses a secure cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'264':
  en:
    title: Insecure encryption algorithm - TripleDES
    description: >
      The server where the application is stored
      supports insecurely configured ciphers, in
      addition to the ECB mode considered insecure:

      - Data Encryption Standard (DES).
    impact: >
      Reverse a summary function to find
      sensitive information.
    recommendation: >
      Use a secure encryption algorithm.
    threat: >
      Unauthorized attacker from internal
      network executing a MitM.
  es:
    title: Insecure encryption algorithm - TripleDES
    description: >
      El servidor donde se almacena la
      aplicación soporta cifrados configurados
      de manera insegura, además del modo ECB
      considerado inseguro:

      - Data Encryption Standard (DES).
    impact: >
      Reversar una función resumen para
      encontrar información sensible.
    recommendation: >
      Usar un algoritmo de cifrado seguro.
    threat: >
      Atacante no autorizado desde red
      interna ejecutando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure DES cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "ECDHE_RSA_WITH_3DES_EDE_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses an secure cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'265':
  en:
    title: Insecure encryption algorithm - AES
    description: >
      The source code uses RSA/ECB/PKCS1Padding and AES/CBC/PKCS5PADDING
      encryption and other references use CTR or CFB which are considered insecure.
    impact: >
      Decrypt the information encrypted with
      the algorithm because it has vulnerabilities
      that make it easily breakable.
    recommendation: >
      Only secure encryption with secure algorithms such as
      RSA/NONE/OAEPwithSHA-256andMGF1Padding or use implementations
      with the GCM mode encryption algorithm.
    threat: >
      Attacker with access to the code.
  es:
    title: Insecure encryption algorithm - AES
    description: >
      En el código fuente se hace uso del cifrado
      RSA/ECB/PKCS1Padding y AES/CBC/PKCS5PADDING
      los cuales se consideran inseguros.
    impact: >
      Descifrar la información encriptada con el
      algoritmo debido a que este presenta
      vulnerabilidades que lo hacen
      fácilmente rompible.
    recommendation: >
      Sólo cifrado seguro con algoritmos seguros como RSA/NONE/OAEPconSHA-256yMGF1Padding
      o utilizar implementaciones con el algoritmo de cifrado de modo GCM.
    threat: >
      Atacante con acceso al código.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure AES cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "ECDHE_RSA_WITH_AES_256_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses a secure cipher algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'266':
  en:
    title: Excessive Privileges - Docker
    description: >
      The containers executed in the application
      do not properly restrict the privileges of the users,
      executing tasks with root user
      instead of a custom user.
    impact: >
      Gain total control of the container.
    recommendation: >
      - Restrict the privileges of the user
      that execute instructions inside the container.

      - Avoid the use of the root user
      as default user.
    threat: >
      Authenticated attacker with local
      access to the container.
  es:
    title: Excessive Privileges - Docker
    description: >
      Los contenedores ejecutados en la aplicación
      no limitan los permisos de los usuarios
      ejecutando tareas como un usuario root
      en lugar de un usuario personalizado.
    impact: >
      Obtener control total del contenedor
      con el usuario por defecto.
    recommendation: >
      - Limitar los permisos del usuario
      con el que se ejecuta las instrucciones
      del contenedor.

      - Evitar utilizar el usuario root
      como usuario por defecto.
    threat: >
      Atacante autenticado con acceso local al contenedor.
  category: Information Collection
  examples:
    non_compliant: |
      The container is insecurely configured. There is no command to create a group or user
      ```docker
      FROM ubuntu:21.01-lts@sha256:3235326357dfb65f1781dbc4df3b834546d8bf914e82cce58e6e6b676e23 AS ubuntu
      ARG DEBIAN_FRONTEND=noninteractive
      RUN apt update
      RUN apt install -y nginx php-fpm supervisor && \
        rm -rf /var/lib/apt/lists/* && \
        apt clean
      ```
    compliant: |
      The containers have specific user configurations to restrict access and ensuring running as non-root
      ```docker
      FROM ubuntu:21.01-lts@sha256:3235326357dfb65f1781dbc4df3b834546d8bf914e82cce58e6e6b676e23 AS ubuntu
      ARG DEBIAN_FRONTEND=noninteractive
      RUN useradd -ms /bin/bash newuser
      USER newuser
      RUN apt update
      RUN apt install -y nginx php-fpm supervisor && \
        rm -rf /var/lib/apt/lists/* && \
        apt clean
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: https://docs.docker.com/engine/reference/builder/#user
'267':
  en:
    title: Excessive Privileges - Kubernetes
    description: >
      Kubernetes default configuration
      is overly permissive,
      allowing users to escalate privileges
      or execute commands as privileged users.
    impact: >
      Gain total control over one or more PoDs.
    recommendation: >
      Set strict security policy
      disabling potentially harmful actions
      and restricting the user permissions.
    threat: >
      Authenticated attacker with local
      access to PoD or container.
  es:
    title: Excessive Privileges - Kubernetes
    description: >
      La configuración por defecto de Kubernetes
      es demasiado permisiva,
      permitiendo a los usuarios elevar privilegios
      o ejecutar comandos como usuarios con privilegios
      administrativos.
    impact: >
      Obtener control total de uno o más contenedores.
    recommendation: >
      Establecer políticas de seguridad estrictas
      en los Pods, restringiendo acciones potencialmente peligrosas
      y limitando los permisos de los usuarios.
    threat: >
      Atacante autenticado con acceso local al PoD
      o contenedor.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not enable safe security policies allowing privileged execution
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        name: rss-site
        labels:
          app: web
      spec:
        privileged: true
        containers:
          - name: front-end
            image: nginx
            ports:
              - containerPort: 80
            securityContext:
              capabilities:
                  add:
                    - SYS_ADMIN
                    - NET_ADMIN
          - name: rss-reader
            image: nickchase/rss-php-nginxv1
            ports:
              - containerPort: 88
      ```
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        name: rss-site
        labels:
          app: web
      spec:
        containers:
          - name: front-end
            image: nginx
            ports:
              - containerPort: 80
            securityContext:
              allowPrivilegeEscalation: true
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
          - name: rss-reader
            image: nickchase/rss-php-nginxv1
            ports:
              - containerPort: 88
      ```
    compliant: |
      The resource has enabled safe security policies by restricting privileges to authorized users
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        name: rss-site
        labels:
          app: web
      spec:
        privileged: false
        containers:
          - name: front-end
            image: nginx
            ports:
              - containerPort: 80
            securityContext:
              capabilities:
                  add:
                    - SYS_ADMIN
                    - NET_ADMIN
          - name: rss-reader
            image: nickchase/rss-php-nginxv1
            ports:
              - containerPort: 88
      ```
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        name: rss-site
        labels:
          app: web
      spec:
        containers:
          - name: front-end
            image: nginx
            ports:
              - containerPort: 80
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - all
                add:
                  - NET_BIND_SERVICE
          - name: rss-reader
            image: nickchase/rss-php-nginxv1
            ports:
              - containerPort: 88
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: C
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: >
        https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        https://kubernetes.io/docs/concepts/policy/pod-security-policy/
'268':
  en:
    title: Insecure service configuration - Webview
    description: >
      The application enables the use of JavaScript
      through the method setJavaScriptEnabled
      which is disabled by default.
      This practice increases the chances
      for an attacker to exploit XSS vulnerabilities.
    impact: >
      Obtain or edit information using XSS vulnerabilities.
    recommendation: >
      - Unless required otherwise
      the application must not allow
      the use of JavaScript.

      - If the use of JavaScript is enabled,
      implement content and length validations
      in all the input fields.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration - Webview
    description: >
      La aplicación habilita el uso de JavaScript
      mediante el método setJavaScriptEnabled
      el cual viene deshabilitado por defecto.
      Esta práctica incrementa la posibilidad
      de que un atacante materialice vulnerabilidades de XSS.
    impact: >
      Obtener o editar información mediante XSS.
    recommendation: >
      - A menos que la aplicación lo requiera,
      no habilitar el uso de JavaScript.

      - Si se tiene habilitado el uso de JavaScript
      implementar validaciones de contenido y longitud
      en todos los campos de entrada para evitar ataques XSS.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application uses the insecure setJavaScriptEnabled method
      ```java
      @Override
      protected void processLogic(Bundle savedInstanceState) {
        mContentWv.getSettings().setJavaScriptEnabled(true);
        mContentWv.loadUrl("my_url");
      }
      ```
    compliant: |
      The application does not enable the insecure setJavaScriptEnabled method
      ```java
      @Override
      protected void processLogic(Bundle savedInstanceState) {
        mContentWv.getSettings().setJavaScriptEnabled(false);
        mContentWv.loadUrl("my_url");
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'269':
  en:
    title: Insecure encryption algorithm - Blowfish
    description: >
      Insecure algorithms such as Blowfish
      are used to encrypt the information
      stored in the code.
    impact: >
      Decrypt the credentials that are stored
      encrypted with blowfish.
    recommendation: >
      Use secure algorithms such as AES or RSA.
    threat: >
      Unauthorized user with access to the code.
  es:
    title: Insecure encryption algorithm - Blowfish
    description: >
      Se usan algoritmos inseguros como Blowfish
      para cifrar la información almacenada en el código.
    impact: >
      Desencriptar las credenciales que se
      almacenan encriptadas con blowfish.
    recommendation: >
      Utilizar algoritmos seguros como AES o RSA.
    threat: >
      Usuario no autorizado con acceso al código.
  category: Information Collection
  examples:
    non_compliant: |
      The resource uses the blowfish insecure encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          //cipher configured with a blowfish type encryption algorithm
          ssl_ciphers: blowfish_unique;
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The resource correctly configures a secure encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'270':
  en:
    title: Insecure functionality - File Creation
    description: >
      For an authenticated user with a profile
      that restricts certain functions, the
      restriction is performed on the front
      end by disabling the corresponding button,
      which can be bypassed and the query is
      processed when it is sent.
    impact: >
      Access customer information on a massive scale.
    recommendation: >
      Verify on the server side that the user making
      the request has sufficient permissions.
    threat: >
      Authenticated user from the Internet.
  es:
    title: Insecure functionality - File Creation
    description: >
      Para un usuario autenticado con un perfil
      que restringe ciertas funciones la restricción
      se realiza en el front deshabilitando el botón
      correspondiente la cual es posible evadir y al
      enviar la consulta esta es procesada.
    impact: >
      Acceder a información de los clientes de forma masiva.
    recommendation: >
      Verificar del lado del servidor que el usuario
      que realiza la petición tenga los permisos suficientes.
    threat: >
      Usuario autenticado desde internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The server side of the application does not validate user permissions before creating a file
      ```javascript
      const createFile = (req, res) => {
        if (isValidUser(req.body.user)) {
          const fileToDelete = req.body.filePath;
          if (!db.has(fileToDelete)){
            db.createFile(fileToDelete);
          }
        }
      }
      ```
    compliant: |
      Always perform both front end and server side validation of a users credentials
      ```javascript
      const createFile = (req, res) => {
        if (isValidUser(req.body.user)) {
          const fileToDelete = req.body.filePath;
          if (!db.has(fileToDelete) && req.body.userId.role == "ADMIN"){
            db.createFile(fileToDelete);
          }esle{
            //Code to handle unauthorized users trying to create files
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'271':
  en:
    title: Insecure functionality - Password management
    description: >
      There is a possibility to change the
      access password to a users application
      from a different users session.
    impact: >
      Change the password to access the application
      of one user from another users session.
    recommendation: >
      Limit the permissions of each of the users
      that have access to the application.
      So that they cannot modify other users
      configurations within the application.
    threat: >
      Attacker with access to the
      application from the Internet.
  es:
    title: Insecure functionality - Password management
    description: >
      Es posible cambiar la contraseña de acceso
      al aplicativo de un usuario desde la sesión
      de un usuario diferente.
    impact: >
      Cambiar la contraseña de acceso al aplicativo
      de un usuario desde la sesión de otro.
    recommendation: >
      Limitar los permisos de cada uno de los usuarios
      que tienen acceso a la aplicación.
      Para que de esta forma no puedan modificar
      configuraciones de otros usuarios dentro de la misma.
    threat: >
      Atacante con acceso a la aplicación desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The server side of the application does not validate user permissions before changing passwords
      ```javascript
      const changePassword = (req, res) => {
        if (isValidUser(req.body.user)) {
          const newPassword = req.body.newPassword;
          changeUserPassword(req.body.userId, newPassword);
        }
      }
      ```
    compliant: |
      The server side of the application performs credential validation for each user
      ```javascript
      const changePassword = (req, res) => {
        if (isValidUser(req.body.user) && isValidCredentials(req.body.userSession)) {
          const newPassword = req.body.newPassword;
          changeUserPassword(req.body.userId, newPassword);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'272':
  en:
    title: Insecure functionality - Masking
    description: >
      The system is not masking the data in the
      request and/or response, allowing sensitive
      and confidential information to be known.
    impact: >
      Become aware of sensitive and/or
      confidential user information.
    recommendation: >
      The system sends sensitive information
      through a channel or method that does not
      guarantee its confidentiality or integrity.
    threat: >
      Anonymous attacker from adjacent
      network running a MitM.
  es:
    title: Insecure functionality - Masking
    description: >
      El sistema no está enmascarando los datos en
      la petición y/o respuesta, permitiendo conocer
      información sensible y confidencial.
    impact: >
      Conocer información sensible y/o
      confidencial de los usuarios.
    recommendation: >
      El sistema envía información sensible a
      través de un canal o método que no garantiza
      su confidencialidad o integridad.
    threat: >
      Atacante anónimo desde red adyacente
      ejecutando un MitM.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application sends potential sensitive information without masking
      ```javascript
      const accessRecoveryEmail = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            //Sending unmasked sensitive information
            const recoveryEmail = getRecoveryEmail(req.body.userId);
            res.end(recoveryEmail);
          }
        }
      }
      ```
    compliant: |
      Sensitive user information is sent masked
      ```javascript
      const accessRecoveryEmail = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            //Implement a function to mask sensitive information
            const recoveryEmail = getRecoveryEmail(req.body.userId);
            const maskedEmail = MaskData.maskJSONFields(recoveryEmail, maskJSONOptions);
            res.end(maskedEmail);
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'273':
  en:
    title: Insecure functionality - Fingerprint
    description: >
      The application allows unsolicited user data updates.
    impact: >
      Update and consult information related to the user.
    recommendation: >
      Make sure that the fields to be updated are the
      same as those requested from the user.
    threat: >
      Authenticated attacker on the Internet.
  es:
    title: Insecure functionality - Fingerprint
    description: >
      La aplicación permite la actualización de
      datos no solicitados del usuario.
    impact: >
      Actualizar y consultar información
      relacionada con el usuario.
    recommendation: >
      Cerciorarse de que los campos a actualizar
      sean los mismos que se le han solicitado al usuario.
    threat: >
      Atacante autenticado en Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not perform server side validation to confirm the field the user is trying to change
      ```javascript
      const updateInfo = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            const updatedField = req.body.infoChange;
            updateUser("password", updatedField);
          }
        }
      }
      ```
    compliant: |
      The application securely ensures the field the user is trying to update
      ```javascript
      const updateInfo = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            const fieldToUpdate = req.body.field;
            const updatedField = req.body.infoChange;
            //Change the correct user field (Code to validate/clean input data must also be included)
            updateUser(fieldtoUpdate, updatedField);
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: W
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'274':
  en:
    title: Restricted fields manipulation
    description: >
      From the self-management functionality
      for the registration of an employee, it
      is possible to change the information of
      other employees from other companies.
      An attacker can initiate a request to
      confirm the registration of an employee
      and change the DNI to different values so
      that it replaces the existing data.
      In this way the information sent will be
      stored in the company, updating all the
      information of the targeted employees such
      as names, e-mail addresses, dates of birth,
      addresses, telephone numbers, among others.
    impact: >
      Modify or replace the information
      of other employees independently of
      the company.
    recommendation: >
      Verify that the user who is trying
      to modify the information has the
      necessary permissions to access.
    threat: >
      External attacker with access to
      employees information.
  es:
    title: Restricted fields manipulation
    description: >
      Desde la funcionalidad de autogestión para
      el registro de un empleado, se puede llevar
      acabo el cambio de información de otros
      empleados de otras empresas.
      Un atacante puede iniciar una petición para
      confirmar el registro de un empleado y cambiar
      el DNI por diferentes valores de modo que
      reemplace aquellos datos existentes.
      De esta manera la información que se envíe
      quedara almacenada en la empresa, actualizando
      toda la información de los empleados objetivos
      como nombres, correos fechas de nacimiento,
      direcciones, teléfonos, entre otros.
    impact: >
      Modificar o sustituir la información
      de otros empleados independientemente
      de la empresa.
    recommendation: >
      Verificar que el usuario que está intentando
      modificar la información efectivamente tenga
      los permisos necesarios para acceder.
    threat: >
      Atacante externo con acceso a la
      información de los empleados.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application does not verify user credentials before allowing editing access
      ```javascript
      const createUser = (req, res) => {
        const userId = req.body.userId;
        //The function to add user information depends on the userId and does not validate if userId already exists
        updateUserDB(userId, req.body.info);
      }
      ```
    compliant: |
      The application correctly verifies the user authorization before accessing sensitive information
      ```javascript
      const createUser = (req, res) => {
        //Verify userId is not already registered
        if (!isValidUser(req.body.userId)) {
          const userId = req.body.userId;
          const userCredentials = req.body.credentials;
          if(isAuthuser(userCredentials)){
            updateUserDB(userId, req.body.info);
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320']
  metadata:
    en:
      details: __empty__
'275':
  en:
    title: Non-encrypted confidential information - Local data
    description: >
      Confidential firebase data is stored in
      plain text on the devices local storage
      allowing an attacker who has access to
      the physical device and bypasses the device
      security mechanism to view it without any
      encryption in case of theft or loss.
    impact: >
      Obtain firebase credentials to compromise
      more resources or services.
    recommendation: >
      Encrypt all sensitive information that
      is transported or stored within the application
      according to the organizations policies.
    threat: >
      Unauthorized attacker with physical access to device.
  es:
    title: Non-encrypted confidential information - Local data
    description: >
      La información confidencial de firebase
      es almacenada en texto plano en la almacenamiento
      local del dispositivo permitiendo a un atacante que
      tenga acceso al dispositivo físico y que sobrepase
      el mecanismo de seguridad del dispositivo, visualizarla
      sin ningún tipo de cifrado en caso de robo o pérdida.
    impact: >
      Obtener credenciales de firebase para comprometer
      más recursos o servicios.
    recommendation: >
      Cifrar toda información sensible que se transporte
      o se guarde dentro la aplicación de acuerdo a las
      políticas de la organización.
    threat: >
      Atacante no autorizado con acceso físico al dispositivo.
  category: Information Collection
  examples:
    non_compliant: |
      A resource has the access credentials insecurely stored in the source code
      ```javascript
      import { initializeApp } from 'firebase/app';
      import { getFirestore, collection, getDocs } from 'firebase/firestore/lite';

      const firebaseConfig = {
        const ADMIN = "admin";
        const PASSWORD = "1234"
      };

      const app = initializeApp(firebaseConfig);
      const db = getFirestore(app);

      async function getUsers(db) {
        ....
      }
      ```
    compliant: |
      There are no unencrypted sensitive credentials stored in the source code
      ```javascript
      import { initializeApp } from 'firebase/app';
      import { getFirestore, collection, getDocs } from 'firebase/firestore/lite';

      const firebaseConfig = {
        //Configuration encrypted through secure methods
      };

      const app = initializeApp(firebaseConfig);
      const db = getFirestore(app);

      async function getUsers(db) {
        ....
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: P
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['134', '135', '185', '229', '264']
  metadata:
    en:
      details: __empty__
'276':
  en:
    title: Sensitive information sent via URL parameters - Session
    description: >
      The JWT session token is sent by the URL,
      which allows it to be cached by the browsing
      history, allowing attackers with local access
      to the machine to obtain it without any problem.
    impact: >
      Obtain the users session.
    recommendation: >
      Use secure mechanisms to send sensitive
      information between sites so that it cannot
      be stolen by malicious actors.
    threat: >
      Unauthorized attacker with local
      access to the machine.
  es:
    title: Sensitive information sent via URL parameters - Session
    description: >
      El token de sesión JWT es enviado por el URL,
      lo cual permite que sea cacheado por el historial
      de navegación, permitiendo a atacantes con acceso
      local a la máquina, obtenerlo sin ningún problema.
    impact: >
      Obtener la sesión del usuario.
    recommendation: >
      Usar mecanismos seguros para enviar información
      sensible entre sitios para que esta no sea robada
      por actores maliciosos.
    threat: >
      Atacante no autorizado con acceso local a la máquina.
  category: Information Collection
  examples:
    non_compliant: |
      The application includes the jwt access token in the url response
      ```javascript
      const getSession = (req, res) => {
        //Not shown: Code to check user session credentials

        //Include the jwt in the response url
        app.get('/users/:userJWT', (req, res) => {
          res.redirect("url/"+req.params);
        })
      }
      ```
    compliant: |
      The url responses does not include sensitive information
      ```javascript
      const getSession = (req, res) => {
        //Not shown: Code to check user session credentials
        app.get('/users/login', (req, res) => {
          res.redirect("/profile/main");
        })
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['032', '181']
  metadata:
    en:
      details: __empty__
'277':
  en:
    title: Weak credential policy - Password Expiration
    description: >
      The AWS IAM (Identity and Access Management)
      policy has the Enable password expiration flag
      set to disable, good security practices suggest
      that credentials should be renewed in 90 day periods.
    impact: >
      Leak of credentials that can be
      used for further attacks.
    recommendation: >
      - Establish credential policies following
      the requirements of the different security
      and cloud standards.

      - Credentials should have an expiration time
      limit to mitigate possible leakage.
    threat: >
      External attacker with unauthorized credentials.
  es:
    title: Weak credential policy - Password Expiration
    description: >
      La política de IAM (Identity and Access Management)
      del AWS tiene configurado el flag Enable password
      expiration como disable, las buenas prácticas de
      seguridad sugieren que las credenciales deben renovarse
      en periodos de noventa días.
    impact: >
      Filtrar de credenciales que pueden
      ser utilizadas para otros ataques.
    recommendation: >
      - Establecer políticas de credenciales
      siguiendo los requisitos de los
      diferentes estándares de seguridad
      y de la nube.

      - Las credenciales deben tener un
      límite de tiempo de caducidad para
      mitigar posibles fugas.
    threat: >
      Atacante externo con credenciales
      no autorizadas.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      The resource does not enable password expiration
      ```terraform
      resource "system_passwordpolicy" "strict" {
        enable_password_expiration = disable
      }
      ```
    compliant: |
      The resource correctly configures password expiration
      ```terraform
      resource "system_passwordpolicy" "strict" {
        enable_password_expiration = enable
        expire_day                 = 30
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['130', '132', '133', '139', '332']
  metadata:
    en:
      details: __empty__
'278':
  en:
    title: Insecure exceptions - NullPointerException
    description: >
      Use is made of functions that perform _catch_
      to Nullpointer exceptions, which can cause
      unexpected behavior in the system.
    impact: >
      - Decrease application performance.

      - Cause a possible denial of service.
    recommendation: >
      The _catch_ to _NullpointerException_
      should only be used when test class
      entries need to be tested.
    threat: >
      Unauthorized attacker from the Internet.
  es:
    title: Insecure exceptions - NullPointerException
    description: >
      Se hace uso funciones que realizan _catch_
      a excepciones de Nullpointer, las cuales
      pueden ocasionar comportamientos inesperados
      en el sistema.
    impact: >
      - Disminuir el rendimiento de la aplicación.

      - Ocasionar una posible denegación de servicio.
    recommendation: >
      Los _catch_ a _NullpointerException_ solo deben
      ser usados cuando se necesitan realizar test a
      las entradas de las clases de prueba.
    threat: >
      Atacante no autorizado desde internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application includes code that could potentially generate a null pointer exception
      ```java
      public class SimpleTesting{
        static String str;
        public static void main(String[] args) {
          try {
            //Code that could generate a nullPointerException
          }catch(NullPointerException e) {
            System.out.println("Null Pointer: "+e.getMessage());
          }
        }
      }
      ```
    compliant: |
      All exceptions in the code are correctly handled and accounted for
      ```java
      public class SimpleTesting{
        static String str;
        public static void main(String[] args) {
          try {
            //Code that should generate an exception with an speficied message
          }catch(Exception e) {
            //Handle specified exception
          }
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['161', '266', '359']
  metadata:
    en:
      details: __empty__
'279':
  en:
    title: Root detection control bypass
    description: >
      It is possible to reverse engineer
      the application and disable detection
      of rooted devices.
    impact: >
      Avoid the applications detection
      of rooted devices.
    recommendation: >
      Implement an integrity check on the
      application so that it cannot be used
      if it has been modified.
    threat: >
      Attacker with access to APK.
  es:
    title: Root detection control bypass
    description: >
      Es posible hacerle ingeniería inversa a
      la aplicación y desactivar la detección
      de equipos rooteados.
    impact: >
      Evadir la detección de equipos
      rooteados de la aplicación.
    recommendation: >
      Implementar un control de integridad en la
      aplicación para que no pueda utilizarse
      si ha sido modificada.
    threat: >
      Atacante con acceso a la APK.
  category: Access Subversion
  examples:
    non_compliant: |
      Source code could be executed after vulnerable adjustments because of an incorrectly implemented integrity check
      ```java
      public static boolean checkDexCrcValue() {
        String apkPath = BaseApplication.getInstance().getPackageCodePath();
        Long dexCrc = Long.parseLong(QianJinSuoApplication.getInstance().getString(R.string.classesdex_crc));
        try {
          ZipFile zipfile = new ZipFile(apkPath);
          ZipEntry dexentry = zipfile.getEntry("classes.dex");
          # The CRC32 check could be bypassed anyway because of debugging code included in the function
          Log.i("checkDexCrcValue", "classes.dexcrc=" + dexentry.getCrc());
          if (dexentry.getCrc() == dexCrc) {
            return true;
          }
        } catch (IOException e) {
          e.printStackTrace();
        }
        return false;
      }
      ```
    compliant: |
      A function implemented to check if the source code has been altered before running the app.
      A possible option is to include a MD5 hash within the code, generated at each build, and adding a check to the code to ensure that this hash is the same as the one stored before running the app
      ```java
      public static boolean checkApkSha(){
        String apkPath = appExample.getInstance().getPackageCodePath();
        MessageDigest msgDigest = null;
        try {
          msgDigest = MessageDigest.getInstance("SHA-1");
          byte[] bytes = new byte[1024];
          int byteCount;
          FileInputStream fis = new FileInputStream(new File(apkPath));
          while ((byteCount = fis.read(bytes)) > 0){
            msgDigest.update(bytes, 0, byteCount);
          }
          BigInteger bi = new BigInteger(1, msgDigest.digest());
          String sha = bi.toString(16);
          fis.close();
          if(BaseApplication.getInstance().getString(R.string.apk_sha).equals(sha)){
            return true;
          }
        } catch (Exception e) {
          e.printStackTrace();
        }
        return false;
      }
      ```
  remediation_time: '450'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['326']
  metadata:
    en:
      details: __empty__
'280':
  en:
    title: Session Fixation
    description: >
      The cookie session doesn't change after
      a valid login which allow an attacker
      to hijack the user session by setting
      the user cookie for one known by the attacker.
    impact: >
      Hijack a valid user session.
    recommendation: >
      Invalidate the anonymous cookie and create
      a new one after a successful login.
    threat: >
      Anonymous attacker from Internet.
  es:
    title: Session Fixation
    description: >
      La sesión de la cookie no cambia después
      de un inicio de sesión válido, lo que
      permite a un atacante secuestrar la sesión
      del usuario estableciendo la cookie del
      usuario por una conocida por el atacante.
    impact: >
      Secuestrar una sesión de usuario válida.
    recommendation: >
      Invalida la cookie anónima y crea una nueva
      después de un inicio de sesión exitoso.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not update the user cookie after a login
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!username) {
          // If the username isn't present, return an HTTP unauthorized code
          res.status(401).end();
          return;
        }
        // Use a user previous session cookie
        const sessionToken = user.storedSession;
        res.cookie("session_token", sessionToken, { expires: expiresAt });
      }
      ```
    compliant: |
      The application updates user cookies after every sucessful login
      ```javascript
      const signinHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!username) {
          // If the username isn't present, return an HTTP unauthorized code
          res.status(401).end();
          return;
        }

        // validate the password against our data
        // if invalid, send an unauthorized code
        const expectedPassword = users[username]
        if (!expectedPassword || expectedPassword !== password) {
          res.status(401).end();
          return;
        }

        // generate a random UUID as the session token
        const sessionToken = uuid.v4();
        const now = new Date();
        const expiresAt = new Date(+now + 120 * 1000);
        const session = new Session(username, expiresAt);
        sessions[sessionToken] = session
        res.cookie("session_token", sessionToken, { expires: expiresAt })
        res.end()
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['030']
  metadata:
    en:
      details: __empty__
'281':
  en:
    title: Use of an insecure channel - AWS
    description: >
      Insecure communications medium and channels
      require application data protection in transit.
    impact: >
      - Authenticate and compromise
      communications channels
      between the client and the server.

      - Compromise sensitive information that
      travels in plain text.
    recommendation: >
      - Enable secure cipher suites and encryption protocols.

      - Encryption and data integrity authentication are
      important for protecting the communications channel.

      - It is equally important to authenticate the
      identity of the remote end of the connection.
    threat: >
      Anonymous attacker from adjacent network
      performing a MitM attack
  es:
    title: Use of an insecure channel - AWS
    description: >
      Los medios y canales de comunicación inseguros requieren
      aplicaciones de protección de datos en tránsito.
    impact: >
      - Autenticar y comprometer el canal
      de comunicación entre el cliente y
      el servidor.

      - Comprometer la información sensible
      que viaja en texto plano.
    recommendation: >
      - Habilitar suites de cifrado y protocolos de cifrado seguros.

      - El cifrado y la autenticación de la integridad de
      los datos son importantes para proteger el canal de comunicación.

      - Es igualmente importante autenticar la identidad
      del extremo remoto de la conexión.
    threat: >
      Atacante anónimo desde red adyacente
      ejecutando un MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The AWS resource does not enable secure transport configuration
      ```yaml
      Resources:
        BucketPolicy1:
          Type: AWS::S3::BucketPolicy
          Properties:
            Bucket: DOC-EXAMPLE-BUCKET
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Action:
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - ''
                    - - 'arn:aws:s3:::'
                      - DOC-EXAMPLE-BUCKET
                      - /*
                  Principal: '*'
                  Condition:
                    Bool:
                      'aws:SecureTransport': false
      ```
      The AWS resource does not check if the request was performed using SSL
      ```terraform
      resource "aws_s3_bucket_policy" "b" {
        bucket = aws_s3_bucket.b.id
        policy = <<POLICY
        {
          "Version": "2012-10-17",
          "Id": "MYBUCKETPOLICY",
          "Statement": [
            {
              "Sid": "IPAllow",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:*",
              "Resource": "arn:aws:s3:::my_tf_test_bucket/*",
              "Condition": {
                "IpAddress": {"aws:SourceIp": "8.8.8.8/32"},
                "Bool": {"aws:SecureTransport": "False"}
              }
            }
          ]
        }
        POLICY
      }
      ```
      Using the AWS CLI, verify the AWS resource does not an insecure transport channel
      ```
      $ aws s3api get-bucket-policy
            --bucket cc-media-repo
            --query Policy
            --output text > s3-access-policy.json
      ```
      If the command output copies the security policy in the s3-access-policy.json, if the document has **aws:SecureTransport** set to **false** the resource does not enable a secure transport configuration
    compliant: |
      The AWS resource enables secure transport configuration
      ```yaml
      Resources:
        BucketPolicy1:
          Type: AWS::S3::BucketPolicy
          Properties:
            Bucket: DOC-EXAMPLE-BUCKET
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Action:
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - ''
                    - - 'arn:aws:s3:::'
                      - DOC-EXAMPLE-BUCKET
                      - /*
                  Principal: '*'
                  Condition:
                    Bool:
                      'aws:SecureTransport': true
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'282':
  en:
    title: Insecure encryption algorithm - ECB
    description: >
      Encryption algorithms are handled in ECB
      mode, which is insecure.
    impact: >
      Reverse ciphertext to find sensitive information.
    recommendation: >
      Use algorithms considered cryptographically secure.
    threat: >
      Authorized attacker from the internal network.
  es:
    title: Insecure encryption algorithm - ECB
    description: >
      Se manejan algoritmos de cifrado en modo
      ECB, el cual es inseguro.
    impact: >
      Revertir el texto cifrado para encontrar
      información sensible.
    recommendation: >
      Utilizar algoritmos considerados
      criptográficamente seguros.
    threat: >
      Atacante autorizado desde la red interna.
  category: Information Collection
  examples:
    non_compliant: |
      The server uses the insecure ECB encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "RSA_WITH_AES_128_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1 TLSv1.1";
        }
      }
      ```
    compliant: |
      The server uses a secure encryption algorithm
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_DHE_DSS_WITH_AES_128_GCM_SHA256"";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'283':
  en:
    title: Automatic information enumeration - Personal Information
    description: >
      It is possible to list information and
      login method of the platform users, since
      a token associated to the account is not
      used to consult the information, thus
      leaving open the possibility to consult
      information of other users.
    impact: >
      - Identify users login method.

      - Obtain strategic information.
      from users accounts.
    recommendation: >
      Implement controls with cookies or
      session tokens to limit the information
      viewed by a user.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Automatic information enumeration - Personal Information
    description: >
      Es posible enumerar información y método
      de inicio de sesión de los usuarios de
      la plataforma, debido a que para consultar
      la información no se utiliza un token
      asociado a la cuenta, con lo cual queda
      abierta la posibilidad para consultar
      información de otros usuarios.
    impact: >
      - Identificar el método de inicio
      de sesión de los usuarios.

      - Obtener información estratégica
      de las cuentas de los usuarios.
    recommendation: >
      Implementar controles con cookies o tokens
      de sesión para limitar la información
      consultada por un usuario.
    threat: >
      Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application does not verify the session token before allowing access to sensitive information
      ```javascript
      const accessHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!username || !password) {
          res.status(401).end();
          return;
        }
        // Return user information without using token control
        return UserInformation(username);
      }
      ```
    compliant: |
      The application correctly validates the user session token before allowing access to user information
      ```javascript
      const accessHandler = (req, res) => {
        // get users credentials from the JSON body
        const { username, password } = req.body
        if (!isValidUser(username, password)) {
          res.status(401).end();
          return;
        }
        // Return user information according to the sessionToken
        return UserInformation(username, req.body.sessionToken);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '329']
  metadata:
    en:
      details: __empty__
'284':
  en:
    title: Non-encrypted confidential information - Base 64
    description: >
      Base64 credentials are stored
      in the source code.
    impact: >
      Obtain service credentials.
    recommendation: >
      - Change the login credentials
      that were compromised.

      - Purge git history of affected
      sensitive data.

      - Upload sensitive data from
      secure sources such as: key vault
      services, configuration files that
      are properly encrypted.
    threat: >
      Attacker with access to source
      code from the Internet.
  es:
    title: Non-encrypted confidential information - Base 64
    description: >
      En el código fuente se almacenan
      credenciales en Base64.
    impact: >
      Obtener credenciales de los servicios.
    recommendation: >
      - Cambiar las credenciales de acceso
      que se vieron comprometidas.

      - Purgar el historial de git de la
      información sensible afectada.

      - Cargar los datos sensibles desde
      fuentes seguras como: servicios
      de bóveda de claves, archivos de
      configuración que estén debidamente
      cifrados.
    threat: >
      Atacante con acceso al código
      fuente desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The server could have a user class that stores the passwords in Base64
      ```python
      class User(db.Model, UserMixin):
        id = db.Column(db.Integer, primary_key=True)
        email = db.Column(db.String(255), unique=True)
        password_hash = db.Column(db.String(128))

        @property
        def password(self):
            raise AttributeError('password not readable')
        @password.setter
        def password(self, password):
            self.password_hash = base64.b64encode('password')
      ```
    compliant: |
      The encrypted values of sensitive information should be stored in the code
      ```python
      class User(db.Model, UserMixin):
        id = db.Column(db.Integer, primary_key=True)
        email = db.Column(db.String(255), unique=True)
        password_hash = db.Column(db.String(128))

        @property
        def password(self):
            raise AttributeError('password not readable')
        @password.setter
        def password(self, password):
            self.password_hash = bcrypt.hashpw('password', bcrypt.gensalt())
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264']
  metadata:
    en:
      details: __empty__
'285':
  en:
    title: Insecure service configuration - App Transport Security
    description: >
      The NSAppTransportSecurity function has
      the NSAllowsArbitraryLoads option enabled
      which allows insecure (HTTP) connections
      to the application.
      Good security practices state that insecure
      connections from the app to external servers
      should not be allowed.
    impact: >
      Conduct MitM attacks over insecure channels
      to obtain sensitive user information.
    recommendation: >
      Configure in the applications info.plist
      following good security practices.
    threat: >
      Internal attacker on the same network segment.
  es:
    title: Insecure service configuration - App Transport Security
    description: >
      La función NSAppTransportSecurity
      tiene habilitada la opción
      NSAllowsArbitraryLoads que permite conexiones
      inseguras (HTTP) a la aplicación.
      Las buenas prácticas de seguridad establecen
      que no se deben permitir conexiones inseguras
      desde la app a servidores externos.
    impact: >
      Realizar ataques de MitM sobre canales inseguros
      para obtener información sensible de los usuarios.
    recommendation: >
      Configurar en el info.plist de la aplicación
      siguiendo las buenas practicas de seguridad.
    threat: >
      Atacante interno en el mismo segmento de red.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The info.plist file has some insecure parameters
      ```html
      <key>NSAppTransportSecurity</key>
      <dict>
        <key>NSExceptionDomains</key>
        <dict>
          <key>yourdomain.com</key>
          <dict>
            <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>
            <true/>
            <key>NSAllowsArbitraryLoads</key>
            <true/>
          </dict>
        </dict>
      </dict>
      ```
    compliant: |
      The info.plist is correctly configured to avoid insecure http loads
      ```html
      <key>NSAppTransportSecurity</key>
      <dict>
        <key>NSExceptionDomains</key>
        <dict>
          <key>yourdomain.com</key>
          <dict>
            <key>NSTemporaryExceptionAllowsInsecureHTTPLoads</key>
            <false/>
            <key>NSAllowsArbitraryLoads</key>
            <false/>
          </dict>
        </dict>
      </dict>
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'286':
  en:
    title: Insecure object reference - Personal information
    description: >
      The system allows bypassing authentication
      mechanisms and modifying other users information
      by altering the unique identifiers that
      distinguish each user.
    impact: >
      Modify information of other users.
    recommendation: >
      - Validate that unprivileged users can
      only access and modify their own information.

      - Manage user operations using session objects.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure object reference - Personal information
    description: >
      El sistema permite saltar mecanismos de
      autenticación y modificar información de otros
      usuarios al alterar los identificadores únicos
      que distinguen a cada usuario.
    impact: >
      Modificar información de otros usuarios.
    recommendation: >
      - Validar que los usuarios sin privilegios
      solo puedan acceder y modificar su propia
      información.

      - Manejar las operaciones de los usuarios
      utilizando objetos de sesión.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows an unauthorized user to edit unique identification
      ```javascript
      const updateHandler = (req, res) => {
        const { username, password } = req.body
        if (!username) {
          res.status(401).end();
          return;
        }
        // Alter user unique identification
        Users.username.userUuid = req.uuid;
        return Users;
      }
      ```
    compliant: |
      There are no methods in the application that allows an unauthorized user to edit sensitive information
      ```javascript
      const updateHandler = (req, res) => {
        const { username, password } = req.body
        if (!username || !isVerifiedUser(req.body.userId, password)) {
          res.status(401).end();
          return;
        }
        // Update methods should only update user non-sensitive information
        Users.username.description = req.description;
        return Users;
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'287':
  en:
    title: Insecure object reference - Corporate information
    description: >
      It is possible to include or modify
      employee information of third party
      companies by uploading an excel file
      and changing the payrollNumber.
      An attacker can initiate a request to
      upload an excel file containing information
      on existing or non-existent employees and
      change the company identifier (payrollnumber)
      to one to which he does not have access.
      In this way the information sent is stored
      in the third party company, associating
      new employees or updating the information of
      those that already existed.
    impact: >
      - Start a file upload process.

      - Change the payrollNumber
      to not own.

      - Upload or modify information
      to a third party company.
    recommendation: >
      Verify that the user who is trying to
      modify the information has the necessary
      permissions to access.
    threat: >
      Unauthorized user with access to corporate information.
  es:
    title: Insecure object reference - Corporate information
    description: >
      Se puede llevar acabo la inclusión o
      modificación de la información de empleados
      de empresas de terceros al subir un archivo
      excel y variar el payrollNumber.
      Un atacante puede iniciar una petición para
      subir un archivo excel que contenga información
      de empleados existentes o inexistentes y cambiar
      el identificador de la empresa (payrollnumber)
      por uno al que no tenga acceso.
      De esta manera la información que se envíe quede
      almacenada en la empresa del tercero, asociando
      empleados nuevos o actualizando la información
      de aquellos que ya existían.
    impact: >
      - Comenzar un proceso de carga de archivo.

      - Cambiar el payrollNumber a uno no propio.

      - Subir o modificar información a una
      empresa de un tercero.
    recommendation: >
      Verificar que el usuario que está intentando
      modificar la información efectivamente tenga
      los permisos necesarios para acceder.
    threat: >
      Usuario no autorizado con acceso a la
      información corporativa.
  category: Access Subversion
  examples:
    non_compliant: |
      The application grants access to sensitive information without verifying authorization credentials
      ```javascript
      const updateFiles = (req, res) => {
        const { username, password } = req.body
        if (!isValidUser(username, password)) {
          res.status(401).end();
          return;
        }
        // Grant Access without checking privileges
        const accessToken = connectToDataBase(username);
        return accessToken;
      }
      ```
    compliant: |
      The application allows access to sensitive information only to authorized users
      ```javascript
      const updateFiles = (req, res) => {
        const { username, password } = req.body
        if (!isValidUser(username, password)) {
          res.status(401).end();
          return;
        }
        // Grant Access without checking privileges
        const userCredentials = getCredentials(username);
        if(userCredentials == "admin"){
          const accessToken = connectToDataBase(username);
          return accessToken;
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'288':
  en:
    title: Insecure object reference - Financial information
    description: >
      Although the requests for inquiry of expenses
      and movements associated with a credit card
      send the encrypted product number, it is possible
      to make the inquiry from the session of an
      account other than the one associated with
      the credit card.
    impact: >
      Obtain expense information from other users.
    recommendation: >
      Verify that the user who is trying to
      access the information has the necessary
      permissions to do so.
    threat: >
      Authorized user from the Internet with
      access to the encrypted product number.
  es:
    title: Insecure object reference - Financial information
    description: >
      Si bien las peticiones de consulta de
      gastos y movimientos asociados a una
      tarjeta de crédito envian el número del
      producto encriptado es posible hacer la
      consulta desde la sesión de una cuenta
      diferente a la asociada a la tarjeta de crédito.
    impact: >
      Obtener información de gastos de otros usuarios.
    recommendation: >
      Verificar que el usuario que está intentando
      acceder a la información efectivamente tenga
      los permisos necesarios para hacerlo.
    threat: >
      Usuario autorizado desde internet con acceso
      al número de producto encriptado.
  category: Access Subversion
  examples:
    non_compliant: |
      The application grants access to sensitive information without verifying authorization credentials
      ```javascript
      const getQueryConsult = (req, res) => {
        if (!isValidQuery(req.body.user, req.body.product)) {
          //Getting and returning user credentials only based on the product
          const expensesReport = getReport(req.body.query, encrypt(req.body.product))
          return expensesReport
        }
      }
      ```
    compliant: |
      The application correctly verifies user authorization credentials before accesing sensitive information
      ```javascript
      const getQueryConsult = (req, res) => {
        if (!isValidQuery(req.body.user, req.body.product)) {
          const expensesReport = getReport(req.body.query, encrypt(req.body.product))
          //As en example, you could verify that the owner of the report is the same as the user associated with the query
          if(expensesReport.owner = req.body.userCredentials){
            return expensesReport;
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'289':
  en:
    title: Technical information leak - Logs
    description: >
      The application has an HTML file
      that displays a LOG of the system.
      In the event that this page is accessible
      by users, they will be able to know
      information about the system.
    impact: >
      Understand how the system works from the
      messages stored in the Log and generate
      an attack against the system based on
      this knowledge.
    recommendation: >
      Avoid exposing system information in files
      that can be accessed by third parties.
    threat: >
      External attacker from the Internet.
  es:
    title: Technical information leak - Logs
    description: >
      La aplicación tiene un archivo HTML
      que despliega un LOG del sistema.
      En el caso de que esta página sea
      accesible para los usuarios, éstos
      podrán conocer información sobre el sistema.
    impact: >
      Entender cómo funciona el sistema
      a partir de los mensajes almacenados
      en el Log y generar un ataque contra
      el sistema basado en este conocimiento.
    recommendation: >
      Evitar exponer información del sistema en
      archivos que pueden ser accedidos por terceros.
    threat: >
      Atacante externo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The source code contains a file that could potentially display system logs
      ```html
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title>
      </head>
      <body>
        <script type="text/javascript">
          (function () {
            var old = system.log;
            var logger = document.getElementById('log');
            old = function (message) {
              if (typeof message == 'object') {
                logger.innerHTML += (JSON && JSON.stringify ? JSON.stringify(message) : message) + '<br />';
              } else {
                logger.innerHTML += message + '<br />';
              }
            }
          })();
        </script>
      </body>
      </html>
      ```
    compliant: |
      Delete all logging functions in the production source code
  remediation_time: '30'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: U
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'290':
  en:
    title: Technical information leak - IPs
    description: >
      The web server exposes their internal
      IP through the web page response.
    impact: >
      Obtain the internal IP of the server.
    recommendation: >
      Remove web services that expose
      technical information.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Technical information leak - IPs
    description: >
      El servidor web expone su IP interna a
      través de la respuesta de la página web.
    impact: >
      Obtener la IP interna del servidor.
    recommendation: >
      Eliminar los servicios web que exponen
      información técnica.
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      Due to a missconfiguration in one of the web pages of the app, the http header returns the ip address of the server
      ```http
      HTTP/1.1 200 OK
      Connection: close
      Date: Tue, 18 Aug 2015 15: 44 : 04 GMT
      Server: Apache/2.2.3 (CentOS) 255.235.10.10
      Last-Modified: Tue, 18 Aug 2015 15:11:03 GMT
      Content-Length: 6821
      Content-Type: text/html
      ```
    compliant: |
      Delete all services that could potentially share sensitive information
      ```http
      HTTP/1.1 200 OK
      Connection: close
      Date: Tue, 18 Aug 2015 15: 44 : 04 GMT
      Server: Apache/2.2.3 (CentOS)
      Last-Modified: Tue, 18 Aug 2015 15:11:03 GMT
      Content-Length: 6821
      Content-Type: text/html
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'291':
  en:
    title: Business information leak - Financial Information
    description: >
      Business information is obtained, such as:

      - Mail

      - Payment reference and description

      - Total value

      - Product information

      - Collectors line of business

      - Payers role
    impact: >
      Obtain sensitive information to create
      new attack vectors.
    recommendation: >
      According to the classification of the
      information found, establish the necessary
      controls so that the information is accessible
      only to the indicated persons.
    threat: >
      An attacker authenticated from the Internet.
  es:
    title: Business information leak - Financial Information
    description: >
      Se obtiene información de negocio, como:

      - Correo electrónico

      - Referencia y descripción de pago

      - Valor total

      - Información del producto

      - Línea de negocio del recaudador

      - Rol del pagador
    impact: >
      Obtener información sensible para
      crear nuevos vectores de ataque.
    recommendation: >
      De acuerdo a la clasificación de la
      información encontrada, establecer los
      controles necesarios para que la información
      sea accesible sólo a las personas indicadas.
    threat: >
      Un atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There is a method in the application that includes sensitive data in the response
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        let data = {
          userName: req.body.user,
          password: req.body.password,
          ...other user sensitive information
        }
        res.send(data);
      });
      ```
    compliant: |
      The application does not include any sensitive data in the responses
      ```javascript
      app.post("/user/generateToken", (req, res) => {
        if user.isLoggedIn{
          let data = {
            userName: req.body.user,
            password: req.body.password,
            ...other user sensitive information
          }
          if(req.body.userCredentials == "ADMIN"){
            res.send(data);
          }
        }
      });
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'292':
  en:
    title: Inappropriate coding practices - Public variables
    description: >
      The code presents several classes whose
      variables are declared as public.
    impact: >
      - Get or set a public variable by any part
      of the program, and any rules regarding its use
      can be easily broken or forgotten.

      - Exploit the use of public variables in
      the code by accessing them through classes
      external to the application in order to
      modify the values of these variables and
      compromise the integrity of the application.
    recommendation: >
      Unless strictly necessary, all variables
      should be declared as private.
    threat: >
      Unauthorized attacker with access
      to the application.
  es:
    title: Inappropriate coding practices - Public variables
    description: >
      El código presenta varias clases cuyas
      variables están declaradas como públicas.
    impact: >
      - Obtener o establecer una variable
      pública por cualquier parte del
      programa, y cualquier regla relativa
      a su uso puede ser fácilmente rota u olvidada.

      - Explotar el uso de variables públicas
      en el código accediendo a ellas a través
      de clases externas a la aplicación para
      modificar los valores de estas variables
      y comprometer la integridad de la aplicación.
    recommendation: >
      A no ser que sea estrictamente necesario,
      todas las variables deben ser declaradas
      como privadas.
    threat: >
      Atacante no autorizado con acceso a la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application uses static variable declaration when not strictly necessary
      ```java
      public class UserExample {
        public static user_key a;
        public static user_id b;
      }
      ```
    compliant: |
      The application does not use static variable declaration
      ```java
      public class UserExample {
        private user_key a;
        private user_id b;
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['158']
  metadata:
    en:
      details: __empty__
'293':
  en:
    title: Insecure service configuration - Key pair
    description: >
      The credentials to access the Key pair
      are the same to access the Keystore,
      good practices with respect to containers
      recommend that they are different because
      in case one is compromised not both are
      compromised keytool -genkey, -keyalg RSA,
      -alias opkeystore, -keypass Kpassword,
      -keystore opkeystore.jks, -storepass Spassword,
      - validity 365.
      The Kpassword must be different from the Spassword.
    impact: >
      Compromise the access to the files if the
      keys of the keystore are the same as
      those of the key pair.
    recommendation: >
      Implement best practices in cryptographic systems
      Recommendation for Cryptographic Key Generation.
    threat: >
      Anonymous attacker in adjacent network.
  es:
    title: Insecure service configuration - Key pair
    description: >
      Las credenciales de acceso al key pair son
      las mismas para acceder al keystore, las buenas
      prácticas con respecto a los contenedores
      recomiendan que sean diferentes ya que en caso
      de que se comprometa una no se comprometa ambas,
      keytool -genkey, -keyalg RSA, -alias opkeystore,
      -keypass Kpassword, -keystore opkeystore.jks,
      -storepass Spassword, - validity 365.
      El Kpassword debe ser diferente al Spassword.
    impact: >
      Comprometer el acceso a los archivos
      si las claves del almacén de claves
      son las mismas que las del par de claves.
    recommendation: >
      Implementar buenas prácticas en cuanto a
      sistemas criptográficos Recommendation for
      Cryptographic Key Generation.
    threat: >
      Atacantea anónimo en red adyancente.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are shared key pairs for several sensitive resources
      ```yaml
      jarsigner -keystore "password1" -certchain "bundle.pem" -tsa "http://time.certum.pl" -storetype PKCS11
        -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "provider.cfg" -keypass "password1"
        -storepass "password1" "[your_code].jar" "[your_alias]"
      ```
    compliant: |
      Every sensitive resource has a secure key pair configuration
      ```yaml
      jarsigner -keystore "enc_password" -certchain "bundle.pem" -tsa "http://time.certum.pl" -storetype PKCS11
        -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "provider.cfg" -keypass "enc_password1"
        -storepass "enc_password2" "[your_code].jar" "[your_alias]"
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'294':
  en:
    title: Insecure service configuration - OTP
    description: >
      The OTP mock is still enabled in the application.
    impact: >
      - Attacker with information from a user
      of the application gets to the point
      where the OTP is requested.

      - Enters default OTP and successfully
      logs in to the application.
    recommendation: >
      Remove the OTP mock so that you can
      only login to the application with the
      OTP sent to the email.
    threat: >
      Unauthorized user with access to the application.
  es:
    title: Insecure service configuration - OTP
    description: >
      El mock de OTP aún se encuentra
      activado en la aplicación.
    impact: >
      - Atacante con información de un usuario
      de la aplicación llega hasta el punto que
      se solicita el OTP.

      - Ingresar OTP por defecto e ingresar
      exitosamente a la aplicación.
    recommendation: >
      Eliminar el mock de OTP para así solo
      poder ingresar a la aplicación con el
      OTP enviado al correo electrónico.
    threat: >
      Usuario no autorizado con acceso a
      la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The OTP service is insecurely configured to allow default access
      ```javascript
      const otpGenerator = require('otp-generator');
      const { OTP_LENGTH, OTP_CONFIG } = require('../constants/constants');
      //The code still contains the default OTP used during development
      module.exports.generateOTP = () => {
        const OTP = "OneTimeValue";
        return OTP;
      };

      OTP_CONFIG: {
        upperCaseAlphabets: true,
        specialChars: false,
      },
      ```
    compliant: |
      The OTP service is securely configured, verifying the uniqueness of the code generated
      ```javascript
      const otpGenerator = require('otp-generator');
      const { OTP_LENGTH, OTP_CONFIG } = require('../constants/constants');
      //Implement a secure version of the OTP generator
      module.exports.generateOTP = () => {
        const OTP = otpGenerator.generate(OTP_LENGTH, OTP_CONFIG);
        return OTP;
      };

      OTP_CONFIG: {
        upperCaseAlphabets: true,
        specialChars: false,
      },
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['139','266']
  metadata:
    en:
      details: __empty__
'295':
  en:
    title: Insecure session management - Change Password
    description: >
      After a password change the
      session remains open.
    impact: >
      Keep the control of an account
      whose session has been compromised.
    recommendation: >
      The open session must be closed
      after a password change process.
    threat: >
      Unauthorized user from the Internet
      with access to a users session.
  es:
    title: Insecure session management - Change Password
    description: >
      Luego de un cambio de contraseña
      la sesión continúa abierta.
    impact: >
      Conservar el control de una cuenta
      cuya sesión ha sido comprometida.
    recommendation: >
      La sesión abierta se debe cerrar luego
      de un proceso de cambio de contraseña.
    threat: >
      Usuario no autorizado desde Internet
      con acceso a la sesión de un usuario.
  category: Access Subversion
  examples:
    non_compliant: |
      After a password change, the application does not delete existing user sessions
      ```javascript
      app.get('/passwordChange',(req,res) => {
        const userCredentials = req.body.userCredentials;
        const sessionToken = req.body.token;
        if(isValidPassword(userCredentials)){
          //Code to handle password change without deleting existing session
          changeUserPassword(userCredentials);
          res.redirect('/userProfile');
        }
      });
      ```
    compliant: |
      The server deletes all existing sessions after a password change
      ```javascript
      app.get('/login',(req,res) => {
        const userCredentials = req.body.userCredentials;
        const sessionToken = req.body.token;
        if(isValidLogin(userCredentials)){
          req.session.destroy();
          sendUserNotice(userCredentials.userId);
          changeUserPassword(userCredentials);
          res.redirect('/profile');
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['141']
  metadata:
    en:
      details: __empty__
'296':
  en:
    title: Weak credential policy - Password Change Limit
    description: >
      The application does not limit the
      number of password change requests
      that can be made in a day.
    impact: >
      Change the password multiple times in
      a short period of time, denying access
      to the original user.
    recommendation: >
      Implement a mechanism that rejects
      multiple password change requests
      on the same day.
    threat: >
      Internet user with access to the session.
  es:
    title: Weak credential policy - Password Change Limit
    description: >
      La aplicación no limita la cantidad de
      peticiones de cambio de contraseña que
      se pueden realizar en un día.
    impact: >
      Cambiar la contraseña múltiples veces
      en un periodo corto de tiempo, denegando
      el acceso al usuario original.
    recommendation: >
      Implementar un mecanismo que rechace
      múltiples peticiones de cambio de
      contraseña el mismo día.
    threat: >
      Usuario desde Internet con acceso a la sesión.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      The application allows multiple password changes without establishing time out limits
      ```javascript
      const changePassword = (req, res) => {
        if (!isConfirmedUser(req.body.user)) {
          //Change password without checking limit requests
          const hashed_password = hashPassword(req.body.newPassword);
          updateUser(req.body.user, {password: hashed_password});
          res.redirect('/profile/');
        }
      }
      ```
    compliant: |
      The application sets a limit on the number of change password attempts
      ```javascript
      const changePassword = (req, res) => {
        if (!isConfirmedUser(req.body.user)) {
          const user = req.body.user;
          const passTimeStamp = user.password.timestamp;
          if(passTimeStamp <= MinLimit){
            return res("Unable to change password");
          }
          //Change password after checking limit
          const hashed_password = hashPassword(req.body.newPassword);
          updateUser(req.body.user, {password: hashed_password});
          res.redirect('/profile/');
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['130', '132', '133', '139', '332']
  metadata:
    en:
      details: __empty__
'297':
  en:
    title: SQL injection - Code
    description: >
      Dynamic SQL statements are generated without
      the required data validation and without using
      parameterized statements or stored procedures.
    impact: >
      Inject SQL statements with the possibility of
      obtain information about the database, as
      well as extracting information from it.
    recommendation: >
      Perform database queries by means of parameterized
      statements or stored procedures.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: SQL injection - Code
    description: >
      Se generan sentencias SQL dinámicas sin la
      validación requerida de datos y sin utilizar
      sentencias parametrizadas o procedimientos
      almacenados.
    impact: >
      Inyectar sentencias SQL con la posibilidad de obtener
      información sobre la base de datos, así como extraer
      información de la misma.
    recommendation: >
      Realizar las consultas a la base de datos por medio
      de sentencias parametrizadas o procedimientos almacenados.
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are unvalidated SQL queries that use input data
      ```java
      static void getQuery(sql) {
        try {
        java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();

        // Updating db model without filtering user inpu
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
    compliant: |
      The SQL queries are used by parameterized queries using sanitized user data
      ```java
      static void getQuery(param) {
        param = java.net.URLDecoder.decode(param, ""UTF-8"");
        //Clean User parameters
        cleanParam = getCleanValue(param)
        //Do Query with a standard sentence
        String sql = ""INSERT INTO users (username, password) VALUES ('foo','""+ cleanParam + ""')"";

        try {
          java.sql.Statement statement = org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement();
          org.owasp.benchmark.helpers.DatabaseHelper.outputUpdateComplete(sql, response);
        } catch (java.sql.SQLException e) {
          ...
        );
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['169', '173']
  metadata:
    en:
      details: __empty__
'298':
  en:
    title: Authentication mechanism absence or evasion - Redirect
    description: >
      An attacker can gain access to the application
      by knowing a valid username by changing the
      redirect with which the server responds.
    impact: >
      - Bypass the authentication process by
      changing the page redirection and thus
      gain access to the applications
      functionality.

      - Know a valid user.

      - Change the redirect and
      access the application.
    recommendation: >
      Put in place for every resource with
      business-critical functionality a strong
      authentication process and ensure that
      every user attempting to access it is
      logged in.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Authentication mechanism absence or evasion - Redirect
    description: >
      Un atacante puede ganar acceso a la aplicación
      conociendo un nombre de usuario válido cambiando
      la redirección con la que responde el servidor.
    impact: >
      - Evitar el proceso de autenticación cambiando la
      redirección de la página y así lograr acceder a
      las funcionalidades de la aplicación.

      - Conocer un usuario válido.

      - Cambiar la redirección
      y acceder a la aplicación.
    recommendation: >
      Poner para todo recurso con una funcionalidad
      crítica para el negocio un proceso de autenticación
      fuerte y asegurarse de que cada usuario que
      intente acceder tenga una sesión iniciada.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application allows to redirect the user to a private page without checking the authorization
      ```javascript
      const accessCredentials = (req, res) => {
        if (isValidUser(req.body.user)) {
          res.redirect('/profile/credentials');
        }
      }
      ```
    compliant: |
      The application checks user credentials before accessing sensitive resources
      ```javascript
      const accessCredentials = (req, res) => {
        //Redirect the user to sensitive page only if it has access
        if (isValidUser(req.body.user) && isAuthorizedUser(req.body.user)) {
          res.redirect('/profile/credentials');
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '323']
  metadata:
    en:
      details: __empty__
'299':
  en:
    title: Authentication mechanism absence or evasion - JFROG
    description: >
      The application functions are
      accessed without the need to be
      logged into the server.
    impact: >
      - Access Artifactory repositories.

      - Upload files to any repository
      without authorization.

      - Delete files from any repository
      without authentication.
    recommendation: >
      Protect resources that are not authenticated for access.
    threat: >
      Anonymous attacker from intranet.
  es:
    title: Authentication mechanism absence or evasion - JFROG
    description: >
      Las funciones de la aplicación son
      accedidas sin necesidad de tener una
      sesión iniciada en el servidor.
    impact: >
      - Acceder a los repositorios de Artifactory.

      - Cargar archivos en algún repositorio
      sin autorización.

      - Eliminar archivos en algún repositorio
      sin autenticación.
    recommendation: >
      Proteger los recursos a los cuales no se
      les tiene una autenticación para ser accedidos.
    threat: >
      Atacante anónimo desde intranet.
  category: Access Subversion
  examples:
    non_compliant: |
      The JFrog service has a default access configuration to edit
      ```yaml
      artifactoryConfiguration:
        docker-local:
          type: docker
          password: "*"
          permissions: edit, upload
      ```
    compliant: |
      The JFrog service only has read access to unauthorized users
      ```yaml
      artifactoryConfiguration:
        docker-local:
          type: docker
          password: "*"
          permissions: read
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '323']
  metadata:
    en:
      details: __empty__
'300':
  en:
    title: Authentication mechanism absence or evasion - Azure
    description: >
      The system has flaws over authentication mechanisms or
      had been configured with one that can be bypassed.
    impact: >
      - Allow organizations to be vulnerable
      to stealthy brute-force attacks.

      - Allow fraudulent attempts on access
      users accounts.
    recommendation: >
      - Force users to register multiple authentication methods.

      - Enable Azure Fraud alert to empower users to proactively
      report attempts of someone trying to use their account.

      - Set account lockout thresholds notifications.
    threat: >
      Anonymous attacker with credentials access from the Internet.
  es:
    title: Authentication mechanism absence or evasion - Azure
    description: >
      El sistema tiene fallos sobre los mecanismos de autenticación
      o ha sido configurado con uno que puede ser eludido.
    impact: >
      - Permitir que las organizaciones sean
      vulnerables a ataques sigilosos de fuerza bruta.

      - Permitir intentos fraudulentos de
      acceso a las cuentas de los usuarios.
    recommendation: >
      - Exigir a los usuarios que registren varios métodos
      de autenticación.

      - Habilitar la alerta de fraude de Azure para que los
      usuarios puedan informar proactivamente de los intentos
      de alguien que intenta utilizar su cuenta.

      - Establecer notificaciones de umbrales de bloqueo de cuentas.
    threat: >
      Atacante anónimo con accesso a credenciales desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The authentication mechanism of the azure resource can be bypassed due to a wrong configuration
      ```terraform
      resource "azurerm_app_service" "vulnerable" {
        name                = "example-app-service"
        location            = azurerm_resource_group.example.location
        resource_group_name = azurerm_resource_group.example.name
        app_service_plan_id = azurerm_app_service_plan.example.id
        https_only          = true
        client_cert_enabled = false
        logs {
          failed_request_tracing_enabled  = true
          detailed_error_messages_enabled = true
        }
        auth_settings {
          enabled = true
        }
      }
      ```
      The resource does not have authentication settings enabled
      ```terraform
      resource "azurerm_function_app" "vulnerable" {
        name                       = "test-azure-functions"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        app_service_plan_id        = azurerm_app_service_plan.example.id
        storage_account_name       = azurerm_storage_account.example.name
        storage_account_access_key = azurerm_storage_account.example.primary_access_key
        https_only                 = true
        os_type                    = "linux"
        version                    = "~3"
      }
      ```
    compliant: |
      The azure resources have secure authentication mechanisms configured
      ```terraform
      resource "azurerm_app_service" "not_vulnerable" {
        name                = "example-app-service"
        location            = azurerm_resource_group.example.location
        resource_group_name = azurerm_resource_group.example.name
        app_service_plan_id = azurerm_app_service_plan.example.id
        https_only          = true
        client_cert_enabled = true
        logs {
          failed_request_tracing_enabled  = true
          detailed_error_messages_enabled = true
        }
        auth_settings {
          enabled = true
        }
      }
      ```
      ```terraform
      resource "azurerm_function_app" "not_vulnerable" {
        name                       = "test-azure-functions"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        app_service_plan_id        = azurerm_app_service_plan.example.id
        storage_account_name       = azurerm_storage_account.example.name
        storage_account_access_key = azurerm_storage_account.example.primary_access_key
        https_only                 = true
        os_type                    = "linux"
        version                    = "~3"
        auth_settings {
          enabled = true
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['227', '228', '229', '231', '235', '264', '323']
  metadata:
    en:
      details: __empty__
'301':
  en:
    title: Concurrent sessions control bypass
    description: >
      It is possible to bypass concurrent
      session control by going to any valid
      URL in the application when the error
      that there is already a session started appears.
    impact: >
      Access concurrently to the application with
      the same user causing loss of traceability.
    recommendation: >
      Immediately invalidate previous session
      when logging in from a new location.
    threat: >
      Malicious actor from intranet.
  es:
    title: Concurrent sessions control bypass
    description: >
      Es posible saltarse el control de sesiones
      concurrentes yendo a cualquier URL válida
      de la aplicación al aparecer el error de
      que ya hay una sesión iniciada.
    impact: >
      Acceder concurrentemente a la aplicación con
      un mismo usuario ocasionando pérdida de trazabilidad.
    recommendation: >
      Invalidar inmediatamente sesión anterior
      al loguearse desde una nueva ubicación.
    threat: >
      Actor malicioso desde intranet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not verify if the user already has a session opened before signing in
      ```javascript
      const accessProfile = (req, res) => {
        if(isValidCredentials(req.body.user, req.body.password)){
          //Make request without validating if user is logging in from another location
          goToProfileInfo(user.username, user.token);
        }
      }
      ```
    compliant: |
      The application verifies the user token before accessing sensitive information
      ```javascript
      const accessProfile = (req, res) => {
        const user = req.body.userId;
        if user.token === req.body.token {
          ...code to handle login
          res.redirect("/profile")
        }else if(isValidCredentials(user, req.body.password)){
          //Expire current session if the user is logging from another location
          deleteToken(user);
          ...code to handle login
          res.redirect("/profile")
        }else{
          ...code to handle wrong credentials or non existing user
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['025']
  metadata:
    en:
      details: __empty__
'302':
  en:
    title: Insecure functionality - Session management
    description: >
      It is possible to modify the expiration
      time of an expired session token, making
      it possible to make the token functional
      again and continue to query the application.
    impact: >
      Perform queries to the application
      with an expired Token(JWT).
    recommendation: >
      Once session tokens have expired, they
      should not be reused in future requests.
    threat: >
      Attacker from the Internet with a session token.
  es:
    title: Insecure functionality - Session management
    description: >
      Es posible modificar el tiempo de
      expiración de un Token de sesión
      caducado, haciendo posible que el
      Token vuelva a ser funcional y poder
      continuar haciendo consultas a la aplicación.
    impact: >
      Realizar consultas a la aplicación
      con un Token(JWT) expirado.
    recommendation: >
      Una vez los Token de sesión hallan
      expirado, estos no deberían poderse
      reutilizar en futuras peticiones.
    threat: >
      Atacante desde Internet con un token de sesión.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not verify if the user token has expired
      ```javascript
      const accessProfiles = (req, res) => {
        //Redirecting only with a valid username
        if(isValidUser(req.body.user)){
          const user = req.body.user;
          //Make request without validating if user token has expired
          goToProfileInfo(user.username, user.token);
        }
      }
      ```
    compliant: |
      The application verifies the user token before accessing sensitive information
      ```javascript
      const accessProfiles = (req, res) => {
        const user = req.body.user;
        const token = req.body.token
        if(isuserAuth(user, token)){
          //Make request after validating user token
          goToProfileInfo(user.username, user.token);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'304':
  en:
    title: Inappropriate coding practices - Performance
    description: >
      Within the code there are unsafe statements using
      a lot of machine resources, which affects the
      performance and response time of the application.
      Early Java API classes, such as Vector,
      Hashtable and StringBuffer, were synchronized
      to make them thread-safe.
      Unfortunately, synchronization has a major negative
      impact on performance, even when using these
      collections from a single thread.
    impact: >
      Make requests to the system that
      may affect process performance and response
      times, since the system does not make use of
      the most optimal components and libraries.
    recommendation: >
      Use the libraries that allow to execute the
      functions of concatenation and storage in
      collections in an optimized way (ArrayList
      and StringBuilder or SyncronizedList).
    threat: >
      Anonymous user with access to the application.
  es:
    title: Inappropriate coding practices - Performance
    description: >
      Dentro del código existen sentencias inseguras
      usando muchos recursos de la máquina, lo cual
      afecta el rendimiento y el tiempo de respuesta
      de la aplicación.
      Las primeras clases de la API de Java, como
      Vector, Hashtable y StringBuffer, se sincronizaron
      para hacerlas seguras para subprocesos.
      Desafortunadamente, la sincronización tiene un
      gran impacto negativo en el rendimiento, incluso
      cuando se usan estas colecciones desde un solo hilo.
    impact: >
      Realizar peticiones al sistema
      que puedan afectar el desempeño de procesos y
      tiempos de respuesta, ya que el sistema no hace
      uso de los componentes y librerías más óptimos.
    recommendation: >
      Utilizar las librerías que permiten ejecutar
      las funciones de concatenado y almacenamiento
      en colecciones de manera optimizada (ArrayList
      y StringBuilder o SyncronizedList).
    threat: >
      Usuario anónimo con acceso a la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application uses an ineficcient method to store user posts that could consume many computer resources
      ```java
      class Main {
        public static void main(User user) {
          StringBuffer str = new StringBuffer(user.posts);
          str.append(user.newPost);
        }
      }
      ```
    compliant: |
      The application uses efficient methods to prevent consuming extra resources in the machine
      ```java
      class Main {
        public static void main(User user) {
          private userPost = new Post(user.newPost);
          user.posts.append(userPost);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['158']
  metadata:
    en:
      details: __empty__
'305':
  en:
    title: Security controls bypass or absence - Data creation
    description: >
      It is possible to bypass the restriction that
      only allows the creation of four beneficiaries
      when generating a policy, allowing the generation
      of multiple beneficiaries associated to a request,
      affecting the integrity of the data sent.
    impact: >
      Associate multiple users without restriction.
    recommendation: >
      Validate on the server side the types of data
      that are entered into different types of
      fields in the application.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Security controls bypass or absence - Data creation
    description: >
      Es posible saltar la restricción que solo permite
      crear cuatro beneficiarios cuando se esta generando
      una póliza, permitiendo generar múltiples beneficiarios
      asociados a una solicitud, afectando la integridad
      de los datos enviados.
    impact: >
      Asociar múltiples usuarios sin restricción.
    recommendation: >
      Validar en el lado del servidor los tipos
      de datos que se ingresan a distintos tipos
      de campos en la aplicación.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There is unvalidated/unsanitized input data being handled by the application
      ```javascript
      const addBeneficiaries = (req, res) => {
        if (isValidUser(req.body.user) && length(req.body.newBeneficiariesAmount) < 4) {
          //Unchecked server side data added to the user model
          const beneficiaries = req.body.beneficiaries;
          addNewBeneficiaries(beneficiaries);
        }else{
          res.message("Unable to add beneficiaries, verify the limitations and requirements");
        }
      }
      ```
    compliant: |
      All user input is correctly validated before being handled by the application
      ```javascript
      const addBeneficiaries = (req, res) => {
        if (isValidUser(req.body.user) && length(req.body.newBeneficiariesAmount) < 4) {
          //Check data on the server side
          const beneficiaries = req.body.beneficiaries;
          const areBeneficiariesValid = verifyBeneficiaries(beneficiaries);
          if areBeneficiariesvalid{
            addNewBeneficiaries(beneficiaries);
          }
        }else{
          res.message("Unable to add beneficiaries, verify the limitations and requirements");
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: R
  requirements: ['062', '266']
  metadata:
    en:
      details: __empty__
'306':
  en:
    title: Insecure object reference - Files
    description: >
      An unauthorized user can access or
      manipulate information of other users
      just by knowing the identifier that
      differentiates them, since the application
      does not validate the necessary permissions to access.
    impact: >
      Access or manipulate the victims account
      information by knowing a victims user ID.
    recommendation: >
      Verify that the user who is trying to
      access the information has the necessary
      permissions to access.
    threat: >
      Unauthorized user from local network.
  es:
    title: Insecure object reference - Files
    description: >
      Un usuario no autorizado puede acceder
      o manipular información de otros usuarios
      solo con conocer el identificador que los
      diferencia, ya que el aplicativo no valida
      los permisos necesarios para acceder.
    impact: >
      Acceder o manipular la información de la
      cuenta de las víctimas al conocer el user ID.
    recommendation: >
      Verificar que el usuario que está intentando
      acceder a la información efectivamente tenga
      los permisos necesarios para acceder.
    threat: >
      Usuario no autorizado desde red local.
  category: Access Subversion
  examples:
    non_compliant: |
      The application only checks userId before allowing access to sensitive information
      ```javascript
      const accessFile = (req, res) => {
        if (isValidUser(req.body.user)) {
          const File = req.body.file;
          //Accessing File only with the id number
          if filesModel.find(File.id){
            //Code that allows access to the user to access the File
          }
        }
      }
      ```
    compliant: |
      The application verifies user credentials before accessing sensitive information
      ```javascript
      const accessfile = (req, res) => {
        if (isValidUser(req.body.user)) {
          const file = req.body.File;
          if FilesModel.find(file.id){
            const isAccessgranted = verifyUserAccess(file, req.body.id)
            if isAccessgranted{
              //Code that allows access to the user to edit the File only if the user has access
            }
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'307':
  en:
    title: Insecure object reference - Data
    description: >
      It is possible to access information about
      other stores, obtain members registered in
      other stores, modify members and add members
      from other stores that a user has not been
      assigned to just by knowing the identifier
      that differentiates them, since the application
      does not validate the necessary permissions to access.
    impact: >
      - Obtain membership information from other stores.

      - Add members to other stores.

      - Modify partners to other stores.

      - Unsubscribe a partner.
    recommendation: >
      Verify that the user who is trying to access the
      information has the necessary permissions to do so.
    threat: >
      User authenticated from the Internet.
  es:
    title: Insecure object reference - Data
    description: >
      Es posible acceder información acerca de otras
      tiendas, obtener socios inscritos en otras tiendas,
      modificar socios y agregar socios de otras tiendas
      que un usuario no tiene asignado solo con conocer
      el identificador que los diferencia, ya que el
      aplicativo no valida los permisos necesarios para acceder.
    impact: >
      - Obtener información de socios de otras tiendas.

      - Agregar socios a otras tiendas.

      - Modificar socios a otras tiendas.

      - Desuscribir un socio.
    recommendation: >
      Verificar que el usuario que está intentando
      acceder a la información efectivamente tenga
      los permisos necesarios para hacerlo.
    threat: >
      Usuario autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application only checks userId before allowing access to sensitive information
      ```javascript
      const accessStore = (req, res) => {
        if (isValidUser(req.body.user)) {
          const store = req.body.store;
          //Accessing store only with the id number
          if storesModel.find(store.id){
            //Code that allows access to the user to edit the store
          }
        }
      }
      ```
    compliant: |
      The application verifies user credentials before accessing sensitive information
      ```javascript
      const accessStore = (req, res) => {
        if (isValidUser(req.body.user)) {
          const store = req.body.store;
          if storesModel.find(store.id){
            const isAccessgranted = verifyUserAccess(store, req.body.id)
            if isAccessgranted{
              //Code that allows access to the user to edit the store
            }
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'308':
  en:
    title: Enabled default configuration
    description: >
      The servers default page is enabled,
      which allows an attacker to access it
      and obtain relevant technical information
      about the server.
    impact: >
      Obtain technical information from the application
      that can be used to augment the attack vector.
    recommendation: >
      Disable or modify the servers default
      page in such a way that no information
      can be obtained from it.
    threat: >
      Anonymous attacker from Internet.
  es:
    title: Enabled default configuration
    description: >
      La página por defecto del servidor está
      activada, lo que le permite a un atacante
      ingresar a ella y obtener información
      técnica relevante sobre el servidor.
    impact: >
      Obtener información técnica de la
      aplicación que puede ser usada para
      incrementar el vector de ataque.
    recommendation: >
      Deshabilitar o modificar la página default
      del servidor de tal manera que no se pueda
      obtener ninguna información de ella.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The server configuration for the default index pages is activated
      ```yaml
      # Alternate default index pages
      DirectoryIndex first.html index.htm index.html sensitiveFile.php
      ```
    compliant: |
      The server configuration does not allow sensitive information in the default index pages
      ```yaml
      # Alternate default index pages
      DirectoryIndex first.html index.htm index.html
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'309':
  en:
    title: Insecurely generated token - JWT
    description: >
      The token used to consume the user
      creation service in the application
      is not generated securely, because the
      key that signs the token is weak and was
      easily found as indicated in the finding
      of weak credentials.
      For this reason, an attacker can modify
      token parameters such as the expiration
      date to consume the service, and perform
      queries in the application.
    impact: >
      Use the user creation service within the
      application with a token signed by an
      attacker in a legitimate way.
    recommendation: >
      Use strong passwords for signing and
      verification of the user creation token.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecurely generated token - JWT
    description: >
      El token utilizado para consumir el servicio
      de creación de usuarios en la aplicación no se
      genera de forma segura, debido a que la llave
      que firma el token es débil y fue encontrada
      fácilmente como se indica en el hallazgo de
      credenciales débiles.
      Por tal motivo, un atacante puede modificar
      parámetros del token como la fecha de expiración
      para consumir el servicio, y realizar consultas
      en la aplicación.
    impact: >
      Utilizar el servicio de creación de usuarios
      dentro de la aplicación con un tokens firmados
      por un atacante de forma legítima.
    recommendation: >
      Usar contraseñas seguras para realizar la firma
      y verificación del token de creación de usuarios.
    threat: >
      Atacante anónimo desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The application creates a token signature with an insecure algorithm
      ```javascript
      const token = jwt.sign({ username }, jwtKey, {
        algorithm: "RC128",
        expiresIn: jwtExpirySeconds,
      })
      ```
    compliant: |
      The application creates token signature with a secure encryption method
      ```javascript
      const token = jwt.sign({ username }, jwtKey, {
        algorithm: "HS256",
        expiresIn: jwtExpirySeconds,
      })
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['228']
  metadata:
    en:
      details: __empty__
'310':
  en:
    title: Unauthorized access to screen
    description: >
      An advisor, through the GLIA application,
      should not have access to client information.
      However, the advisor can obtain different
      client data (without the client being aware
      of it), simply by logging into the user
      window and following the flow that the user
      goes through when opening an account.
    impact: >
      Obtain confidential information from
      users without their approval.
    recommendation: >
      User information should not be exposed
      to a third party in any part of the
      account opening flow.
    threat: >
      Attacker from the Internet with
      access to GLIA application.
  es:
    title: Unauthorized access to screen
    description: >
      Un asesor, a través de la aplicación
      GLIA, no debería tener acceso a la
      información del cliente.
      No obstante, el asesor puede obtener diferentes
      datos del cliente (sin que este se percate),
      simplemente ingresando a la ventana del usuario
      y siguiendo el flujo que este va realizando al
      momento de abrir una cuenta.
    impact: >
      Obtener información confidencial de los
      usuarios sin que estos hayan dado su
      aprobación para ello.
    recommendation: >
      La información del usuario no debe ser
      expuesta a un tercero en ninguna parte
      del flujo de apertura de cuenta.
    threat: >
      Atacante desde Internet con acceso a
      la aplicación de GLIA.
  category: Access Subversion
  examples:
    non_compliant: |
      The application shows user sensitive information in the registration process without using some form of secure id validation
    compliant: |
      User sensitive information is only accesible to an identifiable authorized user
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['264']
  metadata:
    en:
      details: __empty__
'311':
  en:
    title: Unrestricted access between network segments - JSch
    description: >
      The JSch StrictHostKeyChecking configuration
      is set to NO, this indicates that connections
      can be made to unknown servers or servers that
      have changed their keys, generating new ones
      and adding them by default to the known server files.
    impact: >
      - Initiate connections to untrusted servers.

      - Increase the possibility of attacks
      such as MitM and spoofing.

      - Receive or send malicious data or files.

      - Leak sensitive information such as
      users and passwords.
    recommendation: >
      - Limit access to administrative services such as SSH.

      - Implement safe values for the StricktHostKeyChecking
      configuration in JSch.
    threat: >
      Unauthorized external attacker.
  es:
    title: Unrestricted access between network segments - JSch
    description: >
      La configuración de JSch StrictHostKeyChecking
      está configurado con el valor NO, esto indica
      que se podrán realizar conexiones con servidores
      desconocidos o que hayan cambiado sus llaves,
      generando nuevas  y añadiendolas por defecto
      a los archivos de servidores conocidos.
    impact: >
      - Iniciar conexiones con servidores no confiables.

      - Incrementar la posibilidad de ataques
      como MitM y spoofing.

      - Recibir o enviar  data o archivos maliciosos.

      - Filtrar información sensible como usuarios y contraseñas.
    recommendation: >
      - Limitar los accesos a servicios administrativos como SSH.

      - Implementar valores seguros para la configuración
      StricktHostKeyChecking en JSch.
    threat: >
      Atacante externo no autorizado.
  category: Access Subversion
  examples:
    non_compliant: |
      The JSch has the StrictHostKeyChecking disabled
      ```java
      java.util.Properties config = new java.util.Properties();
      config.put("StrictHostKeyChecking", "no");
      session.setConfig(config);
      ```
    compliant: |
      The JSch has enabled StrictHostKeyChecking
      ```java
      java.util.Properties config = new java.util.Properties();
      config.put("StrictHostKeyChecking", "yes");
      session.setConfig(config);
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'312':
  en:
    title: Insecure service configuration - Signatures
    description: >
      The application is signed with a V1
      signing scheme, which makes it vulnerable
      to the Janus vulnerability in Android.
    impact: >
      Precede a malicious DEX file to an APK
      file, without affecting its signature.
    recommendation: >
      Securely configure the vulnerable service
      so that it can only be accessed by authorized users.
    threat: >
      Unauthorized attacker from the Internet.
  es:
    title: Insecure service configuration - Signatures
    description: >
      La aplicación está firmada con un esquema
      de firma V1, lo que la hace vulnerable a
      la vulnerabilidad de Janus en Android.
    impact: >
      Anteponer un archivo DEX malicioso a un
      archivo APK, sin afectar su firma.
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sea
      accedido por usuarios autorizados.
    threat: >
      Atacante sin autorización desde internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has the V1 signature enabled
      ```yaml
      APKSigner:
        V1_SIGNATURE: true
        V2_SIGNATURE: false
      ```
    compliant: |
      The application uses a secure signature
      ```yaml
      APKSigner:
        V1_SIGNATURE: false
        V2_SIGNATURE: true
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'313':
  en:
    title: Insecure service configuration - Certificates
    description: >
      Due to a misconfiguration of X.509 certificates,
      the application can accept invalid certificates,
      making it possible to carry out Man in The
      Middle attacks.
    impact: >
      Execute Man-in-the-middle attacks.
    recommendation: >
      Throw typed exceptions in case of
      detection of invalid certificates.
    threat: >
      Atacante sin autorización desde intranet.
  es:
    title: Insecure service configuration - Certificates
    description: >
      Debido a una mala configuracion de los
      certificados X.509 la aplicación permite
      aceptar certificados inválidos, con lo
      cual es posible materializar ataques
      de Man in The Middle.
    impact: >
      Ejecutar ataques Man-in-the-middle.
    recommendation: >
      Arrojar excepciones typeadas en caso de
      detectar certificados inválidos.
    threat: >
      Atacante sin autorización desde intranet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application manifest misconfigures the allowed certificates
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:compileSdkVersion="17" android:compileSdkVersionCodename="20" minSdkVersion="17" android:installLocation="internalOnly" package="com.example" platformBuildVersionCode="31" platformBuildVersionName="12">
      ```
    compliant: |
      The application manifest is safely configured
      ```json
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:compileSdkVersion="31" android:compileSdkVersionCodename="2" minSdkVersion="25" android:installLocation="internalOnly" package="com.example" platformBuildVersionCode="31" platformBuildVersionName="12">
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'314':
  en:
    title: Insecure service configuration - DB
    description: >
      The database server has insecure configurations.
    impact: >
      Access the database and exploit
      vulnerabilities in the system
      configuration to affect the service.
    recommendation: >
      Correctly configure the MySQL server.
    threat: >
      Internet user with credentials.
  es:
    title: Insecure service configuration - DB
    description: >
      El servidor de base de datos cuenta
      con configuraciones inseguras.
    impact: >
      Acceder a la base de datos y aprovechar
      las vulnerabilidades en la configuración
      del sistema para afectar el servicio.
    recommendation: >
      Configurar correctamente el servidor MySQL.
    threat: >
      Usuario de Internet con credenciales.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The db server allows editing permissions for unauthorized users
      ```yaml
      version: "3.9"
      services:
        web:
          build: .
          ports:
            - "8000:80"
          depends_on:
            - db
        db:
          image: "/mssql/server"
          environment:
            SA_PASSWORD: "Your_password123"
            ACCEPT_EULA: "Y"
          group_permissions
            AllowEdit: all
      ```
    compliant: |
      The db server restricts access only to authorized users
      ```yaml
      version: "3.9"
      services:
        web:
          build: .
          ports:
            - "8000:80"
          depends_on:
            - db
        db:
          image: "/mssql/server"
          environment:
            SA_PASSWORD: "Your_password123"
            ACCEPT_EULA: "Y"
          group_permissions
            AllowEdit: admin
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'315':
  en:
    title: Insecure service configuration - CloudDB
    description: >
      Sensitive information stored in the source code.
      It is determined that non-JSON Apache Lucene
      queries are enabled on the Cloudant database server.
    impact: >
      Obtain information from the logs in the database,
      which in turn contain sensitive user data.
    recommendation: >
      - Securely configure the vulnerable service so
      that it can only be accessed by authorized users.

      - Disable queries via Query Parser.
    threat: >
      Authorized attacker using the credentials stored
      in the source code from the Internet.
  es:
    title: Insecure service configuration - CloudDB
    description: >
      Información sensible almacenada en
      el código fuente.
      Se logra determinar que las consultas Apache
      Lucene no-JSON están habilitadas en el servidor
      de base de datos de Cloudant.
    impact: >
      Obtener información de los logs en la base de
      datos, que a su vez contienen datos sensibles
      del usuario.
    recommendation: >
      - Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sea
      accedido por usuarios autorizados.

      - Deshabilitar las consultas vía Query Parser.
    threat: >
      Atacante autorizado usando las credenciales
      que yacen en el código fuente desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The search cloud service is not securely restricted
      ```json
      "indexes": {
        "search-cloud": {
          "analyzer": "all",
          "index": "function: any"
        }
      }
      ```
    compliant: |
      The search cloud service is restricted based on certain parameters
      ```json
      "indexes": {
        "search-cloud": {
          "analyzer": "standard",
          "index": "function(doc) { index(\"keyword\", doc.name); }"
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'316':
  en:
    title: Improper resource allocation - Buffer overflow
    description: >
      Within the code there are unsafe statements
      that can affect the performance and response
      time of the application.
      See https://rules.sonarsource.com/java/RSPEC-1149?search=stringbuffer
      for more information.
    impact: >
      Affect application performance.
    recommendation: >
      Use the libraries that allow to execute the
      functions of concatenation and storage in
      collections in an optimized way (ArrayList
      and StringBuilder or SyncronizedList).
    threat: >
      Attacker with access to the application.
  es:
    title: Improper resource allocation - Buffer overflow
    description: >
      Dentro del código existen sentencias inseguras
      que pueden afectar el rendimiento y el tiempo
      de respuesta de la aplicación.
      Ver https://rules.sonarsource.com/java/RSPEC-1149?search=stringbuffer
      para más información.
    impact: >
      Afectar el rendimiento de la aplicación.
    recommendation: >
      Utilizar las librerías que permiten ejecutar las
      funciones de concatenado y almacenamiento en
      colecciones de manera optimizada (ArrayList y
      StringBuilder o SyncronizedList).
    threat: >
      Atacante con acceso a la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has unsafe methods that could affect application performance
      ```java
      class Main {
        public static void main(User user) {
          //Ineficcient method to store user posts that could consume many computer resources
          StringBuffer str = new StringBuffer(user.posts);
          str.append(user.newPost);
        }
      }
      ```
    compliant: |
      The application uses safe methods that do not put application performance at risk
      ```java
      class Main {
        public static void main(User user) {
          StringBuilder str = new StringBuilder(user.posts);
          str.append(user.newPost);
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['072', '158', '164', '173']
  metadata:
    en:
      details: __empty__
'317':
  en:
    title: Improper resource allocation - Memory leak
    description: >
      The system may not be able to release
      inbound and outbound flow resources that
      have been opened, because they are not
      explicitly closed within the source code.
    impact: >
      Exhaust server resources.
    recommendation: >
      Outflows must be explicitly shut down
      immediately after use.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Improper resource allocation - Memory leak
    description: >
      Es posible que el sistema no pueda liberar
      recursos del flujo de entrada y salida que
      han sido abiertos, debido a que dentro del
      código fuente no se cierran explícitamente.
    impact: >
      Agotar recursos del servidor.
    recommendation: >
      Los flujos de salida deben cerrarse de forma
      explícita inmediatamente después de su uso.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application includes a function that leaves an opened socket
      ```python
      def createConnection(host, port, limit):
        serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        host = socket.gethostname()
        serversocket.bind((host, port))
        serversocket.listen(limit)

        while True:
          clientsocket,addr = serversocket.accept()
          msg = 'Thank you for connecting'+ "\r\n"
          clientsocket.send(msg.encode('ascii'))
        return
      ```
    compliant: |
      The outflows of the application are explicitly shut down after use
      ```python
      def createConnection(host, port, limit):
        serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        host = socket.gethostname()
        serversocket.bind((host, port))
        serversocket.listen(limit)

        while True:
          clientsocket,addr = serversocket.accept()
          msg = 'Thank you for connecting'+ "\r\n"
          clientsocket.send(msg.encode('ascii'))
          //Close resources after consuming them
          clientsocket.close()
        return
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['072', '158', '164', '173']
  metadata:
    en:
      details: __empty__
'318':
  en:
    title: Insecurely generated token - Validation
    description: >
      The system does not properly validate
      the token used for user creation.
      For this reason, it is possible to modify
      the header defining the algorithm with
      which the token is encrypted, so that
      it is not signed.
    impact: >
      Create users within the application
      with tokens that are not signed.
    recommendation: >
      Avoid validating the token by taking the
      algorithm found in the token header, since
      an attacker could modify it, so that the
      token signature is not properly validated.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecurely generated token - Validation
    description: >
      El sistema no válida adecuadamente el token
      utilizado para la creación de usuarios.
      Por tal motivo, es posible modificar la
      cabecera en la que se define el algoritmo
      con el cual se cifra el token, para que
      de esta manera no se firme.
    impact: >
      Crear usuarios dentro de la aplicación con
      tokens que no se encuentran firmados.
    recommendation: >
      Evitar validar el token tomando el algoritmo
      que se encuentra en la cabecera del mismo,
      ya que un atacante podria modificarla, para
      que de esta manera no se valide la firma del
      token de manera adecuada.
    threat: >
      Atacante anónimo desde internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The application does not correctly set up the signing method to generate the tokens
      ```javascript
      const accessCredentials = (req, res) => {
        const token = jwt.sign({ username }, jwtKey, {
          algorithm: req.body.algorithm,
          expiresIn: jwtExpirySeconds,
        })
      }
      ```
    compliant: |
      The application uses a safe encryption algorithm to generate the jwt signature
      ```javascript
      const accessCredentials = (req, res) => {
        const token = jwt.sign({ username }, jwtKey, {
          //Setting the encryption algorithm
          algorithm: "HS256",
          expiresIn: jwtExpirySeconds,
        })
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['228']
  metadata:
    en:
      details: __empty__
'319':
  en:
    title: Insecure service configuration - Roles
    description: >
      The definition of roles does not correctly
      represent the different aspects of responsibilities
      for the security levels of the organization.
    impact: >
      Detect authorization vulnerabilities, recognizing
      when a role can access a page that should have been
      restricted to another role.
    recommendation: >
      Verify the configured roles and be aware of
      the information that is transmitted about roles,
      accounts and logical groups in an application.
    threat: >
      Unauthorized user with access to sensitive information.
  es:
    title: Insecure service configuration - Roles
    description: >
      La definición de roles no representa correctamente
      los diferentes aspectos de responsabilidades para
      los niveles de seguridad de la organización.
    impact: >
      Detectar vulnerabilidades de autorización, reconociendo
      cuándo un rol puede acceder a una página que debería
      haber estado restringida a otro rol.
    recommendation: >
      Verificar los roles configurados y estar alerta
      a la información que se transmite sobre los roles,
      cuentas y grupos lógicos en una aplicación.
    threat: >
      Usuario no autorizado con accesso a información sensible.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has misconfigured role access credentials
      ```json
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "mydatabase:role/user"
          "mydatabase:role/admin"
        ]
      }
      ```
    compliant: |
      The application restricts access following a minimum permissions approach
      ```json
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": [
          "mydatabase:role/admin"
        ]
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: W
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'320':
  en:
    title: Insecure service configuration - LDAP
    description: >
      Internal service information should not be
      stored in the source code, especially AD
      configurations, as it is obtained from the
      admon-chanel configuration file.
    impact: >
      Use these insecure service
      configurations to gain access to the AD
      and collect all kinds of information that
      will be useful in later attacks, such as
      internal network architecture recognition
      or employee information.
    recommendation: >
      Service configurations and credentials
      must be in protected environments.
    threat: >
      Internal attacker with access to
      service configurations.
  es:
    title: Insecure service configuration - LDAP
    description: >
      Información de los servicios internos no
      deben almacenarce en el código fuente
      especialmente configuraciones del AD,
      como se obtiene de el archivo de
      configuraciones admon-chanel.
    impact: >
      Usar estas configuraciones
      inseguras de los servicios para obtener acceso
      al AD y asi recolectar todo tipo de infirmación
      que le sera util en posteriores ataques, como
      reconocimiento de la arquitectura interna de la
      red o información de empleados.
    recommendation: >
      Las configuraciones de los servicios y
      credenciales de estos deben estar en
      ambientes protegidos.
    threat: >
      Atacante interno con acceso a las
      configuraciones de servicios.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is sensitive information store as plain text
      ```c {3,7,15}
      using System;
      class cipher{
        public void Encrypt() {
          DirectoryEntry myDirectoryEntry = new DirectoryEntry(adPath);
          myDirectoryEntry.AuthenticationType = AuthenticationTypes.None;
          DirectoryEntry sndDirectoryEntry = new DirectoryEntry(adPath, "u", "p", AuthenticationTypes.None);
        }
      }
      ```
    compliant: |
      Sensitive resources do not have their credentials stored in the source code
      ```c {3,7,15}
      using System;
      class cipher{
        public void Encrypt() {
          DirectoryEntry thrdDirectoryEntry = new DirectoryEntry(adPath, "u", "p", AuthenticationTypes.Secure);
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'321':
  en:
    title: Lack of data validation - HTML code
    description: >
      Es posible inyectar código HTML válido,
      que podría interpretarse en el sitio que
      reciba el JSON de respuesta.
    impact: >
      - Insert character sequences whose semantics
      result in the creation of new HTML elements,
      log file injection, remote command execution or
      insecure file fetching.

      - Create delivery requests for non-existent QR
      codes, since the idQR field accepts text
      strings with random characters.
    recommendation: >
      Validate on the server side the types of data
      that are entered into different types of fields
      in the application.
    threat: >
      Unauthorized attacker on the Internet.
  es:
    title: Lack of data validation - HTML code
    description: >
      Es posible inyectar código HTML válido, que
      podría interpretarse en el sitio que reciba
      el JSON de respuesta.
    impact: >
      - Insertar secuencias de caracteres cuya
      semántica derive en la creación de nuevos
      elementos HTML, inyección en los archivos
      de logs, ejecución remota de comandos u
      obtención insegura de archivos.

      - Crear solicitudes de entrega para códigos
      QR inexistentes, ya que el campo idQR acepta
      cadenas de texto con caracteres aleatorios.
    recommendation: >
      Validar en el lado del servidor los tipos de
      datos que se ingresan a distintos tipos de
      campos en la aplicación.
    threat: >
      Atacante no autorizado en Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There is unvalidated input data handled by the application
      ```java
      public void doPost( HttpServletRequest request, HttpServletResponse response){
        try {
          String qrRequest = request.getParameter( "idQR" );
          // Process qr code without validating
        } catch(YourValidationException e ) {
          response.sendError( response.SC_BAD_REQUEST, e.getMessage() );
        }
      }
      ```
    compliant: |
      All input data correctly validates input data before using it
      ```java
      public void doPost( HttpServletRequest request, HttpServletResponse response){
        try {
          String qrRequest = request.getParameter( "idQR" );
          //Use a method to validate that the request is valid using whitelists or similar secure methods
          if ( isValidQR(qrRequest) ) {
            throw new YourValidationException( "Improper file" );
          }
          // Process after its been validated ..
        } catch(YourValidationException e ) {
          response.sendError( response.SC_BAD_REQUEST, e.getMessage() );
        }
      }
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '357']
  metadata:
    en:
      details: __empty__
'322':
  en:
    title: Insecurely generated token - Lifespan
    description: >
      Session tokens are generated with an
      expiration time of approximately 5 days.
    impact: >
      Leverage a session token to modify
      user information.
    recommendation: >
      Decrease the life time of the tokens.
    threat: >
      Anonymous attacker from the Internet
      with a session token.
  es:
    title: Insecurely generated token - Lifespan
    description: >
      Los token de sesión se generan con un
      tiempo de expiración aproximado de 5 días.
    impact: >
      Aprovechar un token de sesión para
      modificar información del usuario.
    recommendation: >
      Disminuir el tiempo de vida de los token.
    threat: >
      Atacante anónimo desde Internet con un Token de sesión.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The application does not define a secure limit for expiration of tokens
      ```javascript
      app.use(
        sessionToken({
          secret: "secretkey",
          token: {
            //Insecure expiration time limit
            expires: 5*24*60*60*1000
          }
        })
      );
      ```
    compliant: |
      The application sets a secure expiration time for session tokens
      ```javascript
      app.use(
        sessionToken({
          secret: "secretkey",
          token: {
            expires: 360000
          }
        })
      );
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['335', '369']
  metadata:
    en:
      details: __empty__
'323':
  en:
    title: XML injection (XXE) - Unmarshaller
    description: >
      The XML unmarshaller is not configured securely.
      It allows to read a source of XML data and bind
      its values to a new instance of an object.
    impact: >
      - Escalate attack to compromise the underlying
      server or other back-end infrastructure.

      - Allow an attacker to view files on
      the application server filesystem.

      - Interact with any back-end or external systems
      that the application itself can access.

      - Disclosure of confidential data.
    recommendation: >
      The XML unmarshaller should be configured securely
      so that it does not allow external entities as
      part of an incoming XML attack.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: XML injection (XXE) - Unmarshaller
    description: >
      El XML unmarshaller no está configurado de forma segura.
      Permite leer una fuente de datos XML y vincular sus
      valores a una nueva instancia de un objeto.
    impact: >
      - Escalar el ataque para comprometer el servidor
      subyacente u otra infraestructura back-end.

      - Permitir a un atacante ver los archivos del
      sistema de archivos del servidor de aplicaciones.

      - Interactuar con cualquier sistema back-end o externo
      al que pueda acceder la propia aplicación.

      - Revelación de datos confidenciales.
    recommendation: >
      El desmarcador XML debe configurarse de forma segura
      para que no permita entidades externas como parte
      de un ataque XML entrante.
    threat: >
      Atacante anónimo desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The XML unmarshaller displays sensitive information without validating credentials
      ```c {3,7,15}
      public class XmlToObject {
        public static void main(String[] args) {
          try {
            File file = new File(userInput);
            JAXBContext jaxbContext = JAXBContext.newInstance(User.class);
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
            User que= (User) jaxbUnmarshaller.unmarshal(file);
            //Printing credentials without validating external entries
            System.out.println(que.getId()+" "+que.getUsername());
            System.out.println("Credentials:");
            List<Credential> list=que.getCredentials();
            for(Credential ans:list)
            System.out.println(ans.getId()+" "+ans.getCredentialname()+"  "+ans.getPostedby());
          } catch (JAXBException e) {
            e.printStackTrace();
          }
        }
      }
      ```
    compliant: |
      The XML unmarshaller is securely configured to avoid displaying sensitive information
      ```c {3,7,15}
      public class XmlToObject {
        public static void main(String[] args) {
          try {
            File file = new File("user.xml");
            JAXBContext jaxbContext = JAXBContext.newInstance(User.class);
            Unmarshaller jaxbUnmarshaller = jaxbContext.createUnmarshaller();
            User que= (User) jaxbUnmarshaller.unmarshal(file);
            //Do credential treatment in a secure way, not allowing external entries
          }catch{
            ....
          }
        }
      }
      ```
  remediation_time: '120'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'324':
  en:
    title: Insecure functionality - User management
    description: >
      It is possible to assign non-users as
      treatment managers of vulnerabilities,
      this will send an email with the information
      of the vulnerabilities even if the email is
      not registered on integrates.
      Even if the user has been removed from all
      the projects of an organization, the information
      of the vulnerabilities over the time and the
      policies is still accessible by the email.
    impact: >
      - Grant the ability for unauthorized administrators
      to manage user access to different system resources.

      - Disclose sensitive information.
    recommendation: >
      Grant access to the projects only to users
      that have consented the reception of information
      from the application.
      Disable all users from the organizations if
      they should not have access to any project.
      Verify that only authorized users have access
      to information and actions on the application.
    threat: >
      Authorized external attacker
      with privileges to add users.
  es:
    title: Insecure functionality - User management
    description: >
      Es posible asignar a personas que no son
      usuarios como gestores de tratamiento de
      vulnerabilidades, esto enviará un correo
      electrónico con la información de las
      vulnerabilidades aunque el correo electrónico
      no esté registrado en integrates.
      Incluso si el usuario ha sido eliminado de todos
      los proyectos de una organización, la información
      de las vulnerabilidades en el tiempo y las políticas
      sigue siendo accesible por el correo electrónico.
    impact: >
      - Otorgar la habilidad para que los administradores
      no autorizados gestionen el acceso de los usuarios
      a los diferentes recursos del sistema.

      - Revelar información sensible.
    recommendation: >
      Permitir el acceso a los proyectos sólo a los
      usuarios que han consentido la recepción de
      información de la aplicación.
      Desactivar a todos los usuarios de las organizaciones
      si no deben tener acceso a ningún proyecto.
      Verifique que sólo los usuarios autorizados
      tienen acceso a la información y a las
      acciones en la aplicación.
    threat: >
      Atacante externo autorizado con privilegios
      para añadir usuarios.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not properly check user permissions before accesing sensitive information
      ```javascript
      const grantAccess = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            const vuln = req.body.vulnId;
            assignVulnToUser(req.body.user, vuln);
            //Code to alert user of the reassign vulnerability
          }
        }
      }
      ```
    compliant: |
      The application securely checks user authorization credentials before accesing sensitive information
      ```javascript
      const grantAccess = (req, res) => {
        const user = req.body.user;
        const vulnGroup = req.body.vulnGroup;
        const isVulnInGroup = user.vulnGroups.find(vulnGroup)
        //Only allow user to access the vulnerability if he has the relevant permissions
        if (isValidUser(req.body.user) && isVulnInGroup) {
          if (validateToken == req.body.token){
            assignVulnToUser(req.body.user, vuln);
            //Code to alert user of the reassign vulnerability
          }
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'325':
  en:
    title: Excessive privileges - Wildcards
    description: >
      - Privileges are granted with wildcard
      (*) in critical actions.

      - Many roles have unnecessary privileges
      over IAM.

      - Some write actions allow the use
      of Wildcards(*).
    impact: >
      Perform sensitive actions with
      roles that do not need it.
    recommendation: >
      Grant privileges strictly to
      the roles that need it.
    threat: >
      Internet attacker with access to the machines.
  es:
    title: Excessive privileges - Wildcards
    description: >
      - Se otorgan privilegios con wildcard
      (*) en acciones críticas.

      - Muchos roles cuentan con privilegios
      innecesarios sobre IAM.

      - Algunas acciones de escritura
      permiten el uso de Wildcards(*).
    impact: >
      Realizar acciones delicadas
      con roles que no lo necesitan.
    recommendation: >
      Otorgar privilegios estrictamente a
      los roles que lo necesitan.
    threat: >
      Atacante desde internet con acceso a las máquinas.
  category: Access Subversion
  examples:
    non_compliant: |
      Unnecesary privileges are given by the use of a wildcard "*"
      ```terraform
      data "aws_iam_policy_document" "example" {
        statement {
          sid    = "Enable IAM User Permissions"
          effect = "Allow"
          principals {
            type        = "AWS"
            identifiers = ["arn:aws:iam::${data.aws_caller_identity.current.account_id}:root"]
          }
          actions = [
            "iam:*"
          ]
          resources = [
            "*"
          ]
        }
      }
      ```
      ```terraform
      resource "aws_kms_key" "a" {
        description             = "KMS key 1"
        deletion_window_in_days = 10

        policy = <<-EOF
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Principal": {
                "AWS": "*"
              },
              "Effect": "Allow"
            }
          ]
        }
        EOF
      }
      ```
      ```yaml
      Resources:
        key1:
          Type: 'AWS::KMS::Key'
          Properties:
            Description: An example multi-Region primary key
            MultiRegion: true
            EnableKeyRotation: true
            PendingWindowInDays: 10
            KeyPolicy:
              Version: 2012-10-17
              Id: key-default-1
              Statement:
                - Sid: Enable IAM User Permissions
                  Effect: Allow
                  Principal:
                    AWS: 'arn:aws:iam::111122223333:root'
                  Action: 'kms:*'
                  Resource: '*'
                - Sid: Enable IAM User Permissions
                  Effect: Allow
                  Principal:
                    AWS: '*'
                  Action: 'kms:*'
                  Resource: '*'
      ```
      Using the AWS CLI, the following command checks if any IAM policies alow full administrative privileges
      ```
      $ aws iam get-policy-version
            --policy-arn {iam_policy_arn}
            --version-id v1
            --query 'PolicyVersion.Document'
      ```
      If the json output document includes any wildcard (*) for the **Effect, Allow, Action** or **Resource** elements, the policy is insecurely configured
    compliant: |
      Access to resources is securely configured for each security policy
      ```terraform
      data "aws_iam_policy_document" "example" {
        statement {
          sid    = "Enable IAM User Permissions"
          effect = "Allow"
          principals {
            type        = "AWS"
            identifiers = ["arn:aws:iam::${data.aws_caller_identity.current.account_id}:root"]
          }
          actions = [
            "iam:Write"
          ]
          resources = [
            "my_resource"
          ]
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: C
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: __empty__
'326':
  en:
    title: Sensitive information in source code - Dependencies
    description: >
      By reversing the application dependencies,
      it is found that the private key has been
      stored in the same dependency and not in
      a protected environment.
    impact: >
      Obtain the private key used to
      decrypt the information.
    recommendation: >
      Securely configure the vulnerable
      service so that it can only be accessed
      by authorized users.
    threat: >
      Internal attacker with access to the artifactory.
  es:
    title: Sensitive information in source code - Dependencies
    description: >
      Realizando reversing sobre las dependencias
      de la aplicación, se encuentra que la llave
      privada se ha almacenado en la misma dependencia
      y no en un ambiente protegido.
    impact: >
      Conseguir la llave privada que se usa
      para descifrar la información.
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sea
      accedido por usuarios autorizados.
    threat: >
      Atacante interno con acceso al artifactory.
  category: Information Collection
  examples:
    non_compliant: |
      The code has a dependency imported which stores sensitive credentials
      ```java
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>vulnerableDependency</groupId>
            <artifactId>vulnerableId</artifactId>
            <version>3.0</version>
            <type>pom</type>
            <scope>import</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
      ```
    compliant: |
      Verify that none of the dependencies imported on the application store sensitive data like private keys
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['145', '156', '266']
  metadata:
    en:
      details: __empty__
'327':
  en:
    title: Insufficient data authenticity validation - Images
    description: >
      The system does not validate that
      profile image URLs lead to a valid
      image, allowing partial paths or URLs
      to be placed that can be used to craft
      more complex attack vectors such as
      controlled redirects or CSRF.
    impact: >
      Manipulate the application to send
      redirects to third-party pages and load
      content from unverified sources.
    recommendation: >
      Validate that the URLs provided in the
      profile images lead to valid images.
    threat: >
      Attacker with access to the application from the Internet.
  es:
    title: Insufficient data authenticity validation - Images
    description: >
      El sistema no valida que las URLs de las
      imágenes de perfil conduzcan a una imagen
      válida, permitiendo colocar rutas parciales
      o URLs que pueden ser utilizadas para elaborar
      vectores de ataque más complejos como redirecciones
      controladas o CSRF.
    impact: >
      Manipular la aplicación para enviar redirecciones
      a páginas de terceros y cargar contenido de
      fuentes no verificadas.
    recommendation: >
      Validar que las URLs proporcionadas en las
      imágenes de perfil conduzcan a imágenes válidas.
    threat: >
      Atacante con acceso a la aplicación desde Internet.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application does not validate user input on the server side
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Updating user image without validating data on the server side
          user.profileImg = req.body.NewImg;

          res.redirect('/profile/');
        }
      });
      ```
    compliant: |
      All user input is correctly validated before being used
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Validate data before editing
          if(!isValidData(req.body.NewImg)){
            req.flash('error', 'Found errors on the data');
            res.redirect('/edit');
          }
          else{
            user.profileImg = req.body.NewImg;
            res.redirect('/profile/');
          }
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: __empty__
'328':
  en:
    title: Insecure object reference - Session management
    description: >
      It is possible to close active sessions
      of other users by knowing their e-mail.
    impact: >
      Close user sessions in the application.
    recommendation: >
      Validate that the users email is not
      altered or replaced by another users
      email in the logout process.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure object reference - Session management
    description: >
      Es posible cerrar sesiones activas de otros
      usuarios conociendo su correo.
    impact: >
      Cerrar sesiones de usuarios en la aplicación.
    recommendation: >
      Validar que el correo del usuario no sea
      alterado o reemplazado por el de otro usuario
      en el proceso de cierre de sesión.
    threat: >
      Atacante autenticado desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      Closing a session without validating the email belongs to the same user and token
      ```javascript
      const logOut = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          closeSession(req.body.email);
        }
      }
      ```
    compliant: |
      The close session functionality verifies that id, token and email all belong to the same user
      ```javascript
      const logOut = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          const validateCredentials(req.body.user);
          if validateCredentials{
            closeSession(req.body.userid, req.body.token, req.body.email);
          }
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'329':
  en:
    title: Insecure or unset HTTP headers - Content-Type
    description: >
      The application does not define the Content-Type header
      in the server responses.
    impact: >
      Lead to unexpected behaviors
      due to content type misinterpretations.
    recommendation: >
      Define explicitly the content types allowed by the application.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insecure or unset HTTP headers - Content-Type
    description: >
      La aplicación no define la cabecera Content Type
      en las respuestas del servidor.
    impact: >
      Causar comportamientos inesperados
      debido a interpretaciones incorrectas del content type.
    recommendation: >
      Definir explícitamente los content types
      permitidos por la aplicación.
    threat: >
      Atacante autenticado desde Internet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The http response do not set content type header
      ```http
      HTTP/1.1 200 OK
      Date: Tue, 15 Nov 1994 08:12:31 GMT
      Host: yourhost
      ```
    compliant: |
      All responses from the application set the content type header
      ```http
      HTTP/1.1 200 OK
      Content-Type: userID/html; charset=utf-8
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['062', '266', '349']
  metadata:
    en:
      details: __empty__
'330':
  en:
    title: Lack of protection against brute force attacks - Credentials
    description: >
      The application has no protection
      against automated attacks to guess
      valid promotional codes.
    impact: >
      Increase the chances of getting valid credentials.
    recommendation: >
      Implement a control to prevent this
      type of attack and to ensure that the
      function is not executed by a robot.
      E.g. captcha, blocking by delay in the
      number of failed attempts, amog others.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Lack of protection against brute force attacks - Credentials
    description: >
      La aplicación no tiene protección contra
      ataques automatizados para adivinar
      códigos promocionales válidos.
    impact: >
      Aumentar las probabilidades de obtener credenciales válidas
    recommendation: >
      Implementar un control para evitar este tipo
      de ataques y que garantice que la función no
      sea ejecutada por un robot.
      Ej. captcha, bloqueo por retardo en el número
      de intentos fallidos, etc.
    threat: >
      Atacante anónimo desde Internet.
  category: Probabilistic Techniques
  examples:
    non_compliant: |
      Application does not establish a fallback or limit when the authorization code is not valid
      ```javascript
      const validatePromoCode = (req, res) => {
        if (isValidCode(req.body.code)) {
          applyDiscount(req.body.code, req.body.item);
        }
      }
      ```
    compliant: |
      There is a fallback mechanism to prevent brut force algorithms from guessing discount codes
      ```javascript
      const validatePromoCode = (req, res) => {
        if (isValidCode(req.body.code)) {
          applyDiscount(req.body.code, req.body.item);
        }else{
          if(req.body.numRequests > 5){
            blockUserCodes(req.body.userid, 36000);
          }
        }
      }
      ```
  remediation_time: '10'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['237', '327']
  metadata:
    en:
      details: __empty__
'331':
  en:
    title: User Enumeration - Wordpress
    description: >
      As a result of an inadequate configuration
      practice, valid users may be listed in
      the application.
    impact: >
      Find valid users within the application.
    recommendation: >
      Implement generic error messages that do
      not allow an attacker to discern the users
      existence on the system through HTTP errors (500 or 404).
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: User Enumeration - Wordpress
    description: >
      Debido a una práctica inadecuada en la configuración
      se pueden enumerar los usuarios válidos en la aplicación.
    impact: >
      Encontrar usuario válidos dentro de la aplicación.
    recommendation: >
      Implementar mensajes de error genéricos
      que no le permitan a un atacante discernir
      la existencia del usuario en el sistema a
      través de los errores HTTP (500 o 404).
    threat: >
      Atacante anónimo desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The http responses include sensitive information like users id, or provide different status codes when the user does not exist
      ```http
      Connection: keep-alive
      Content-Type: text/html; charset=UTF-8
      Date: Thu, 17 Oct 2019 23:12:26 GMT
      Location: myexamplepage/userID/
      Server: nginx/1.10.3 (Ubuntu)
      ```
    compliant: |
      The application uses correct controls to avoid user enumeration
      ```yaml
      //.htaccess cofiguration to stop WordPress username enumeration vulnerability
      RewriteCond %{REQUEST_URI}  ^/$
      RewriteCond %{QUERY_STRING} ^/?author=([0-9]*)
      RewriteRule ^(.*)$ myexampleplage.com? [L,R=301]
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['225']
  metadata:
    en:
      details: __empty__
'332':
  en:
    title: Use of insecure channel - Source code
    description: >
      Customer information is transmitted over
      a channel that does not use encryption.
    impact: >
      - Capture sensitive information and
      credentials in plain text.

      - Intercept communication and steal or
      forge requests and responses.
    recommendation: >
      Deploy the application over an encrypted
      communication channel, e.g. HTTPS using TLS.
    threat: >
      Anonymous attacker in adjacent network
      executing a man-in-the-middle attack.
  es:
    title: Use of insecure channel - Source code
    description: >
      La información de los clientes es transmitida
      por un canal que no usa cifrado.
    impact: >
      - Capturar información confidencial y
      credenciales en texto plano.

      - Interceptar la comunicación y robar o
      falsificar peticiones y respuestas.
    recommendation: >
      Desplegar la aplicación sobre un canal de
      comunicación cifrado, por ejemplo: HTTPS
      utilizando TLS.
    threat: >
      Atacante anónimo en red adyacente ejecutando
      un ataque man-in-the-middle.
  category: Information Collection
  examples:
    non_compliant: |
      The service uses an insecure encryption method (CBC)
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "off";
          ssl_ciphers: "DH_anon_WITH_CAMELLIA_128_CBC_SHA";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv1.0";
        }
      }
      ```
    compliant: |
      All services use a secure encryption method
      ```json
      http {
        server {
          index: "index.html";
          listen: "localhost:4446 ssl";
          server_name: "localhost";
          ssl_prefer_server_ciphers: "on";
          ssl_ciphers: "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384";
          ssl_certificate: "cert.crt";
          ssl_certificate_key: "cert.key";
          ssl_protocols: "SSLv3 TLSv1.2";
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'333':
  en:
    title: Insecure service configuration - EC2
    description: >
      Some EC2 instances have insecure configurations
      that an attacker can use to access
      or interrupt critical aplication processes
    impact: >
      Compromise the security of one or several EC2 Instances
    recommendation: >
      Perform a hardening process over all the EC2 instances,
      by following the recomended best practices
    threat: >
      Internet attacker with access to the AWS console.
  es:
    title: Insecure service configuration - EC2
    description: >
      Algunas instancias de EC2 cuentan con configuraciones
      inseguras que pueden ser utilizadas para
      acceder o interrumpir procesos críticos de la aplicación
    impact: >
      Comprometer la seguridad de una o varias instancias de EC2
    recommendation: >
      Realizar un proceso de hardening en todas las instancias de EC2.
      Siguiendo las prácticas recomendadas
    threat: >
      Atacante en internet con acceso a la consola de AWS.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The EC2 instance has an insecure configuration, it has the disable api termination set to true
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              IamInstanceProfile:
                Arn:
                  - MyIamInstanceProfile
                  - Arn
              DisableApiTermination: true
              ImageId: ami-04d5cc9b88example
              InstanceInitiatedShutdownBehavior: stop
              InstanceType: t2.micro
              KeyName: MyKeyPair
              SecurityGroupIds:
                - sg-083cd3bfb8example
      ```
      An EC2 instance has the associate_public_ip_address missconfigured
      ```yaml
      resource "aws_launch_template" "foo" {
        name = "foo"
        iam_instance_profile {
          name = "test"
        }
        network_interfaces {
          associate_public_ip_address = true
        }
      }
      ```
      An EC2 instance has the InstanceInitiatedShutdownBehavior missconfigured
      ```yaml
      MyLaunchTemplate:
        Type: AWS::EC2::LaunchTemplate
        Properties:
          LaunchTemplateName: MyLaunchTemplate
          LaunchTemplateData:
            IamInstanceProfile:
              Arn:
                - MyIamInstanceProfile
                - Arn
            DisableApiTermination: true
            ImageId: ami-04d5cc9b88example
            InstanceInitiatedShutdownBehavior: stop
            InstanceType: t2.micro
            KeyName: MyKeyPair
            SecurityGroupIds:
              - sg-083cd3bfb8example
      ```
      Using the AWS CLI, check if the EC2 instance uses IAM Roles instead of IAM access keys
      ```
      $ aws ec2 describe-instances
            --region us-east-1
            --instance-ids {EC2_id}
            --query 'Reservations[*].Instances[*].IamInstanceProfile'
      ```
      If the command output is an empty array, the selected EC2 instance does not have associated IAM Roles, which is considered an insecure service configuration
    compliant: |
      All EC2 instances are securely configured
      ```yaml
      Resources:
        MyLaunchTemplate:
          Type: AWS::EC2::LaunchTemplate
          Properties:
            LaunchTemplateName: MyLaunchTemplate
            LaunchTemplateData:
              IamInstanceProfile:
                Arn:
                  - MyIamInstanceProfile
                  - Arn
              DisableApiTermination: true
              ImageId: ami-04d5cc9b88example
              InstanceInitiatedShutdownBehavior: terminate
              InstanceType: t2.micro
              KeyName: MyKeyPair
              SecurityGroupIds:
                - sg-083cd3bfb8example
      ```
      ```yaml
      MyLaunchTemplate:
        Type: AWS::EC2::LaunchTemplate
        Properties:
          LaunchTemplateName: MyLaunchTemplate
          LaunchTemplateData:
            IamInstanceProfile:
              Arn:
                - MyIamInstanceProfile
                - Arn
            DisableApiTermination: true
            ImageId: ami-04d5cc9b88example
            InstanceInitiatedShutdownBehavior: terminate
            InstanceType: t2.micro
            KeyName: MyKeyPair
            SecurityGroupIds:
              - sg-083cd3bfb8example
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'334':
  en:
    title: Insecure service configuration - IAM
    description: >
      In compliance with the different security
      standards for cloud computing such as ISO
      27017 and NIST SP 800-144, no sensitive
      information should be stored among the
      information that is uploaded to the cloud,
      as this may result in data leakage, as in
      the case of AWS IAM passwords.
    impact: >
      Generate data leakage within the sensitive
      information that is uploaded to the cloud,
      for example, the case of how through the
      credentials that were stored in the code
      can be obtained data from the buckets and
      AWS services.
    recommendation: >
      Do not store credentials in the code, it is
      necessary to use environment variables and
      protected secret sources.
    threat: >
      Internal attacker with access to
      services configurations.
  es:
    title: Insecure service configuration - IAM
    description: >
      En cumplimiento con los diferentes estándares
      de seguridad para Cloud computing como ISO 27017
      y NIST SP 800-144, no se deben almacenar ningún
      tipo de información sensible entre la información
      que se carga en la nube, esto puede resultar en
      filtración de datos, es el caso de claves de
      acceso del IAM AWS.
    impact: >
      Generar fuga de datos dentro de la información
      sensible que se sube a la nube, por ejemplo,
      el caso de cómo a través de las credenciales
      que se almacenaron en el código se pueden
      obtener datos de los buckets y servicios de AWS.
    recommendation: >
      No se debe almacenar credenciales en el código,
      es necesario usar variables de entorno y
      fuentes de secretos protegidas.
    threat: >
      Atacante interno con acceso a configuraciones de servicios.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Some resources have their credentials stored in the code
      ```terraform
      resource "aws_iam_policy" "policy" {
        name        = "test_policy"
        path        = "/mypath"
        description = "My test policy"

        policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Action = [
                "ec2:Describe*",
              ]
              Effect   = "Allow"
              Resource = "db_critical"
              Password = "my_service_password"
            },
          ]
        })
      }
      ```
    compliant: |
      All resource credentials are stored using environment variables
      ```terraform
      resource "aws_iam_policy" "policy" {
        name        = "test_policy"
        path        = "/mypath"
        description = "My test policy"

        policy = jsonencode({
          Version = "2012-10-17"
          Statement = [
            {
              Action = [
                "ec2:Describe*",
              ]
              Effect   = "Allow"
              Resource = "db_critical"
            },
          ]
        })
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: A
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'335':
  en:
    title: Insecure service configuration - Bucket
    description: >
      The native S3 VersioningConfiguration resource,
      which allows to preserve, recover and restore
      each version of each object stored in the Buckets
      due to causes such as malicious actions of users
      or application failures, is not enabled.
    impact: >
      - Delete information from S3 buckets permanently.

      - Avoid recovering information that was deleted
      by mistake or maliciously.
    recommendation: >
      Securely configure the Buckets by enabling the
      VersioningConfiguration resource.
    threat: >
      Internet attacker with access to S3 Buckets.
  es:
    title: Insecure service configuration - Bucket
    description: >
      No se encuentra habilitado el recurso
      VersioningConfiguration nativo de S3, el cual
      permite conservar, recuperar y restaurar cada
      versión de cada objeto almacenado en los Buckets
      por causas como acciones mal intencionadas de los
      usuarios o fallos en la aplicación.
    impact: >
      - Eliminar permanentemente información de
      los buckets de S3.

      - Evitar recuperar información que fue eliminada
      por error o de forma malintencionada.
    recommendation: >
      Configurar de manera segura los Buckets habilitando
      el recurso VersioningConfiguration.
    threat: >
      Atacante en Internet con acceso a los Buckets de S3.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are services without the versioning configuration resource configured
      ```terraform
      resource "aws_s3_bucket" "state_bucket" {
        bucket        = "${data.aws_caller_identity.current.account_id}-terraform-state"
        acl           = var.acl
        force_destroy = var.force_destroy

        versioning {
          enabled = false
        }

        server_side_encryption_configuration {
          rule {
            apply_server_side_encryption_by_default {
              kms_master_key_id = aws_kms_key.mykey.arn
              sse_algorithm     = "aws:kms"
            }
          }
        }
      }
      ```
      Using the AWS CLI, the following command check if the S3 configuration has the versioning flag enabled
      ```
      $ aws s3api get-bucket-versioning
            --bucket {bucket_id}
      ```
      If the command does not return any CLI output, the S3 versioning feature is not enabled for the searched bucket
    compliant: |
      All services should have the versioning configuration correctly configured
      ```terraform
      resource "aws_s3_bucket" "state_bucket" {
        bucket        = "${data.aws_caller_identity.current.account_id}-terraform-state"
        acl           = var.acl
        force_destroy = var.force_destroy

        versioning {
          enabled = true
        }

        server_side_encryption_configuration {
          rule {
            apply_server_side_encryption_by_default {
              kms_master_key_id = aws_kms_key.mykey.arn
              sse_algorithm     = "aws:kms"
            }
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'336':
  en:
    title: Business information leak - Corporate information
    description: >
      It is possible to access information about
      some of the company employees, such as
      their roles and contact information.
    impact: >
      Obtain information about the role played
      by some workers within the company.
      As well as their contact information.
    recommendation: >
      Establish controls to prevent an
      attacker from accessing the organizations
      corporate information.
    threat: >
      Attacker with access to the application from the Internet.
  es:
    title: Business information leak - Corporate information
    description: >
      Es posible acceder a información de algunos
      trabajadores de la compañía, como sus roles
      e información de contacto.
    impact: >
      Obtener información acerca del rol desempeñado
      por algunos trabajadores dentro de la compañía.
      Así como también su información de contacto.
    recommendation: >
      Establecer controles que permitan evitar que
      un atacante acceda a información corporativa
      de la organización.
    threat: >
      Atacante con acceso a la aplicación desde internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application does not validate the user permissions to access the information
      ```javascript
      const getUserInfo = (req, res) => {
        if (isValidUser(req.body.user)) {
          const requestedUser = req.body.requiredUser;
          res.send(requestedUser.email);
          res.send(requestedUser.phone);
        }
      }
      ```
    compliant: |
      The application restrics only admin users to access the sensitive information
      ```javascript
      const getUserInfo = (req, res) => {
        const userCredentials = getCredentials(req.body.userId);
        if (isValidUser(req.body.user) && userCredentials == "ADMIN") {
          const requestedUser = req.body.requiredUser;
          res.send(requestedUser.email);
          res.send(requestedUser.phone);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176', '177', '261', '300']
  metadata:
    en:
      details: __empty__
'337':
  en:
    title: Insecure session management - CSRF Fixation
    description: >
      It is possible generate a CSRF Fixation
      in the transaction functionality.
      Authorization header is the public key,
      and It is always the same for payment links.
      An attacker can create a button with the
      content of a request and trick a user running
      a transaction to receive the app push
      notification and complete the request.
    impact: >
      Spoof an authenticated user in the application
      by means of a modified link to execute critical
      transactions such as transfers or payments.
    recommendation: >
      Make use of tokens in the forms for the verification
      of requests made by legitimate users.
    threat: >
      Attacker from the Internet without authentication.
  es:
    title: Insecure session management - CSRF Fixation
    description: >
      Es posible generar un CSRF Fixation en
      la funcionalidad de la transacción.
      La cabecera de autorización es la clave pública,
      y siempre es la misma para los enlaces de pago.
      Un atacante puede crear un botón con el contenido
      de una solicitud y engañar a un usuario que
      ejecuta una transacción para recibir la notificación
      push de la aplicación y completar la solicitud.
    impact: >
      Suplantar a un usuario autentificado en la
      aplicación mediante un enlace modificado para
      ejecutar transacciones críticas como transferencias
      o pagos.
    recommendation: >
      Utilizar tokens en los formularios para la
      verificación de las solicitudes realizadas
      por usuarios legítimos.
    threat: >
      Atacante desde Internet sin autenticación.
  category: Access Subversion
  examples:
    non_compliant: |
      The same header is included in the payments after processing which could be exploited by an attacker
      ```javascript
      app.post('/user/payment', (req, res) => {
        const { username, password, paymentInfo } = req.body;
        const user = users.find(u => { return u.username === username && u.password === password });
        if (user) {
          processPayment(user, paymentInfo);
          res.json({
            accessKey
          });
        } else {
            res.send('Unable to generate token. Login again to re try');
        }
      });
      ```
    compliant: |
      Including functionality to authenticate a user by sending them a token before accepting payment
      ```javascript
      app.post('/user/payment', (req, res) => {
        const { username, password, paymentInfo } = req.body;
        const user = users.find(u => { return u.username === username && u.password === password });
        if (user) {
          const token = jwt.sign({ username: user.username,  role: user.role }, accessTokenSecret);
          sendAuthToken(user, token)
          //Code to handle redirection for token to be processed
        } else {
            res.send('Unable to generate token. Login again to re try');
        }
      });
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['030', '031', '141']
  metadata:
    en:
      details: __empty__
'338':
  en:
    title: Insecure service configuration - Salt
    description: >
      Salt is generated in an insecure way, which
      makes the password easier to guess.
    impact: >
      Obtain valid credentials through dictionary attacks.
    recommendation: >
      Generate the Salt with a secure hashing function.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration - Salt
    description: >
      Se genera el Salt de manera insegura, lo cual
      hace que el password sea más fácil de adivinar.
    impact: >
      Obtener credenciales válidas mediante
      ataques de tipo diccionario.
    recommendation: >
      Generar el Salt con una función segura de hashing.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The service configuration uses an insecure hashing function
      ```c {3,7,15}
      namespace Controllers {
        public class Encrypt {
          public static void Process(string password) {
            var salt = Encoding.UTF8.GetBytes("salt");
            var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
            var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes("test"));
            var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes("test"));
          }
        }
      }
      ```
    compliant: |
      The hashing configuration is set up with a secure hashing function
      ```c {3,7,15}
      namespace Controllers {
        public class Encrypt {
          public static void Process(string password) {
            var salt = RNGCryptoServiceProvider().GetBytes(salt=new byte[16]);
            var fromHardcoded = new Rfc2898DeriveBytes(password, salt);
            var fromPassword = new Rfc2898DeriveBytes(password, Encoding.UTF8.GetBytes("test"));
            var fromUnicode = new Rfc2898DeriveBytes(password, Encoding.Unicode.GetBytes("test"));
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'339':
  en:
    title: Insecure service configuration - Request Validation
    description: >
      No requestValidationMode is assigned in
      the server configuration files, which
      would allow XSS attacks.
    impact: >
      Obtain sensitive information through XSS attacks.
    recommendation: >
      Activate recommended protection mechanisms
      such as Request Validation.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Insecure service configuration - Request Validation
    description: >
      En los archivos de configuración del servidor
      no se asigna requestValidationMode, lo
      que permitiría ataques XSS.
    impact: >
      Obtener información sensible mediante ataques XSS.
    recommendation: >
      Activar los mecanismos de protección
      recomendados como Request Validation.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The requestValidationMode is not correctly configured
      ```http
      <system.web>
          <compilation debug="true" targetFramework="4.0" />
          <httpRuntime requestValidationMode=* />
      </system.web>
      ```
    compliant: |
      The requestValidationMode header is correctly configured
      ```http
      <system.web>
          <compilation debug="true" targetFramework="4.0" />
          <httpRuntime requestValidationMode="2.0" />
      </system.web>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'340':
  en:
    title: Lack of data validation - Special Characters
    description: >
      The system does not validate that special
      characters are not entered in some fields.
    impact: >
      Cause unexpected behavior of the application.
    recommendation: >
      Validate in all fields that no
      special characters are entered.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Lack of data validation - Special Characters
    description: >
      El sistema en algunos campos no valida que
      no se ingresen caracteres especiales.
    impact: >
      Ocasionar un comportamiento inesperado
      de la aplicación.
    recommendation: >
      Validar en todo los campos que no se
      ingresen caracteres especiales.
    threat: >
      Atacante anónimo desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application updates user information with inputs without validating data on the server side
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          user.email = req.body.data.emailEdit;
          user.first_name = req.body.data.first_nameEdit;
          user.last_name = req.body.data.last_nameEdit;
          user.username = req.body.data.usernameEdit;
          res.redirect('/profile/');
        }
      });
      ```
    compliant: |
      The application correctly validates all input data on the server side
      ```javascript
      //String to validate data does not contain special characters
      const format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]+/;
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          //Function to compare data and see it does not contain special characters
          const isDataValid = validateData(req.body.data, format)
          if isDataValid{
            user.email = req.body.data.emailEdit;
            user.first_name = req.body.data.first_nameEdit;
            user.last_name = req.body.data.last_nameEdit;
            user.username = req.body.data.usernameEdit;
            res.redirect('/profile/');
          }
        }
      });
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '357']
  metadata:
    en:
      details: __empty__
'341':
  en:
    title: Lack of data validation - OTP
    description: >
      There is no evidence of validation of the
      values sent in the tokenCode parameter to
      complete the request, allowing random values
      to be used in multiple attempts.
    impact: >
      Perform the account creation process
      without knowing the generated token.
    recommendation: >
      - Validate on the server side that the
      token sent by the user is the one
      generated for the request.

      - Validate that the token generated
      is used only once.
    threat: >
      External attacker authenticated.
  es:
    title: Lack of data validation - OTP
    description: >
      No se evidencia validación de los valores
      enviados en el parámetro tokenCode para
      culminar la solicitud, permitiendo que se
      usen valores aleatorios en múltiples intentos.
    impact: >
      Realizar el proceso de creación de
      cuenta sin conocer el token generado.
    recommendation: >
      - Validar en el lado del servidor que el token enviado
      por el usuario sea el generado para la solicitud.

      - Validar que el token generado sea usado en una sola ocasión.
    threat: >
      Atacante externo autenticado.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application includes functionality that allows multiple token codes to be send without ending the user session
      ```javascript
      exports.signin = (req, res) => {
        const token = req.body.tokenCode;
        const isValidToken = validateusertoken(req.body.user, token);
        if isValidToken{
          //Handle user signin
        }else{
          return res.message("Invalid Token. Try Again")
        }
      }
      ```
    compliant: |
      The user session expires in case an incorrect token is used
      ```javascript
      exports.signin = (req, res) => {
        const token = req.body.tokenCode;
        const isValidToken = validateusertoken(req.body.user, token);
        if isValidToken{
          //Handle user signin
        }else{
          //If the token is not valid, the user session must be closed and redirected to the sign in
          res.redirect("user/login");
        }
      }
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173', '320', '357']
  metadata:
    en:
      details: __empty__
'342':
  en:
    title: Technical information leak - Alert
    description: >
      Technical information is obtained from the
      application due to the use of the alert()
      function (javascript) whose output will
      always be displayed on the client side.
      In development environment it is acceptable
      to use this function to see errors, but
      using it in production environment is the
      same as exposing yourself to show sensitive
      information of the application.
    impact: >
      Open the browser console and send real
      and fake requests to the application, waiting
      for it to display console information.
    recommendation: >
      Completely remove the console.log(), alert() function
      from all javascript files in production environments.
    threat: >
      Anonymous user from the Internet.
  es:
    title: Technical information leak - Alert
    description: >
      Se obtiene información técnica de la aplicación
      debido al uso de la función alert() (javascript)
      cuya salida siempre se mostrará en el lado del cliente.
      En ambiente de desarrollo es aceptable utilizar
      esta función para ver errores, pero utilizarla en
      ambiente de producción es igual a exponerse a mostrar
      información sensible de la aplicación.
    impact: >
      Abrir la consola del navegador y enviar
      peticiones reales y falsas a la aplicación,
      esperando que ésta muestre información
      por consola.
    recommendation: >
      Eliminar completamente la función
      console.log(), alert() de todos los archivos
      javascript en ambientes de producción.
    threat: >
      Usuario anónimo en Internet.
  category: Information Collection
  examples:
    non_compliant: |
      The application includes common debugging functions in the production code
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          const isDataValid = validateData(req.body.data)
          if isDataValid{
            user.email = req.body.data.emailEdit;
            user.first_name = req.body.data.first_nameEdit;
            user.last_name = req.body.data.last_nameEdit;
            user.username = req.body.data.usernameEdit;
            res.redirect('/profile/');
          }else{
            //Insecure function used
            alert("Data is not valid");
          }
        }
      });
      ```
    compliant: |
      All debugging functions in the code are replaced with proper functionality to handle exceptions and errors
      ```javascript
      app.post('/editProfile', isLoggedIn, function(req, res, next){
        User.update({ _id: req.user.id}, req.body, function(err, user){
          const isDataValid = validateData(req.body.data)
          if isDataValid{
            user.email = req.body.data.emailEdit;
            user.first_name = req.body.data.first_nameEdit;
            user.last_name = req.body.data.last_nameEdit;
            user.username = req.body.data.usernameEdit;
            res.redirect('/profile/');
          }else{
            //Code to handle the wrong data without exposing the system
          }
        }
      });
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'343':
  en:
    title: Insecure service configuration - BREACH Attack
    description: >
      The site meets the conditions that make
      it potentially vulnerable to BREACH attacks:

      - Uses HTTP gzip compression.

      - The information entered by the user is
      reflected on the site.

      - It stores secrets (session tokens or anti-CSRF).
    impact: >
      Allow to obtain privileged information
      (such as session token) due to the
      compression features with the gzip format.
      Additional information can be
      found at http://breachattack.com/
    recommendation: >
      Securely configure the vulnerable service so
      that it can only be accessed by authorized users.
    threat: >
      Anonymous attacker in adjacent network executing a man-in-the-middle attack.
  es:
    title: Insecure service configuration - BREACH Attack
    description: >
      El sitio cumple las condiciones que lo hacen
      potencialmente vulnerable a ataques de tipo BREACH:

      - Usa la compresión HTTP tipo gzip.

      - La información ingresada por el
      usuario es reflejada en el sitio.

      - Almacena secretos (tokens de sesión o anti-CSRF).
    impact: >
      Permitir obtener información privilegiada
      (como token de sesión) debido a las
      características de compresión con el formato gzip.
      Información adicional en http://breachattack.com/
    recommendation: >
      Configurar de manera segura el servicio
      vulnerable permitiendo así que solo sean
      accedido por usuarios autorizados.
    threat: >
      Atacante anónimo en red adyacente ejecutando un ataque man-in-the-middle.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The http responses of the application use the g-zip content-encoding
      ```http
      GET HTTP/1.1
      Host: hostname
      User-Agent: Mozilla/5.0
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      Accept-Language: en-us,en;q=0.5
      content-encoding: gzip
      ```
    compliant: |
      There is a secure configuration of the content-encoding header in the http responses
      ```http
      GET HTTP/1.1
      Host: hostname
      User-Agent: Mozilla/5.0
      Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
      Accept-Language: en-us,en;q=0.5
      content-encoding: compress
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: W
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'344':
  en:
    title: Lack of data validation - Non Sanitized Variables
    description: >
      The system constructs system commands using
      inputs that can be manipulated externally, it
      does not correctly neutralize special elements
      that could modify the system command.
    impact: >
      Execute unauthorized scripts.
    recommendation: >
      Use whitelists or identifiers that are then
      transformed into static inputs to Call() calls.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Lack of data validation - Non Sanitized Variables
    description: >
      El sistema construye comandos de sistema utilizando
      entradas que pueden ser manipuladas externamente,
      no neutraliza correctamente elementos especiales
      que podrían modificar el comando del sistema.
    impact: >
      Ejecutar secuencias de comandos no autorizados.
    recommendation: >
      Usar listas blancas o identificadores que luego
      se transformen en entradas estáticas a las llamadas Call().
    threat: >
      Atacante autenticado desde Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are functionalities using unvalidated input data to build system commands
      ```java
      Private main (String userInput){
        String homeDirectory = System.getProperty(user.profile);
        Process process;
        if (isWindows) {
          process = Runtime.getRuntime().exec(String.format("cmd.exe /c dir %s", homeDirectory));
        } else {
          process = Runtime.getRuntime().exec(String.format("sh -c ls %s", homeDirectory));
        }
        StreamGobbler streamGobbler = new StreamGobbler(process.getInputStream(), System.out::println);
        Executors.newSingleThreadExecutor().submit(streamGobbler);
        int exitCode = process.waitFor();
        assert exitCode == 0;
      }
      ```
    compliant: |
      System commands, when needed, are always built using validated or parameterized data
      ```java
      Private main ([] args){
        String homeDirectory = System.getProperty("fixedPath");
        Process process;
        if (isWindows) {
          process = Runtime.getRuntime().exec(String.format("cmd.exe /c dir %s", homeDirectory));
        } else {
          process = Runtime.getRuntime().exec(String.format("sh -c ls %s", homeDirectory));
        }
        StreamGobbler streamGobbler = new StreamGobbler(process.getInputStream(), System.out::println);
        Executors.newSingleThreadExecutor().submit(streamGobbler);
        int exitCode = process.waitFor();
        assert exitCode == 0;
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: U
  requirements: ['173', '320', '357']
  metadata:
    en:
      details: __empty__
'345':
  en:
    title: Security controls bypass or absence - Session Invalidation
    description: >
      A function is implemented in the application
      that returns the users Main from his session code.
      However, since the source code used in the
      debugging phase was left in this functionality,
      if a session code containing the word auto is
      used, access is allowed.
    impact: >
      - Exploit the logic introduced by the
      debugging code to access the application
      without having credentials.

      - Put in a session code the word auto and
      manage to access the application with a
      Main used during the testing phase.
    recommendation: >
      Remove the code used during testing.
    threat: >
      Anonymous attacker from the Internet.
  es:
    title: Security controls bypass or absence - Session Invalidation
    description: >
      En la aplicación se implementa una función
      que retorna la Principal del usuario a
      partir de su código de sesión.
      No obstante, debido a que se dejó en esta
      funcionalidad el código fuente usado en la
      fase de depuración, si se usa un código de
      sesión que contenga la palabra auto,
      se permite el acceso.
    impact: >
      - Explotar la lógica que introduce el
      código de depuración para acceder la
      aplicación sin poseer unas credenciales.

      - Poner en un código de sesión la
      palabra auto y conseguir acceder a
      la aplicación con un Main utilizado
      durante la fase de pruebas.
    recommendation: >
      Eliminar el código usado durante las pruebas.
    threat: >
      Atacante anónimo desde Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There is a functionality that allows breaching due to a missconfiguration of the source code
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          redirect('users/main');
        }else if (req.body.session.contains("auto")){
          //This clause was used in a development environment to test code and bypass the authentication
          redirect('users/main');
        }
      }
      ```
    compliant: |
      All functionalities of the application correctly handle the authorization of users
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          redirect('users/main');
        }
        //Delete all development code
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['062', '266']
  metadata:
    en:
      details: __empty__
'346':
  en:
    title: Excessive privileges - Mobile App
    description: >
      The application defines unnecesary permissions
      that can be abused by an attacker
      to perform unauthorized read or write
      operations in the device.
    impact: >
      Execute read or write actions
      that should not be allowed
    recommendation: >
      Disable unnecessary permissions,
      complying with the principle of least privilege
    threat: >
      Authenticated attacker
      with local access to the application.
  es:
    title: Excessive privileges - Mobile App
    description: >
      La aplicación define permisos innecesarios
      que pueden ser explotados por un atacante
      para leer o escribir información
      de forma no autorizada en el dispositivo.
    impact: >
      Ejecutar acciones de lectura o modificación
      que no deberían estar permitidas.
    recommendation: >
      Desactivar permisos que la aplicación no utilice,
      operando de acuerdo al principio de mínimo privilegio
    threat: >
      Atacante autenticado con acceso local a la aplicación.
  category: Access Subversion
  examples:
    non_compliant: |
      The application manifest sets unsafe permissions not necessary for its functionality
      ```html
      <?xml version="1.0" encoding="utf-8" standalone="no"?>
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:compileSdkVersion="31" 	android:compileSdkVersionCodename="12" android:installLocation="internalOnly" package="com.example" platformBuildVersionCode="31" platformBuildVersionName="12">
        <uses-permission android:name="android.permission.READ_CALL_LOG"/>
        <uses-permission android:name="android.permission.WRITE_CALL_LOG"/>
        <uses-permission android:name="android.permission.CAMERA"/>
        <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
        <uses-permission android:name="android.permission.READ_PHONE_NUMBERS"/>
        <uses-permission android:name="android.permission.CALL_PHONE"/>
        <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS"/>
        <uses-permission android:name="android.permission.PROCESS_OUTGOING_CALLS"/>
        <uses-permission android:name="android.permission.WRITE_CONTACTS"/>
        <uses-permission android:name="android.permission.READ_CONTACTS"/>
        <uses-permission android:name="android.permission.GET_ACCOUNTS"/>
        <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
        <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
        <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
        <uses-permission android:name="android.permission.INTERNET"/>
        <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
        <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>
        <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
        <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
        <uses-permission android:name="android.permission.RECEIVE_SMS"/>
        <uses-permission android:name="android.permission.READ_SMS"/>
        <uses-permission android:name="android.permission.SEND_SMS"/>
        <uses-permission android:name="android.permission.WRITE_SMS"/>
        <uses-permission android:name="android.permission.RECEIVE_MMS"/>
        <uses-permission android:name="android.permission.RECORD_AUDIO"/>
      </manifest>
      ```
    compliant: |
      The application sets only secure permissions
      ```yaml
      <?xml version="1.0" encoding="utf-8" standalone="no"?>
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:compileSdkVersion="31" android:compileSdkVersionCodename="12" android:installLocation="internalOnly" package="com.example" platformBuildVersionCode="31" platformBuildVersionName="12">
        <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS"/>
        <uses-permission android:name="android.permission.MANAGE_ACCOUNTS"/>
        <uses-permission android:name="android.permission.USE_CREDENTIALS"/>
        <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT"/>
        <uses-permission android:name="android.permission.MMS_SEND_OUTBOX_MSG"/>
        <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
        <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
        <uses-permission android:name="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"/>
        <uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE"/>
        <uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE"/>
        <uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT"/>
        <uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE"/>
        <uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE"/>
        <uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS"/>
        <uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS"/>
        <uses-permission android:name="android.permission.READ_APP_BADGE"/>
        <uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS"/>
        <uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS"/>
        <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ"/>
        <uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE"/>
      </manifest>
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['095', '096', '186']
  metadata:
    en:
      details: __empty__
'347':
  en:
    title: Insecure service configuration - Task Hijacking
    description: >
      One of the activities in the application
      manifest is configured with launchMode=singleTask,
      this configuration is insecure because it opens
      the possibility that the application is vulnerable
      to Task Hijacking.
    impact: >
      - Mislead the user with a malicious application that
      impersonates the applications functionalities.

      - Install malicious application on the
      application users device.
    recommendation: >
      Configure the launchMode with the singleInstance option.
    threat: >
      Unauthorized user with access to the application.
  es:
    title: Insecure service configuration - Task Hijacking
    description: >
      Una de las activities en el manifiesto de la
      aplicación está configurada con launchMode=singleTask,
      esta configuración es insegura porque abre la
      posibilidad de que la aplicación sea vulnerable
      Task Hijacking.
    impact: >
      - Engañar al usuario con una aplicación maliciosa
      que suplante las funcionalidades de la aplicación.

      - Instalar aplicación maliciosa en
      la aplicación del dispositivo del usuario.
    recommendation: >
      Configurar el launchMode con la opción de singleInstance.
    threat: >
      Usuario no autorizado con acceso a la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application manifest allows launchMode with the singletask Option
      ```yaml
      <manifest ... >
        ...
        <application android:launchMode="singleTask" ... >
            ...
        </application>
      </manifest>
      ```
    compliant: |
      The application manifest correctly configures launchMode to singleInstance
      ```yaml
      <manifest ... >
        ...
        <application android:launchMode="singleInstance" ... >
            ...
        </application>
      </manifest>
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'348':
  en:
    title: Insecure digital certificates - Lifespan
    description: >
      The certificates are valid for more than two years.
    impact: >
      Increase the chances of the certificate being
      susceptible to zero-day vulnerabilities.
    recommendation: >
      Generate a certificate that complies
      with recommended best practices.
    threat: >
      Anonymous attacker from an adjacent network.
  es:
    title: Insecure digital certificates - Lifespan
    description: >
      Los certificados cuentan con un tiempo
      de validez mayor a dos años.
    impact: >
      Incrementar las posibilidades de que el
      certificado sea susceptible a vulnerabilidades
      de día cero.
    recommendation: >
      Generar un certificado que cumpla con las
      mejores prácticas recomendadas.
    threat: >
      Atacante anónimo desde una red adyacente.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not define a secure limit for expiration of certificates
      ```json
      resource {
        certificate-id {
          ca-profile: "ca-profile-name";
          challenge-password: "password";
          re-generate-keypair: mykey;
          validity-period: 3000;
        }
      }
      ```
    compliant: |
      The application sets a secure expiration time for digital certificates
      ```json
      resource {
        certificate-id {
          ca-profile: "ca-profile-name";
          challenge-password: {secretpassword};
          re-generate-keypair: mykey;
          validity-period: 365;
        }
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['088', '089', '090', '091', '092', '093']
  metadata:
    en:
      details: __empty__
'349':
  en:
    title: Technical information leak - Credentials
    description: >
      When the login page is accessed, a request
      is triggered in whose response includes an
      unminified and non-obfuscated script in which
      the BotChat Direct Line Secret Key can be
      read in plain text.
    impact: >
      Obtain the direct line secret key and
      connect directly to the application bot.
    recommendation: >
      - Minify and obfuscate binaries.

      - Use a vault service or environment variables
      to protect sensitive information.
    threat: >
      Anonymous attacker consults the login page.
  es:
    title: Technical information leak - Credentials
    description: >
      Cuando se accede a la página de login, se dispara
      una petición en cuya respuesta se incluye un script
      no minificado y no ofuscado en el que se puede leer
      en texto plano la Secret Key de BotChat Direct Line.
    impact: >
      Obtener la secret key de direct line y
      conectarse directamente con el bot de
      la aplicación.
    recommendation: >
      - Minificar y ofuscar los binarios.

      - Utilizar un servicio de bóveda o variables de
      entorno para proteger información sensible.
    threat: >
      Atacante anónimo consulta la página de login.
  category: Information Collection
  examples:
    non_compliant: |
      There are scripts being used that contain plain text access keys
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          //the callScript method stores a secret key in plaint text
          res.message(callScript());
          redirect('users/main');
        }
      }
      ```
    compliant: |
      The application does not contain any method that contains sensitive information
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user) && isValidToken(req.body.user.token)) {
          //Avoid external scripts that contain sensitive information
          res.message("Successful login");
          redirect('users/main');
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'350':
  en:
    title: Insecure digital certificates - Chain of trust
    description: >
      Due to improper implementation of the TrustManager
      checkServerTrusted method, methods are created
      that do not throw a certificate exception when
      invalid certificates are detected.
      Thanks to this it is possible to accept any incoming
      certificate and materialize Man in The Middle attacks.
    impact: >
      Execute Man-in-the-middle attacks.
    recommendation: >
      Define a processing logic for invalid certificates
      that includes rejecting the connection to such
      certificates and storing the technical details
      of the event in logs.
    threat: >
      Unauthorized attacker from intranet
  es:
    title: Insecure digital certificates - Chain of trust
    description: >
      Debido a una implementación inadecuada del método
      checkServerTrusted de TrustManager, se crean métodos
      que no arrojan una excepción de certificado cuando
      se detectan certificados inválidos.
      Gracias a esto es posible aceptar cualquier certificado
      entrante y materializar ataques de Man in The Middle.
    impact: >
      Ejecutar ataques Man-in-the-middle.
    recommendation: >
      Definir una lógica de tratamiento para certificados
      inválidos que incluya rechazar la conexión con dichos
      certificados y almacenar en logs los detalles
      técnicos del evento.
    threat: >
      Atacante sin autorización desde intranet.
  category: Access Subversion
  examples:
    non_compliant: |
      Application does not correctly check if certificate is invalid or has expired and allows insecure connections
      ```java
      public void checkServerTrusted(X509Certificate[] certificates, String authType)
        throws CertificateException {
        if ((certificates != null) && (certificates.length == 1)) {
          certificates[0].checkValidity();
        } else {
          standardTrustManager.checkServerTrusted(certificates, authType);
        }
      }
      ```
    compliant: |
      The application prevents invalid certificates to establish connections
      ```java
      public void checkServerTrusted(X509Certificate[] certificates, String authType)
        throws CertificateException {
        if ((certificates != null) && (certificates.length == 1)) {
          certificates[0].checkValidity();
          certificates[0].checkExpiration();
          //Code to establish connection if certificate is valid
        } else {
          //Code to throw error and log technical details of the event
          throw new Exception()
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['088', '089', '090', '091', '092', '093']
  metadata:
    en:
      details: __empty__
'351':
  en:
    title: Automatic information enumeration - Corporate information
    description: >
      It is possible to automatically enumerate
      system information such as finding IDs due
      to different messages for existing and non
      existing finding IDs.
    impact: >
      Get all existing findings in the system.
    recommendation: >
      Show the same response for existing and non-existing findings.
    threat: >
      External attacker with access to integrates.
  es:
    title: Automatic information enumeration - Corporate information
    description: >
      Es posible enumerar automáticamente la información
      del sistema, como los identificadores de búsqueda,
      debido a los diferentes mensajes para los identificadores
      de búsqueda existentes y no existentes.
    impact: >
      Obtener todos los resultados existentes en el sistema.
    recommendation: >
      Mostrar la misma respuesta para los hallazgos
      existentes y no existentes.
    threat: >
      Atacante externo con acceso a integrates.
  category: Information Collection
  examples:
    non_compliant: |
      The application sets different response messages that differ based on the finding status
      ```javascript
      const getFindings = (req, res) => {
        if (isValidUser(req.body.user) && isExistingFinding(req.body.findingId)) {
          res.message("the finding Id exists in our database");
          redirect('users/findingId');
        }else if (isValidUser){
          res.message("The finding ID does not exist");
        }
      }
      ```
    compliant: |
      The application sends the same response regardless of the finding status
      ```javascript
      const getFindings = (req, res) => {
        if (isValidUser(req.body.user)) {
          //Code to handle finding search that does not diferentiate response between existing and unexisting findings
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['237', '266', '329']
  metadata:
    en:
      details: __empty__
'352':
  en:
    title: Insecure service configuration - Non Masked Variables
    description: >
      It is possible to bypass the masking of
      environment variables when they are printed
      in the job logs, therefore sensitive data
      such as passwords, tokens, users, among
      others are exposed.
      This is possible because production secrets
      are saved in unprotected variables of git,
      therefore a developer could leak these
      credentials when running pipelines.
    impact: >
      - Get admin credentials.

      - Read, write and modify Gitlab resources.

      - Get customer information.

      - Download information and evidences of customers.

      - Delete fluid and registries of customer.
    recommendation: >
      Verify that the user who is trying to access
      the functionalities effectively has the necessary
      permissions to do so.
      Encrypt all sensitive information that is transported
      or stored within the application according to the
      policies of the organization.
    threat: >
      External attacker allowed to run pipelines.
  es:
    title: Insecure service configuration - Non Masked Variables
    description: >
      Es posible saltarse el enmascaramiento de
      las variables de entorno cuando se imprimen
      en los registros de trabajo, por lo que datos
      sensibles como contraseñas, tokens, usuarios,
      entre otros quedan expuestos.
      Esto es posible porque los secretos de producción
      se guardan en variables desprotegidas de git, por
      lo tanto un desarrollador podría filtrar estas
      credenciales al ejecutar pipelines.
    impact: >
      - Obtener credenciales de administrador.

      - Leer, escribir y modificar recursos de Gitlab.

      - Obtener información de clientes.

      - Descargar información y evidencias de clientes.

      - Eliminar fluidos y registros de clientes.
    recommendation: >
      Verificar que el usuario que intenta acceder a
      las funcionalidades efectivamente tiene los
      permisos necesarios para hacerlo.
      Cifrar toda la información sensible que se
      transporta o almacena dentro de la aplicación
      de acuerdo con las políticas de la organización.
    threat: >
      El atacante externo puede ejecutar las pipelines.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application contains functionality that displays sensitive information without hashing
      ```javascript
      const accessRecoveryPasswd = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            //Implement a function to mask sensitive information
            const recoveryPasswd = getRecoveryPasswd(req.body.userId);
            const maskedPasswd = MaskData.maskJSONFields(recoveryPasswd, maskJSONOptions);
            //A log job in the code could be used to access the unmasked variable with sensitive information
            console.log(maskedPasswd)
            res.end(maskedPasswd);
          }
        }
      }
      ```
    compliant: |
      All sensitive information is hashed before sending it in a response
      ```javascript
      const accessRecoveryPasswd = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token){
            //Implement a function to mask sensitive information
            const recoveryPasswd = getRecoveryPasswd(req.body.userId);
            const maskedPasswd = MaskData.maskJSONFields(recoveryPasswd, maskJSONOptions);
            res.end(maskedPasswd);
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: C
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['158']
  metadata:
    en:
      details: __empty__
'353':
  en:
    title: Lack of data validation - Token
    description: >
      The generated JWT access token does not
      validate if the signature is valid so the
      token can be modified and requests are accepted;
      even removing the signature from the token works.
    impact: >
      - Generate tokens by bypassing existing mechanisms.

      - Modify tokens allowing requests to be sent
      outside the application cycle.
    recommendation: >
      Generate a token with random components without
      sensitive information and always validate that
      the integrity of the token is maintained (signature
      verification, signature).
    threat: >
      Unauthorized attacker with access to a token.
  es:
    title: Lack of data validation - Token
    description: >
      El token JWT de acceso generado no valida si
      la firma (signature) es válida por lo que el
      token puede ser modificado y las peticiones
      se aceptan; incluso removiendo la firma del
      token funciona.
    impact: >
      - Generar tokens evadiendo los mecanismos existentes.

      - Modificar tokens permitiendo enviar peticiones
      fuera del ciclo de la aplicación.
    recommendation: >
      Generar un token con componentes aleatorios sin
      información sensible y validar siempre que la
      integridad del token se mantenga (verificación
      de firma, signature).
    threat: >
      Atacante no autorizado con acceso a un token.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application does not verify the jwt signature
      ```javascript
      function verifyToken(req.token, res)=>{
        const jwtHeader = JWT.split('.')[0];
        const jwtPayload = JWT.split('.')[1];
        const isVerified = verifyFunction.write(jwtHeader + '.' + jwtPayload);

        if isVerified {
          //Handle user signing
        }else{
          res.message("Erroneous credentials");
          res.redirect("/users/signin");
        }
      }
      ```
    compliant: |
      The application correctly verifies the jwt signature
      ```javascript
      function verifyToken(req.token, res)=>{
        const jwtHeader = JWT.split('.')[0];
        const jwtPayload = JWT.split('.')[1];
        const jwtSignature = JWT.split('.')[2];

        verifyFunction.write(jwtHeader + '.' + jwtPayload);
        verifyFunction.end();

        const jwtSignatureBase64 = base64.toBase64(jwtSignature);
        const signatureIsValid = verifyFunction.verify(PUB_KEY, jwtSignatureBase64, 'base64');

        if signatureIsvalid {
          //Handle user signing
        }else{
          res.message("Erroneous credentials");
          res.redirect("/users/signin");
        }
      }
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: C
  requirements: ['173', '320', '357']
  metadata:
    en:
      details: __empty__
'354':
  en:
    title: Insecure file upload - Files Limit
    description: >
      There is no limit to the number of files
      that can be uploaded to the system per unit
      of time, and uploading a new one does not
      delete the previous one from the server.
    impact: >
      Upload large numbers of files over the
      upload limit size one after another, using
      up server storage resources indiscriminately.
    recommendation: >
      Delete previous avatar files when
      uploading a new one, apply throttling.
    threat: >
      Attacker from the Internet with valid
      session token to upload files.
  es:
    title: Insecure file upload - Files Limit
    description: >
      No hay límite en la cantidad de archivos que
      se pueden subir al sistema por unidad de
      tiempo, y al subir uno nuevo no se elimina
      el anterior del servidor.
    impact: >
      Subir grandes cantidades archivos del tamaño
      límite de subida uno tras otro, gastando recursos
      de almacenamiento del servidor indiscriminadamente.
    recommendation: >
      Eliminar los archivos de avatar anteriores
      cuando se suba uno nuevo, aplicar throttling.
    threat: >
      Atacante desde Internet con token de sesión
      válido para subir archivos.
  category: Access Subversion
  examples:
    non_compliant: |
      The application uploads files without verifying the content
      ```javascript
      const upload = async (userFile) => {
        try {
          const title = 'My file';
          const form = new FormData();
          form.append('title', title);
          //Uploading file without verifying data
          form.append('file', userfile);
          const resp = await axios.post('http://localhost:3000/upload', form, {
            headers: {
              ...form.getHeaders(),
            }
          });
          if (resp.status === 200) {
            return 'Upload complete';
          }
        } catch(err) {
          return new Error(err.message);
        }
      }
      ```
    compliant: |
      The application performs server side validation of all input data to be uploaded
      ```javascript
      const upload = async (userFile) => {
        try {
          //Implement function to check user uploads
          const cleanfile = clearUserFile(userFile);
          const title = 'My file';
          const form = new FormData();
          form.append('title', title);
          form.append('file', cleanfile);
          const resp = await axios.post('http://localhost:3000/upload', form, {
            headers: {
              ...form.getHeaders(),
            }
          });
          if (resp.status === 200) {
            return 'Upload complete';
          }
        } catch(err) {
          return new Error(err.message);
        }
      }
      ```
  remediation_time: '45'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['040', '041']
  metadata:
    en:
      details: __empty__
'355':
  en:
    title: Insufficient data authenticity validation - Checksum verification
    description: >
      The application does not properly validate the
      integrity of resources loaded from external servers.
    impact: >
      Use third-party resources without verifying
      that the integrity has not been compromised.
    recommendation: >
      Validate the integrity of all resources originating
      from sources controlled by third parties.
    threat: >
      Anonymous attacker from Internet with write access
      to a resource used by the application.
  es:
    title: Insufficient data authenticity validation - Checksum verification
    description: >
      La aplicación no valida adecuadamente la integridad
      de los recursos cargados de servidores externos.
    impact: >
      Utilizar recursos de terceros sin verificar que
      la integridad no haya sido comprometida.
    recommendation: >
      Validar la integridad de todos los recursos
      que provengan de fuentes controladas por terceros.
    threat: >
      Atacante anónimo desde Internet con acceso de
      escritura a un recurso utilizado por la aplicación.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application does not perform server side validation of the input data
      ```docker

      curl -OL ${JRE_URL} \

      ```
    compliant: |
      All inputs are correctly validated on the server side before being used
      ```docker

      curl -OL ${JRE_URL} \
      && echo ${JRE_CKSUM} | sha256sum -c
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: X
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: __empty__
'356':
  en:
    title: Symmetric denial of service - SMTP
    description: >
      The server crashes with multiple requests
      to the SMTP service that is responsible for
      testing the sending of emails, since the
      txtEmail attribute does not validate the
      number of emails or characters that can be entered.
    impact: >
      Cause a denial of service.
    recommendation: >
      Define a character or email limit for the txtEmail field.
    threat: >
      Authenticated Internet attacker.
  es:
    title: Symmetric denial of service - SMTP
    description: >
      Se genera la caída del servidor con múltiples
      peticiones al servicio SMTP que se encarga de
      hacer el test de envío de correos, ya que para
      el atributo txtEmail no se valida la cantidad
      de emails ni caracteres que se pueden ingresar.
    impact: >
      Ocasionar una denegación de servicio.
    recommendation: >
      Definir un límite de caracteres o de
      emails para el campo txtEmail.
    threat: >
      Atacante en Internet autenticado.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not perform server side validation of some input data
      ```c
      public static void Test(string server, string txtEmail) {
        string to = "user";
        string from = "user";
        //Create Message without validating length or number of emails
        MailMessage message = new MailMessage(from, to, txtEmail);
        message.Subject = "Subject";
        message.Body = @"Body";
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = true;
        client.Send(message);
      }
      ```
    compliant: |
      All input data is correctly verified on the server side
      ```c
      public static void Test(string server, string txtEmail) {
        string to = "user";
        string from = "user";
        //Validate the txtEmail input field
        string sanitizedEmail = checkTxtEmailInput(txtEmail);
        MailMessage message = new MailMessage(from, to, sanitizedEmail);
        message.Subject = "Subject";
        message.Body = @"Body";
        SmtpClient client = new SmtpClient(server);
        client.UseDefaultCredentials = true;
        client.EnableSsl = true;
        client.Send(message);
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'357':
  en:
    title: Symmetric denial of service - FTP
    description: >
      The server crash is generated with multiple
      requests with the functionality Configuration
      and Programming Reverse Homologation that takes
      time to process the information when making the
      request with the selected SFTP (SSH) protocol,
      causing a 504 error in the application.
    impact: >
      Cause a denial of service.
    recommendation: >
      Define a time-out when a query or a search is
      taking too long to process the information.
    threat: >
      Authenticated attacker in the application.
  es:
    title: Symmetric denial of service - FTP
    description: >
      Se genera la caída del servidor con múltiples
      peticiones con la funcionalidad Configuración y
      Programación Homologación Inversa que se demora
      en procesar la información al realizar la petición
      con el protocolo SFTP (SSH) seleccionado, causando
      un error 504 en la aplicación.
    impact: >
      Ocasionar una denegación de servicio.
    recommendation: >
      Definir un time-out cuando una consulta o una búsqueda
      se está demorando mucho en procesar la información.
    threat: >
      Atacante autenticado en la aplicación.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application performs potentially large queries without setting a timeout limit
      ```java
      void initStatement(Connection conn, Statement stmt) throws SQLException {
        int queryTimeout = 3600;
        rs = stmt.executeQuery(validateQuery);
        //Handle query without limiting its time to execute
      }
      ```
    compliant: |
      Potentially large queries include a timeout limit to avoid overloading
      ```java
      void initStatement(Connection conn, Statement stmt) throws SQLException {
        int queryTimeout = 3600;
        try {
          stmt.setQueryTimeout(queryTimeout);
          rs = stmt.executeQuery(validateQuery);
          return true;
        } catch {
          //Throw exception when query takes two long
        }
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['072', '327']
  metadata:
    en:
      details: __empty__
'358':
  en:
    title: Insecure service configuration - DocumentBuilderFactory
    description: >
      DocumentBuilderFactory is insecurely configured,
      which makes it susceptible to XXE attacks.
    impact: >
      - Read confidential information.

      - Execute commands on the server.
    recommendation: >
      Securely configure DocumentBuilderFactory.
    threat: >
      Authorized attacker from the Internet.
  es:
    title: Insecure service configuration - DocumentBuilderFactory
    description: >
      Se configura de manera insegura
      DocumentBuilderFactory,lo que lo
      hace suceptible a ataques XXE.
    impact: >
      - Leer información confidencial.

      - Ejecutar comandos en el servidor.
    recommendation: >
      Configurar de manera segura DocumentBuilderFactory.
    threat: >
      Atacante autorizado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The DocumentBuilderFactory does not have a secure configuration
      ```java
      public static DocumentBuilderFactory secureDocumentBuilderFactory(final DocumentBuilderFactory factory, final String    callerNamespace) throws ParserConfigurationException{
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        dbf.setNamespaceAware(true);
        DocumentBuilder parser = dbf.newDocumentBuilder();
        parser.setErrorHandler(handler);
        return parser.parse(stream);
      }
      ```
    compliant: |
      There are additional settings in the DocumentBuilderFactory to securely configure the service
      ```java
      import com.sap.security.hardener.nw.facade.HardenerFacade;

      public static DocumentBuilderFactory secureDocumentBuilderFactory(final DocumentBuilderFactory factory, final String    callerNamespace) throws ParserConfigurationException{
        DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
        //One possible method to secure the DocumentBuildeerFactory
        dbFactory = HardenerFacade.secureDocumentBuilderFactory(dbFactory);
        DocumentBuilder parser = dbf.newDocumentBuilder();
        parser.setErrorHandler(handler);
        return parser.parse(stream);
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['158']
  metadata:
    en:
      details: __empty__
'359':
  en:
    title: Sensitive information in source code - Credentials
    description: >
      The repository stores sensitive information
      such as users, passwords, emails, API
      credentials, among others.
    impact: >
      Obtain sensitive information
      to compromise other resources or services
    recommendation: >
      - Remove the hardcoded sensitive information
      and purge git logs

      - Change login credentials that were compromised.

      - Load sensitive data from secure sources such
      as key vault, encrypted configuration files or
      environment variables.
    threat: >
      External attacker with access to source code.
  es:
    title: Sensitive information in source code - Credentials
    description: >
      En el repositorio se encuentra almacenada
      información sensible como usuarios, contraseñas,
      correos electrónicos, credenciales de API, entre otros.
    impact: >
      Obtener información sensible
      para comprometer otros recursos o servicios
    recommendation: >
      - Eliminar la información sensible quemada en el
      código fuente y purgar el historial de git.

      - Cambiar las credenciales de acceso que
      se vieron comprometidas.

      - Cargar los datos sensibles desde fuentes
      seguras como bóveda de claves, archivos de
      configuración cifrados o variables de entorno.
    threat: >
      Atacante externo con acceso al código fuente.
  category: Information Collection
  examples:
    non_compliant: |
      The API key is stored in plain text in the source code
      ```javascript
      const API_KEY = "KEY_inplaneText";

      function getInformation(userInput){
        const info = fetch("url", API_KEY);
        //Return information
      }
      ```
    compliant: |
      All credentials are stored as encrypted secrets
      ```javascript
      const key = Buffer.from(keyString.substring(0, 8), "utf8");

      function getInformation(userInput){
        const info = fetch("url", key);
        //Return information
      }
      ```
  remediation_time: '90'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['145', '156', '266']
  metadata:
    en:
      details: __empty__
'360':
  en:
    title: Clickjacking
    description: >
      The application can be embeded in malicious iframes
      allowing an attacker to hijack the user clicks
      to perform actions without the user consent.
    impact: >
      Hijack the user clicks to execute unintended actions.
    recommendation: >
      Set the frame-ancestors policy
      in the Content Security Policy
      using a secure configuration.
    threat: >
      Anonymous attacker from Internet.
  es:
    title: Clickjacking
    description: >
      La aplicación puede ser incrustada en frames maliciosos
      permitiéndole a un atacante secuestrar los clicks de un usuario
      para ejecutar acciones sin su consentimiento.
    impact: >
      Forzar al usuario a ejecutar acciones no deseadas
    recommendation: >
      Establecer la política frame-ancestors
      en la cabecera Content Security Policy
      utilizando una configuración segura.
    threat: >
      Atacante anónimo desde Internet.
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The Content Security Policy header has an insecure configuration
      ```http
      HTTP/1.1 200 OK
            "No CSP or X-Frame-Options directive"
      ```
    compliant: |
      The Content security Policy is securely configured
      ```http
      HTTP/1.1 200 OK
      Content-Security-Policy: frame-ancestors 'none';
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: O
      report_confidence: C
  requirements: ['175']
  metadata:
    en:
      details: __empty__
'361':
  en:
    title: Missing secure obfuscation - JavaScript
    description: >
      It is possible to obtain source code from
      the application since it has only been
      partially obfuscated in a secure way.
      This could allow an attacker to understand
      the inner workings of the application.
    impact: >
      - Understand the operation of the application
      in order to increase the attack vector.

      - Identify validations performed by the front end.
    recommendation: >
      Perform an obfuscation process to the
      code exposed in web applications.
    threat: >
      Unauthorized user from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The source code has been stored without using any form of obfuscation
      ```javascript
      function calculatePay(SpecialList clientGroup){
        while(clientGroup.HasMore()){
          clientGroup.getNext(true);
          client.updatePay();
          makePay(client);
        }
      }
      ```
    compliant: |
      The source code is stored using obfuscation techniques like a rename method
      ```javascript
      function calculatePay(a b){
        while(b.c()){
          b.a(true);
          c.a();
          b(c);
        }
      }
      ```
  remediation_time: '60'
  es:
    title: Missing secure obfuscation - JavaScript
    description: >
      Es posible obtener código fuente de la
      aplicación puesto que solo ha sido
      parcialmente ofuscado de forma segura.
      Esto podría permitirle a un atacante entender
      el funcionamiento interno de la aplicación.
    impact: >
      - Entender el funcionamiento de la aplicación con
      el fin de incrementar el vector de ataque.

      - Identificar validaciones que realiza el front.
    recommendation: >
      Realizar un proceso de ofuscación al código
      expuesto en las aplicaciones web.
    threat: >
      Usuario no autorizado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['159']
  metadata:
    en:
      details: __empty__
'362':
  en:
    title: Technical information leak - Content response
    description: >
      It is possible to obtain technical information such as:

      - System component versions (HTTP headers, service banner, etc.)

      - Specific information about the configuration of server
      components (php.ini, web.config)
    impact: >
      Gather technical information to craft new attack vectors.
    recommendation: >
      Remove web services and files that exposes technical information.
    threat: >
      Anonymous attacker from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The source code includes code to debug the php.ini configuration files
      ```php
      function debug_to_console($data) {
        $output = $data;
        if (is_array($output))
          $output = implode(',', $output);
        echo "<script>console.log('Debug Objects: " . $output . "' );</script>";
      }

      debug_to_console(phpinfo());
      ```
    compliant: |
      The source code does not contain functions or files that expose sensitive information like configuration settings
      ```php
      function debug_to_console($data) {
        $output = $data;
        if (is_array($output))
          $output = implode(',', $output);
        echo "Output message";
      }
      ```
  remediation_time: '60'
  es:
    title: Technical information leak - Content response
    description: >
      Es posible obtener información técnica como:

      - Versiones de componentes del sistema (cabeceras HTTP,
      banner de servicio, etc.)

      - Información específica sobre la configuración de los
      componentes del servidor (php.ini, web.config)
    impact: >
      Reunir información técnica para elaborar nuevos vectores de ataque.
    recommendation: >
      Eliminar los servicios web y los archivos
      que exponen información técnica.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['077', '176']
  metadata:
    en:
      details: __empty__
'363':
  en:
    title: Weak credential policy - Password strength
    description: >
      The credential policy present in the system
      does not have the recommended parameters.
    impact: >
      Allow users to assign weak passwords to
      their accounts, which can later be easily
      found by an attacker through brute force
      or dictionary attacks.
    recommendation: >
      Establish a policy for credential creation
      that involves phrases and not word-based passwords.
    threat: >
      Attacker with an account creation
      invitation from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The resource has a weak password configuration settings
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 12
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: true
              ExcludeNumbers: false
              ExcludePunctuation: true
              ExcludeUppercase: false
              IncludeSpace: true
              RequireEachIncludedType: false
        MySecret2:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
      ```
      Using the AWS CLI, the following command returns the password policy for the AWS Account
      ```
      $ aws iam get-account-password-policy
      ```
      The return policy has the following structure:
      ```
      {
        "PasswordPolicy": {
          "AllowUsersToChangePassword": true,
          "RequireLowercaseCharacters": false,
          "RequireUppercaseCharacters": false,
          "MinimumPasswordLength": 8,
          "RequireNumbers": false,
          "RequireSymbols": false,
          "HardExpiry": false,
          "ExpirePasswords": false
        }
      }
      ```
      If the password policy does not comply with strong configuration settings, the policy is insecure
    compliant: |
      The resource has strong secure password configuration settings
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 16
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: false
              ExcludeNumbers: false
              ExcludePunctuation: false
              ExcludeUppercase: false
              IncludeSpace: false
              RequireEachIncludedType: true
        MySecret2:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret has a dynamically generated secret password."
      ```
  remediation_time: '30'
  es:
    title: Weak credential policy - Password strength
    description: >
      La política de credenciales presente en el
      sistema no cuenta con los parámetros recomendados.
    impact: >
      Permitir que los usuarios asignen contraseñas
      débiles a sus cuentas, las cuales posteriormente
      pueden ser fácilmente encontradas por un atacante
      mediante ataques de fuerza bruta o diccionario.
    recommendation: >
      Establecer una política para la creación de
      credenciales que involucre frases y no
      contraseñas basadas en palabras.
    threat: >
      Atacante con una invitación de creación
      de cuenta desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['130', '132', '133', '139', '332']
  metadata:
    en:
      details: __empty__
'364':
  en:
    title: Weak credential policy - Temporary passwords
    description: >
      Temporary passwords do not have strong enough
      security policies.
    impact: >
      Compromise temporary passwords
      to gain unauthorized access to the application
    recommendation: >
      Set secure temporary passwords
      by following the recommended best practices.
    threat: >
      Anonymous attacker from the Internet
  category: Unexpected Injection
  examples:
    non_compliant: |
      The resource has weak password configuration settings
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForTemporaruPassword
            Description: "This secret generates temporary passwords"
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 6
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: true
              ExcludeNumbers: true
              ExcludePunctuation: true
              ExcludeUppercase: true
              IncludeSpace: true
              RequireEachIncludedType: false
      ```
    compliant: |
      The resource has strong secure password configuration settings
      ```yaml
      Resources:
        MySecret1:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForTemporaruPassword
            Description: "This secret generates temporary passwords"
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 18
              ExcludeCharacters: '"@/\'
              ExcludeLowercase: false
              ExcludeNumbers: false
              ExcludePunctuation: false
              ExcludeUppercase: false
              IncludeSpace: false
              RequireEachIncludedType: true
      ```
  remediation_time: '30'
  es:
    title: Weak credential policy - Temporary passwords
    description: >
      Las contraseñas temporales no cuentan
      con políticas de seguridad lo suficientemente estrictas.
    impact: >
      Comprometer contraseñas temporales
      para ganar acceso no autorizado a la aplicación
    recommendation: >
      Establecer contraseñas temporales seguras
      siguiendo las mejores prácticas recomendadas
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['130', '132', '133', '139', '332']
  metadata:
    en:
      details: __empty__
'365':
  en:
    title: Authentication mechanism absence or evasion - Response tampering
    description: >
      The OTP validation is performed according
      to the response of the request, an attacker
      can modify the response of the request to
      include the success message and thus continue
      with the flow to do the unblocking.
    impact: >
      Skip OTP validation.
    recommendation: >
      Set up an authentication process for every
      resource with business-critical functionality.
      Perform the pertinent validations of the
      critical functionalities in the back-end.
    threat: >
      Unauthorized external attacker.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The OTP functionality sends an insecure temporary password
      ```javascript
      const requestPasswordTemporary = async (user) => {
        if (!user) throw new Error("User does not exist");
        //Password setup with an insecure algorithm, only 8 chars in length
        const generatedPassword = createPassword(8, true, true);
        //Send temporary insecure password
        sendEmail(user.email,"Password Reset Request",{name: user.name,password: generatedPassword},"./template/requestResetPassword.handlebars");
        return link;
      };
      ```
    compliant: |
      The OTP uses a secure method to generate temporary passwords
      ```javascript
      const requestPasswordReset = async (email) => {
        const user = await User.findOne({ email });
        if (!user) throw new Error("User does not exist");
        let token = await Token.findOne({ userId: user._id });
        if (token) await token.deleteOne();
        let resetToken = crypto.randomBytes(32).toString("hex");
        const hash = await bcrypt.hash(resetToken, Number(bcryptSalt));
        const link = `${clientURL}/passwordReset?token=${resetToken}&id=${user._id}`;
        const await token();
        sendEmail(user.email,"Password Reset Request",{name: user.name,link: link,},"./template/requestResetPassword.handlebars");
        return link;
      };
      ```
  remediation_time: '90'
  es:
    title: Authentication mechanism absence or evasion - Response tampering
    description: >
      La validación de OTP se realiza según la
      respuesta de la petición, un atacante puede
      modificar el response de la petición para que
      incluya el mensaje de success y así continuar
      con el flujo para hacer los desbloqueos.
    impact: >
      Saltarse la validación del OTP.
    recommendation: >
      Poner para todo recurso con una funcionalidad
      crítica para el negocio un proceso de autenticación.
      Realizar las validaciones pertinentes de las
      funcionalidades críticas en la parte del back.
    threat: >
      Atacante externo no autorizado.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '323']
  metadata:
    en:
      details: __empty__
'366':
  en:
    title: Inappropriate coding practices - Transparency Conflict
    description: >
      The application uses Transparency attributes
      such as SecurityCriticalAttribute and SecuritySafeCriticalAttribute
      to identify code that performs critical security operations.
      However a trasparency conflict is created
      when a member is marked with a security attribute
      that has a different transparency than the security attribute
      of a container of the member.
    impact: >
      Cause unexpected behaviors in the application.
    recommendation: >
      Remove nested transparency annotation
      to avoid security attributes conflicts.
    threat: >
      Anonymous attacker from Internet.
  es:
    title: Inappropriate coding practices - Transparency Conflict
    description: >
      La aplicación utiliza atributos de transparencia
      como SecurityCriticalAttribute y SecuritySafeCriticalAttribute
      para identificar código que ejecuta operaciones críticas de seguridad.
      Sin embargo, se crea un conflicto de transparencia
      cuando un miembro es marcado con un atributo de seguridad
      que tiene una transparencia diferente
      a la transparencia del contenedor de dicho miembro.
    impact: >
      Causar comportamientos inesperados en la aplicación.
    recommendation: >
      Eliminar anotaciones de transparencia anidadas
      para evitar conflictos en los atributos de seguridad.
    threat: >
      Atacante anónimo desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are nested transparency annotations in the source code
      ```c {3,7,15}
      using System;
      using System.Security;

      namespace MyLibrary{

        [SecurityCritical]
        public class Foo{

          [SecuritySafeCritical]
          public void Bar(){
            //Do something
          }

          public void Testeo(){
            //Do something
          }
        }
      }
      ```
    compliant: |
      The source code does not have any transparency annotations in production
      ```c {3,7,15}
      using System;
      using System.Security;

      namespace MyLibrary{
        public class Foo{
          public void Bar(){
            //Do something
          }
          public void Testeo(){
            //Do seomething
          }
        }
      }
      ```
  remediation_time: '30'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['158']
  metadata:
    en:
      details: |
        https://rules.sonarsource.com/csharp/type/Vulnerability/RSPEC-4211
'367':
  en:
    title: Sensitive information in source code - Git history
    description: >
      Sensitive information such as usernames,
      service credentials or access tokens
      can be found in the git history.
    impact: >
      Obtain sensitive information to compromise
      more resources or services.
    recommendation: >
      - Remove the sensitive information
      from the Git history.

      - Change the compromised access credentials.
    threat: >
      Authenticated user from Internet with access to the source code.
  category: Information Collection
  examples:
    non_compliant: |
      A file found in the git history has sensitive information like API Keys
      ```yaml
      commit ~HASH (HEAD -> master, origin/master, origin/HEAD)
      Author: user
      Date:   Tue Jun 28 12:57:38 2022 -0500
        commit message

      diff --git mypath
      index 6894a51802..99d0f0a22f 100644
      --- a/integrates/front/src/components/Button/index.tsx
      +++ b/integrates/front/src/components/Button/index.tsx
      @@ -6,41 +6,41 @@ public void (*args) {
        interface IVariant {
        -  userAdmin: "Myuser";
        -  password: "exposedPassword";
        +  password: {mykeysecret};
        }
      }
      ```
    compliant: |
      If there is sensitive information in the git history, the repo could be cleared with
        $ rm -rf .git
      Resetting the git history without the sensitive commit information
  remediation_time: '120'
  es:
    title: Sensitive information in source code - Git history
    description: >
      Información sensible como nombres de usuario,
      credenciales de servicios, o tokens de acceso vigentes
      pueden ser encontrados en el historial de Git.
    impact: >
      Obtener información sensible para comprometer
      más recursos o servicios.
    recommendation: >
      - Eliminar la información sensible
      del historial de Git.

      - Cambiar las claves de acceso comprometidas.
    threat: >
      Atacante autenticado desde Internet con acceso al código fuente.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['145', '156', '266']
  metadata:
    en:
      details: __empty__
'368':
  en:
    title: Unrestricted access between network segments - StrictHostKeyChecking
    description: >
      The JSch StrictHostKeyChecking configuration
      is set to no, this indicates that connections
      may be made to unknown servers or servers that
      have changed their keys, generating new ones
      and adding them by default to the known server files.
    impact: >
      - Start connections to untrusted servers.

      - Increase the possibility of attacks such
      as MitM and spoofing.

      - Receive or send malicious data or files.

      - Leak sensitive information such as users and passwords.
    recommendation: >
      - Limit access to administrative services such as SSH.

      - Implement safe values for StricktHostKeyChecking configuration.
    threat: >
      Anonymous attacker from the Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The application does not enable Strict Host Key Checking
      ```java
      java.util.Properties config = new java.util.Properties();
      config.put("StrictHostKeyChecking", "no");
      session.setConfig(config);
      ```
    compliant: |
      The application enables Strict Host Key Checking
      ```java
      java.util.Properties config = new java.util.Properties();
      config.put("StrictHostKeyChecking", "yes");
      session.setConfig(config);
      ```
  remediation_time: '15'
  es:
    title: Unrestricted access between network segments - StrictHostKeyChecking
    description: >
      La configuración de JSch StrictHostKeyChecking
      está configurado con el valor no, esto indica
      que se podrán realizar conexiones con servidores
      desconocidos o que hayan cambiado sus llaves,
      generando nuevas y añadiéndolas por defecto a
      los archivos de servidores conocidos.
    impact: >
      - Iniciar conexiones con servidores no confiables.

      - Incrementar la posibilidad de ataques como
      MitM y spoofing.

      - Recibir o enviar data o archivos maliciosos.

      - Filtrar información sensible como usuarios y contraseñas.
    recommendation: >
      - Limitar los accesos a servicios administrativos como SSH.

      - Implementar valores seguros para la
      configuración StricktHostKeyChecking.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['255']
  metadata:
    en:
      details: __empty__
'369':
  en:
    title: Insecure object reference - User deletion
    description: >
      The system does not have protections
      that prevent the removal of users from
      the application, leaving it inoperative
      and affecting its integrity to a high degree.
      It is even evident that once the user is
      deleted, the session is not deleted and still
      allows the user to continue browsing, which
      should also be corrected.
    impact: >
      - Remove all users from the platform.

      - Affect other processes and connections
      that depend on the existence of users.
    recommendation: >
      The respective controls must be established
      to mitigate any functionality that is foreign
      to the current role.
    threat: >
      Authenticated attacker from the Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      The user input is not validated on the server side, which could potentially allow all users to be deleted
      ```javascript
      router.delete('/delete/:username', (req, res) => {
          const { username } = req.params;
          db.collection('username').findAndDelete({username: username},
          (err, result) => {
            if (err) return res.send(500, err);
            res.redirect('/');
          });
      });
      ```
    compliant: |
      All inputs are correctly validated on the server side
      ```javascript
      router.delete('/delete/:username', (req, res) => {
          const { username, password} = req.params;
          const isUserAuthorized(username, password);
          if isUserAuthorized{
            db.collection('username').findOneAndDelete({username: username},
            (err, result) => {
              if (err) return res.send(500, err);
              if (result) deleteSessionToken(username);
              res.redirect('/');
            });
          }else{
            res.send(500, "You do not have the required permissions for that action");
          }
      });
      ```
  remediation_time: '60'
  es:
    title: Insecure object reference - User deletion
    description: >
      El sistema no tiene protecciones que impidan
      eliminar usuarios de la aplicación, permitiendo
      dejar sin operatividad y afectando la integridad
      de forma alta.
      Incluso se evidencia, que una vez eliminado el
      usuario, la sesión no se elimina y aún deja
      seguir navegando al usuario, lo que también
      debería corregirse.
    impact: >
      - Eliminar todos los usuarios de la plataforma.

      - Afectar otros procesos y conexiones que dependen
      de la existencia de los usuarios.
    recommendation: >
      Se deben establecer los respectivos controles
      para mitigar cualquier funcionalidad que sea
      ajena al rol actual.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: H
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['176']
  metadata:
    en:
      details: __empty__
'370':
  en:
    title: Authentication mechanism absence or evasion - Security Image
    description: >
      It is possible to eliminate the use of the
      image and security phrase at user login.
    impact: >
      Remove image and security phrase which can
      facilitate other types of attacks.
    recommendation: >
      Make sure that only one number of an existing
      image can be sent so that the image and passphrase
      function is not eliminated.
    threat: >
      User authenticated from the Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There is a functionality to bypass the verification of the user credentials and accees sensitive information
      ```javascript
      app.Register('/userRegister', function(req, res, next){
        const img = req.user.secImg;
        const phrase = req.user.secPhrase;
        const isCredentialsValid = checkCredentials(img, phrase);
        if isCredentialsValid{
          res.redirect('/profile/SecurityCredentials');
        }else{
          //If there is a mistake in the credentials sent, the user can still bypass the controls
          res.redirect('/profile/signIn');
        }
      });
      ```
    compliant: |
      The application correctly validates credentials and handles wrong credentials by redirecting user to login
      ```javascript
      app.Register('/userRegister', function(req, res, next){
        const img = req.user.secImg;
        const phrase = req.user.secPhrase;
        const isCredentialsValid = checkCredentials(img, phrase);
        if isCredentialsValid{
          res.redirect('/profile/SecurityCredentials');
        }else{
          //Code to redirect and retry to validate security credentials
          res.redirect('/userLogin');
        }
      });
      ```
  remediation_time: '240'
  es:
    title: Authentication mechanism absence or evasion - Security Image
    description: >
      Es posible eliminar el uso de la imagen y frase
      de seguridad en el inicio de sesión de un usuario.
    impact: >
      Eliminar imagen y frase de seguridad lo cual
      puede facilitar otro tipo de ataques.
    recommendation: >
      Asegurarse que solo pueda enviarse un número de
      una imagen existente y así no se elimina la función
      de imagen y frase de seguridad.
    threat: >
      Usuario autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['227', '228', '229', '231', '235', '264', '323']
  metadata:
    en:
      details: __empty__
'371':
  en:
    title: DOM-Based cross-site scripting (XSS)
    description: >
      The web application generates dynamic web
      content from the client side without validating
      the origin of the potentially malicious data.
    impact: >
      Generate web pages that could contain malicious
      scripts injected into untrusted data.
    recommendation: >
      Perform server-side and client-side input
      data validation to avoid the most common
      script injection attacks.
    threat: >
      Unauthorized attacker from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      The application takes user input without validating it on the server side
      ```javascript
      var search = document.getElementById('search').value;
      var results = document.getElementById('results');
      results.innerHTML = "You searched for:" + search;
      ```
    compliant: |
      The application performs server side validation of all user inputs
      ```javascript
      var search = document.getElementById('search').value;
      var results = document.getElementById('results');
      results.innerHTML = "You searched for:" + verifyData(search);
      function verifyData(str){
        return String(str).replace("ValidRegex");
      }
      //Server side validation should also be included in the code
      ```
  remediation_time: '90'
  es:
    title: DOM-Based cross-site scripting (XSS)
    description: >
      La aplicación web genera contenido web dinámico
      desde el lado del cliente sin validar el origen
      de los datos potencialmente maliciosos.
    impact: >
      Generar páginas web que podrían contener scripts
      maliciosos inyectados en datos que no son de confianza.
    recommendation: >
      Realizar la validaciones de datos de entrada
      en el lado del servidor y del cliente para evitar
      los ataques más comunes de inyección de scripts.
    threat: >
      Atacante sin autorización desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'372':
  en:
    title: Use of an insecure channel - HTTP
    description: >
      Client information is transmitted over
      port 80 or HTTP, a channel that does not
      use encryption, so credentials and confidential
      information can be captured in plain text.
    impact: >
      Compromise sensitive information that
      travels in plain text.
    recommendation: >
      Deploy the application over the HTTPS
      secure channel using TLS.
    threat: >
      Anonymous attacker on adjacent network
      running a MitM.
  category: Information Collection
  examples:
    non_compliant: |
      The resource uses an insecure http configuration
      ```terraform
      resource "azurerm_storage_account" "vulnerable" {
        name                      = "storageaccountname"
        resource_group_name       = azurerm_resource_group.example.name
        location                  = azurerm_resource_group.example.location
        account_tier              = "Standard"
        account_replication_type  = "GRS"
        min_tls_version           = "TLS1_0"
        enable_https_traffic_only = false
        queue_properties {
          logging {
            delete                = true
            read                  = true
            write                 = true
            version               = "1.0"
            retention_policy_days = 10
          }
        }
        network_rules {
          default_action = "Deny"
        }
      }
      ```
      The resource has unsafe protocol enabled
      ```yaml
      ELBv2targetGroup2:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckEnabled: false
          Name: MyTargets
          Protocol: HTTP
          TargetType: lambda
          Targets:
          - Id: [ MyLambdaFunction, Arn ]
      ```
      Using the AWS CLI, the following command returns security groups that have ingress rules that allow HTTP traffic
      ```
      $ aws ec2 describe-security-groups
            --region us-east-1
            --filters Name=ip-permission.from-port,Values=80 Name=ip-permission.to-port,Values=80 Name=ip-permission.cidr,Values='0.0.0.0/0'
            --query 'SecurityGroups[*].{Name:GroupName}'
      ```
      The command output returns any EC2 security groups that allow unrestricted HTTP access
    compliant: |
      The resource has https channel over tls securely configured
      ```terraform
      resource "azurerm_storage_account" "not_vulnerable" {
        name                     = "storageaccountname"
        resource_group_name      = azurerm_resource_group.example.name
        location                 = azurerm_resource_group.example.location
        account_tier             = "Standard"
        account_replication_type = "GRS"
        min_tls_version          = "TLS1_2"
        queue_properties {
          logging {
            delete                = true
            read                  = true
            write                 = true
            version               = "1.0"
            retention_policy_days = 10
          }
        }
        network_rules {
          default_action = "Deny"
        }
      }
      ```
  remediation_time: '60'
  es:
    title: Use of an insecure channel - HTTP
    description: >
      La información de los clientes es
      transmitida por el puerto 80 o HTTP, un
      canal que no usa cifrado, por lo cual
      pueden ser capturadas en texto plano
      credenciales e información confidencial.
    impact: >
      Comprometer información sensible que
      viaja en texto plano.
    recommendation: >
      Desplegar la aplicación sobre el canal
      seguro HTTPS utilizando TLS.
    threat: >
      Atacante anónimo en red adyacente ejecutando un MitM.
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'373':
  en:
    title: Use of an insecure channel - Oracle Database
    description: >
      Insecure connections from servers to the database.
      Encryption does not address all communications with
      the database, including transmissions from clients
      and transmissions from middle tiers.
    impact: >
      - Data can be modified, replayed
      and no longer confidential.
      Also, lost packets can be detected.

      - Intercept sensitive information that
      travels over an intranet.
    recommendation: >
      - Set up encrypted communications channels.
      Enable Oracle Database encryption for data that
      is sent over a network.

      - Ensure that connections only come from a physically
      secure terminal, or from an application web server
      with a known IP address.

      - In the case of a sensitive database, ensure that
      connections only come from certain points in the network.
    threat: >
      Anonymous attacker from adjacent network.
  category: Information Collection
  examples:
    non_compliant: |
      The db service uses an insecure encryption algorithm
      ```c
      SQLNET.ENCRYPTION_SERVER = [accepted]
      SQLNET.ENCRYPTION_TYPES_SERVER = (AES128)
      ```
    compliant: |
      The db service uses a secure encryption algorithm
      ```c
      SQLNET.ENCRYPTION_SERVER = [accepted]
      SQLNET.ENCRYPTION_TYPES_SERVER = (AES256)
      ```
  remediation_time: '60'
  es:
    title: Use of an insecure channel - Oracle Database
    description: >
      Conexiones inseguras desde los servidores
      a la base de datos.
      El cifrado no aborda todas las comunicaciones con la
      base de datos, incluidas las transmisiones de los
      clientes y las transmisiones de los niveles intermedios.
    impact: >
      - Los datos pueden modificarse, reproducirse
      y dejar de ser confidenciales.
      Además, se pueden detectar los paquetes perdidos.

      - Interceptar información sensible que
      viaja por una intranet.
    recommendation: >
      - Configurar canales de comunicación encriptados.
      Habilite el cifrado de la base de datos Oracle
      para los datos que se envían a través de una red.

      - Asegúrese de que las conexiones sólo proceden de
      un terminal físicamente seguro, o de un servidor
      web de aplicaciones con una dirección IP conocida.

      - En el caso de una base de datos sensible,
      asegúrese de que las conexiones sólo proceden de
      determinados puntos de la red.
    threat: >
      Atacante anónimo de la red adyacente.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['181']
  metadata:
    en:
      details: |
        https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#owasp-masvs
'374':
  en:
    title: Security controls bypass or absence - Debug Protection
    description: >
      Debug controls protection do not span the
      wide variety of use models from internal
      hardware debug through debug of performance
      issues of software running.
      The application is deployed to unauthorized
      actors with debugging code still enabled or active.
    impact: >
      - Create unintended entry points or expose sensitive information.

      - Start a successful remote debugging session
      and is likely to disclose confidential information
      about the web application and supporting
      infrastructure.
    recommendation: >
      - Assign debug programs user right only to administrators
      or trusted users to reduce the risk of this potential vulnerability.

      - Remove debug code before deploying the application.
    threat: >
      An attacker access to the application and can debug it, will
      be able to get sensitive information stored in a device.
  category: Access Subversion
  examples:
    non_compliant: |
      Debug functions like printStackTrace are present in production code
      ```c {3,7,15}
      public class myClass {
        public static void main(String[] args) {
          try {
            //Code to do something
            System.out.println(result);
          } catch (Exception e) {
            e.printStackTrace();
          }
        }
      }
      ```
    compliant: |
      There are no debugging functions present in the source code
      ```c {3,7,15}
      public class myClass {
        public static void main(String[] args) {
          try {
            //Code to do something
          } catch (Exception e) {
            //Handle exception
          }
        }
      }
      ```
  remediation_time: '450'
  es:
    title: Security controls bypass or absence - Debug Protection
    description: >
      La protección de los controles de depuración
      no abarca la amplia variedad de modelos de uso, desde
      la depuración interna del hardware hasta la depuración
      de los problemas de rendimiento del software en ejecución.
      La aplicación se despliega a actores no autorizados con
      el código de depuración aún habilitado o activo.
    impact: >
      - Crear puntos de entrada involuntarios o
      exponer información sensible.

      - Iniciar con éxito una sesión de depuración
      remota y es probable que revele información
      confidencial sobre la aplicación web y la
      infraestructura de apoyo.
    recommendation: >
      - Asigne el derecho de usuario de los programas
      de depuración sólo a los administradores o usuarios
      de confianza para reducir el riesgo de esta posible vulnerabilidad.

      - Elimine el código de depuración antes de desplegar la aplicación.
    threat: >
      Un atacante que acceda a la aplicación y pueda depurarla,
      podrá obtener información sensible almacenada en un dispositivo.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266']
  metadata:
    en:
      details: |
        https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#owasp-masvs
'375':
  en:
    title: Security controls bypass or absence - Tampering Protection
    description: >
      The application has no control to ensure that a third party has not modified and recompiled the
      application, allowing to modify and evade validations such as the detection of a root user on the device.
    impact: >
      Elude application validations.
    recommendation: >
      Perform validations on the server during
      the entire application process.
    threat: >
      Authorized attacker from the Internet.
  category: Access Subversion
  examples:
    non_compliant: |
      There is a functionality on the code that allows the user to bypass the authorization verification
      ```javascript
      app.post('/user/payment', (req, res) => {
        const { username, password, paymentInfo } = req.body;
        const user = users.find(u => { return u.username === username && u.password === password });
        const validPayInfo = isValidPayment(paymentInfo.number, user.pendingBills);
        if (user && validPayInfo) {
          //Continue with the process without performing extra validation
        } else {
            res.send('Unable to process payment. Try again');
        }
      });
      ```
    compliant: |
      The application securely checks the user credentials before accesing sensitive information
      ```javascript
      app.post('/user/payment', (req, res) => {
        const { username, password, paymentInfo } = req.body;
        const user = users.find(u => { return u.username === username && u.password === password });
        const validPayInfo = isValidPayment(paymentInfo.number, user.pendingBills);
        if (user && validPayInfo) {
          //This code should validate the rest of the application process, setting limits for number of tries and verifying user settings
        } else {
            res.send('Unable to process payment. Try again');
        }
      });
      ```
  remediation_time: '450'
  es:
    title: Security controls bypass or absence - Tampering Protection
    description: >
      La aplicación no cuenta con un control que garantice que un tercero no haya modificado y vuelto
      a compilar la aplicación, permitiendo modificar y evadir validaciones como la detección de un
      usuario root en el dispositivo.
    impact: >
      Eludir las validaciones de la aplicación.
    recommendation: >
      Realizar validaciones en el servidor durante
      todo el proceso de solicitud.
    threat: >
      Atacante autorizado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266']
  metadata:
    en:
      details: |
        https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#owasp-masvs
'376':
  en:
    title: Security controls bypass or absence - Reversing Protection
    description: >
      The application does not have anti-reverse
      engineering protections.
      Sophisticated reverse engineering tools and
      techniques could bypass weak security controls
      against reversing protection.
    impact: >
      - Reveal cryptographic constants and ciphers.

      - Steal intellectual property.

      - Perform attacks against back end systems.
    recommendation: >
      - Encrypt the executable version of the software.

      - Use additional protection against reverse engineering,
      a combination of obfuscation techniques.

      - Extend the same protection to software or firmware upgrades.

      - Select automated anti-reversing techniques based
      on which one could provide a best fit for business
      security goals, performance requirements, and cost sensitivity.
    threat: >
      Anonymous attacker performing an analysis of the final
      core binary to determine its source code, algorithms
      and resources embedded within the app to execute dubious actions.
  category: Access Subversion
  examples:
    non_compliant: |
      A simple example showing a possible obfuscation procedure
      ```java
      //Code before obfuscation
      private void calculatePay(SpecialList clientGroup){
        while(clientGroup.HasMore()){
          clientGroup.getNext(true);
          client.updatePay();
          makePay(client);
        }
      }
      ```
    compliant: |
      The source code includes a rename Obfuscation method
      ```java
      private void calculatePay(a b){
        while(b.c()){
          b.a(true);
          c.a();
          b(c);
        }
      }
      ```
  remediation_time: '450'
  es:
    title: Security controls bypass or absence - Reversing Protection
    description: >
      La aplicación no tiene protecciones contra
      la ingeniería inversa.
      Las herramientas y técnicas sofisticadas de ingeniería
      inversa podrían eludir los débiles controles de
      seguridad contra la protección inversa.
    impact: >
      - Revelar constantes criptográficas y cifrados.

      - Robar propiedad intelectual.

      - Realizar ataques contra los sistemas de back-end.
    recommendation: >
      - Cifrar la versión ejecutable del software.

      - Utilizar una protección adicional contra
      la ingeniería inversa, una combinación de
      técnicas de ofuscación.

      - Extender la misma protección a las
      actualizaciones de software o firmware.

      - Seleccionar las técnicas automatizadas contra la
      ingeniería inversa en función de la que mejor se adapte
      a los objetivos de seguridad de la empresa, los requisitos
      de rendimiento y la sensibilidad a los costes.
    threat: >
      Atacante anónimo realizando un análisis del
      binario del núcleo final para determinar su
      código fuente, los algoritmos y los recursos
      incrustados en la aplicación para ejecutar acciones dudosas.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['062', '266']
  metadata:
    en:
      details: |
        https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#owasp-masvs
'377':
  en:
    title: Insufficient data authenticity validation - Device Binding
    description: >
      Insecure device pairing results in an insecure
      communication between two physical devices.
      Device-pairing protocols configured are vulnerable
      to the misbinding attacks, it arises from the lack
      of verifiable identifiers.
    impact: >
      - Spoof, intercept and modify messages in
      the network in arbitrary ways.

      - Allow malicious behavior by one of the
      intended communication endpoints.
    recommendation: >
      - Establish a shared cryptographic key between
      two or more communication endpoints to use the
      shared key for protecting communication integrity
      and confidentiality.

      - Specify security properties as correspondence
      assertions in addition to basic authentication
      properties, it can help to detect subtle flaws
      that might otherwise go unnoticed.
    threat: >
      Attacker may impersonate one of the device
      communication endpoints or set itself as a
      man in the middle (MitM) between them.
  category: Data Manipulation
  examples:
    non_compliant: |
      The application allow sconnection to bluetooth device without any authentication
      ```java
      private val mmServerSocket: BluetoothServerSocket? by lazy(LazyThreadSafetyMode.NONE) {
        bluetoothAdapter?.listenUsingInsecureRfcommWithServiceRecord(NAME, MY_UUID)
      }

      override connectDevice run(){
        var shouldLoop = true
        while (shouldLoop) {
          val socket: BluetoothSocket? = try {
            mmServerSocket?.accept();
          } catch (e: IOException) {
            ...
          }
          socket?.also {
            manageMyConnectedSocket(it);
            ...
          }
        }
      }
      ```
    compliant: |
      The bluetooth connections are validated before being authorized in these case
      ```java
      private val mmServerSocket: BluetoothServerSocket? by lazy(LazyThreadSafetyMode.NONE) {
        bluetoothAdapter?.listenUsingInsecureRfcommWithServiceRecord(NAME, MY_UUID)
      }

      override connectDevice run(){
        establish_ssh_connection_key();
        var shouldLoop = true
        while (shouldLoop) {
          val socket: BluetoothSocket? = try {

            mmServerSocket?.accept();
          } catch (e: IOException) {
            ...
          }
          socket?.also {
            manageMyConnectedSocket(it);
            mmServerSocket?.close();
            shouldLoop = false;
          }
        }
      }
      ```
  remediation_time: '300'
  es:
    title: Insufficient data authenticity validation - Device Binding
    description: >
      El emparejamiento inseguro de dispositivos da lugar
      a una comunicación insegura entre dos dispositivos físicos.
      Los protocolos de emparejamiento de dispositivos
      configurados son vulnerables a los ataques de
      emparejamiento erróneo, que surgen de la falta
      de identificadores verificables.
    impact: >
      - Suplantar, interceptar y modificar mensajes en
      la red de forma arbitraria.

      - Permitir comportamiento malicioso por parte
      de uno de los puntos finales de comunicación
      previstos.
    recommendation: >
      - Establecer una clave criptográfica compartida
      entre dos o más puntos finales de comunicación,
      utilizar la clave compartida para proteger la
      integridad y confidencialidad de la comunicación.

      - Especificar las propiedades de seguridad como
      afirmaciones de correspondencia además de las propiedades
      básicas de autenticación, puede ayudar a detectar fallos
      sutiles que de otro modo podrían pasar desapercibidos.
    threat: >
      El atacante puede hacerse pasar por uno de los
      puntos finales de comunicación del dispositivo
      o establecerse como hombre en el medio (MitM) entre ellos.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: |
        https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#owasp-masvs
'378':
  en:
    title: Non-encrypted confidential information - Hexadecimal
    description: >
      The confidential information is encoded
      in hexadecimal allowing an attacker to
      view it in plain text when decoding it.
    impact: >
      Obtain confidential information
      by decoding hexadecimal.
    recommendation: >
      Use secure encryption methods to
      encrypt any sensitive information.
    threat: >
      An attacker from an adjacent network
      performing a sniffing attack.
  category: Information Collection
  examples:
    non_compliant: |
      The resource uses insecure encryption algorithms
      ```yaml
      Resources:
        EncryptedS3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            BucketName: SKIMS-ENCRYPTED-EXAMPLE-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - Encryption: Hexadecimal
          DeletionPolicy: Delete
      ```
    compliant: |
      All resources use secure encryption algorithms
      ```yaml
      Resources:
        EncryptedS3Bucket:
          Type: AWS::S3::Bucket
          Properties:
            BucketName: SKIMS-ENCRYPTED-EXAMPLE-BUCKET
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                - ServerSideEncryptionByDefault:
                    SSEAlgorithm: aws:kms
                    KMSMasterKeyID: KMS-KEY-ARN
          DeletionPolicy: Delete
      ```
  remediation_time: '30'
  es:
    title: Non-encrypted confidential information - Hexadecimal
    description: >
      La información confidencial es codificada
      en hexadecimal permitiendo a un atacante
      visualizarla en texto plano al decodificarla.
    impact: >
      Obtener información confidencial
      decodificando hexadecimal.
    recommendation: >
      Usar métodos de cifrado seguro para cifrar
      cualquier información sensible.
    threat: >
      Un atacante desde una red adyacente
      realizando un ataque de sniffing.
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185', '229', '264']
  metadata:
    en:
      details: __empty__
'379':
  en:
    title: Inappropriate coding practices - Unnecessary imports
    description: >
      The application imports modules that are not used.
      This is a bad practice because it loads modules
      that will not be used, and doing so unnecessarily
      increases the load.
    impact: >
      - Load functions and procedures that
      will not be used.

      - Cause suboptimal performance of the application.
    recommendation: >
      Import only the modules necessary for the
      correct functionality of the application.
    threat: >
      Authorized attacker from the Internet
      with access to the application.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are some imports declarations not used in the model
      ```javascript
      import unusedDataStructure from dbmodel
      ```
    compliant: |
      There are no import declarations unused
      ```javascript
      import dataStructure from dbmodel

      define filterdata(dataId){
        dataStructure.filter(x: dataId);
      }
      ```
  remediation_time: '15'
  es:
    title: Inappropriate coding practices - Unnecessary imports
    description: >
      La aplicación importa módulos que no se usan.
      Esta es una mala práctica debido a que se
      cargan módulos que no serán utilizados, y
      hacerlo aumenta innecesariamente la carga.
    impact: >
      - Cargar funciones y procedimientos
      que no serán utilizados.

      - Ocasionar un funcionamiento subóptimo de la aplicación.
    recommendation: >
      Importar solo los módulos necesarios para la correcta
      funcionalidad de la aplicación.
    threat: >
      Atacante autorizado desde Internet
      con acceso a la aplicación.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: X
      report_confidence: R
  requirements: ['158']
  metadata:
    en:
      details: https://rules.sonarsource.com/javascript/RSPEC-1128
'380':
  en:
    title: Supply Chain Attack - Docker
    description: >
      Docker dependencies are not pinned to an exact digest,
      making the Docker build unable the verify the integrity of the image
      and allowing a malicious actor to override the used components
      with malicious components without leaving a trace.
    impact: >
      Override depdendencies or component with malicious content.
    recommendation: >
      Use mechanisms such as git-commits, or artifacts and hashes
      to verify the data integrity.
    threat: >
      Anonymous attacker from Internet
      with write access to the provider releases.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are docker dependencies not pinned
      ```docker
      FROM node:12.2
      RUN apk add --no-cache python g++ make
      WORKDIR /app
      COPY . .
      RUN yarn install --production
      CMD ["node", "src/index.js"]
      ```
    compliant: |
      All docker dependencies are pinned using secure mechanisms
      ```docker
      FROM ubuntu@sha256:3235326357dfb65f1781dbc4df3b834546d8bf914e82cce58e6e6b676e23
      ARG DEBIAN_FRONTEND=noninteractive
      RUN apt update
      RUN apt install -y nginx php-fpm supervisor && \
        rm -rf /var/lib/apt/lists/* && \
        apt clean
      ```
  remediation_time: '15'
  es:
    title: Supply Chain Attack - Docker
    description: >
      Las dependencias de Docker no están pineadas a un digest específico,
      haciendo que el proceso de construcción
      sea incapaz de verificar la integridad de la imagen
      y permitiendo a un actor malicioso
      sobreescribir los componentes utilizados
      con componentes maliciosos
      sin dejar un rastro.
    impact: >
      Sobreescribir dependencias o componentes con contenido malicioso.
    recommendation: >
      Utilizar mecanismos como git-commits,
      o utilizar artefactos y hashes
      para verificar la integridad de los datos.
    threat: >
      Atacante anónimo desde Internet
      con acceso de escritura a los releasers del proveedor.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'381':
  en:
    title: Supply Chain Attack - Terraform
    description: >
      Terraform dependencies are not pinned,
      allowing a malicious actor to override the used components
      with malicious components
      without leaving a trace.
    impact: >
      Override depdendencies or component with malicious content.
    recommendation: >
      Use mechanisms such as git-commits, or artifacts and hashes
      to verify the data integrity.
    threat: >
      Anonymous attacker from Internet
      with write access to the provider releases.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are unpinned terraform dependencies
      ```json {4,8}
      required_providers {
        aws = {
          source  = "hashicorp/aws"
          version = "~> 3.23.0"
        }
      }
      ```
    compliant: |
      All terraform dependencies are pinned
      ```json {4,8}
      required_providers {
        aws = {
          source  = "github.com/hashicorp/example"
          version = "3.23.0"
        }
      }
      ```
  remediation_time: '15'
  es:
    title: Supply Chain Attack - Terraform
    description: >
      Las dependencias de Terraform no están pineadas,
      permitiendo a un actor malicioso
      sobreescribir los componentes utilizados
      con componentes maliciosos
      sin dejar un rastro.
    impact: >
      Sobreescribir dependencias o componentes con contenido malicioso.
    recommendation: >
      Utilizar mecanismos como git-commits,
      o utilizar artefactos y hashes
      para verificar la integridad de los datos.
    threat: >
      Atacante anónimo desde internet
      con acceso de escritura a los releasers del proveedor.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: |
        ### Why

        Terraform providers are installed as:
        ```json {4,8}
          required_providers {
            aws = {
              source  = "hashicorp/aws"
              version = "~> 3.23.0"
            }
            cloudflare = {
              source  = "cloudflare/cloudflare"
              version = "~> 2.20.0"
            }
          }
        ```
        not only they are not pinned,
        but also a version like 2.20.0 has no guarantees
        because a malicious actor
        with access to the provider release process
        can override tags with malicious content,
        changing the `legit 2.20.0` for `malicious 2.20.0`
        without us noticing
'382':
  en:
    title: Insufficient data authenticity validation - Front bypass
    description: >
      The credentials policy present in the
      system warns that these cannot be
      consecutive and/or repeated numbers,
      however this validation is only done in
      the front end of the application, so it
      is possible to modify the password from
      the same request and assign a key that
      goes against the policies.
    impact: >
      Bypass security policies assigned for user keys.
    recommendation: >
      The key creation policy must be validated on
      both the front and back ends of the application.
    threat: >
      Attacker without credentials from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not validate credentials on the back end
      ```java
      public void createUser(user) throws Exception {
        VOUserDetails u = createUniqueUser();
        u.setName(user.name);
        u.setPassword(user.password)
        is.createUser(u, Arrays.asList(UserRoleType.USER), null);
      }
      ```
    compliant: |
      The application validates user credentials on the back end
      ```java
      public static boolean isValidPassword(String password,String regex){
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(password);
        return matcher.matches();
      }
      ```
  remediation_time: '60'
  es:
    title: Insufficient data authenticity validation - Front bypass
    description: >
      La política de credenciales presente en
      el sistema advierte que estas no pueden
      ser números consecutivos y/o repetidos,
      no obstante dicha validación solo se hace
      en el front de la aplicación, por lo que
      es posible modificar la contraseña desde
      el mismo request y asignar una clave que
      va en contra de las políticas.
    impact: >
      Evadir las políticas de seguridad
      asignadas para las claves de usuario.
    recommendation: >
      La política de creación de claves debe ser validada
      tanto en el front como en el back de la aplicación.
    threat: >
      Atacante sin credenciales desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: __empty__
'383':
  en:
    title: Insecurely generated token - OTP
    description: >
      The OTP is generated client-side and sent
      to the server, so an attacker only needs
      to intercept the request to access the
      token and continue the application flow
      without needing access to the phone number used.
    impact: >
      Make requests without having access to
      the telephone number used or even use
      a fake telephone number.
    recommendation: >
      Generate OTPs and perform the corresponding
      validations always on the server side.
    threat: >
      Anonymous attacker from the Internet.
  category: Data Manipulation
  examples:
    non_compliant: |
      There is code present on the front end that generates the OTP
      ```javascript
      function generateOTP() {
        return OTP;
      }

      function userRequestedOtp(user){
        sendCode(generateOTP, user.email);
      }
      ```
    compliant: |
      OTP generation is handled on the back end
      ```javascript
      OTP_CONFIG: {
        upperCaseAlphabets: true,
        specialChars: false,
      };

      const otpGenerator = require('otp-generator');
      const { OTP_LENGTH, OTP_CONFIG } = require('../constants/constants');
      module.exports.generateOTP = () => {
        const OTP = otpGenerator.generate(OTP_LENGTH, OTP_CONFIG);
        return OTP;
      };

      const nodemailer = require('nodemailer');
      const transporter = nodemailer.createTransport(MAIL_SETTINGS);

      module.exports.sendMail = async (params) => {
        try {
          let info = await transporter.sendMail({MailBody,});
          return info;
        } catch (error) {
          ...
        }
      };
      ```
  remediation_time: '60'
  es:
    title: Insecurely generated token - OTP
    description: >
      El OTP es generado del lado del cliente y
      enviado al servidor, por lo que un atacante
      sólo necesita interceptar la petición para
      acceder al token y continuar con el flujo
      de la aplicación sin necesidad de tener
      acceso al número de teléfono usado.
    impact: >
      Realizar peticiones sin necesidad de tener
      acceso al número de teléfono usado o incluso
      usar un número de teléfono falso.
    recommendation: >
      Generar los OTPs y realizar las validaciones
      correspondientes siempre del lado del servidor.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['228']
  metadata:
    en:
      details: __empty__
'384':
  en:
    title: Inappropriate coding practices - Wildcard export
    description: >
      When exporting libraries, the wildcard
      operator (asterisk) is used, which exports
      all the functions of that library.
      This is a bad practice that complicates
      the use and maintenance of the module.
    impact: >
      - Export functions and procedures
      that will not be used.

      - Cause suboptimal performance of the application.
    recommendation: >
      Explicitly export the libraries and packages
      necessary for the correct operation of the application.
    threat: >
      Attacker authenticated in the application from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      A module includes a wildcard export
      ```javascript
      //Module code...

      export *
      ```
    compliant: |
      Explicitly export the functions and variable required for the application
      ```javascript
      //Module code...
      export { myFunction as function,
        myVariable as variable};
      ```
  remediation_time: '30'
  es:
    title: Inappropriate coding practices - Wildcard export
    description: >
      Al exportar librerías, se hace uso del operador
      comodín (asterisco) lo cual exporta la totalidad
      de funciones de dicha librería.
      Esta es una mala práctica que complica el uso y
      mantenimiento del módulo.
    impact: >
      - Exportar funciones y procedimientos
      que no serán utilizados.

      - Ocasionar un funcionamiento subóptimo de la aplicación.
    recommendation: >
      Exportar de manera explícitamente las librerías
      y paquetes necesarios para el correcto
      funcionamiento de la aplicación.
    threat: >
      Atacante autenticado en la aplicación desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'385':
  en:
    title: Non-encrypted confidential information - Keys
    description: >
      Confidential information is stored in plain
      text allowing an attacker to view it without
      any encryption.
    impact: >
      Obtain sensitive information that can
      compromise system resources.
    recommendation: >
      Encrypt all sensitive information that is
      transported or stored within the application
      according to the organizations policies.
    threat: >
      Attacker with access to source code from the Internet.
  category: Information Collection
  examples:
    non_compliant: |
      There are sensitive credentials stored in the source code
      ```javascript
      import { initializeDB } from db_model;

      const firebaseConfig = {
        const ADMIN = "admin";
        const PASSWORD = "1234"
      };

      async function getUsers(db) {
        ....
      }
      ```
    compliant: |
      All sensitive credentials are stored as encrypted secrets
      ```javascript
      import { initializeDB } from db_model;

      const firebaseConfig = {
        //Get encrypted keys from the server
      };

      async function getUsers(db) {
        ....
      }
      ```
  remediation_time: '30'
  es:
    title: Non-encrypted confidential information - Keys
    description: >
      La información confidencial es almacenada
      en texto plano permitiendo a un atacante
      visualizarla sin ningún tipo de cifrado.
    impact: >
      Obtener información sensible que puede
      comprometer recursos del sistema.
    recommendation: >
      Cifrar toda información sensible que se
      transporte o se guarde dentro la aplicación
      de acuerdo a las políticas de la organización.
    threat: >
      Atacante con acceso al código fuente desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185']
  metadata:
    en:
      details: __empty__
'386':
  en:
    title: Cross-Site Leak - Frame Counting
    description: >
      It is possible to determine from an
      external site whether or not a user
      is logged into the platform by counting
      the frames loaded when opening the page.
      The user must have logged into a site
      with a malicious frame counting script.
    impact: >
      Determine if a specific user has access to
      the platform and thus collect targets for
      spearphishing attacks.
    recommendation: >
      Load the same amount of frames in all
      application load cases.
    threat: >
      Attacker on the Internet sending malicious links.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The app provides a different ftps when a query is successful than when the login has failed because of a delay in getting the data
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username;
        String password;
        username = input.next();
        password = input.next();

        try {
          Thread.sleep(5000);
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                users check = new users(username, password);
                signIn(user, check)
              }
            }, delay, TimeUnit.MILLISECONDS);
          }
        } catch (InterruptedException e) {
          //Code to catch the exception that executes faster than the login code...
        }
      }
      ```
    compliant: |
      The application defines the same timing frame functions without distinguishing outcomes of queries
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username;
        String password;
        username = input.next();
        password = input.next();

        try {
          if(username.equals(username) && password.equals(password)){
            ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                users check = new users(username, password);
                signIn(user, check)
              }
            }, delay, TimeUnit.MILLISECONDS);
          }
        } catch (InterruptedException e) {
          //The code to catch the exception takes the same amount of time to execute, on purpose
          ScheduledExecutorService executor = Executors.newScheduledThreadPool(2);
            executor.schedule(new Runnable(){
              public void run() {
                failedSignin(user)
              }
            }, delay, TimeUnit.MILLISECONDS);
        }
      }
      ```
  remediation_time: '120'
  es:
    title: Cross-Site Leak - Frame Counting
    description: >
      Es posible determinar desde un sitio externo
      si un usuario está o no logeado en la
      plataforma mediante el conteo de los frames
      cargados al abrir la página.
      El usuario debe haber ingresado a un sitio con
      un script malicioso de conteo de frames.
    impact: >
      Determinar si un usuario específico tiene
      acceso a la plataforma y así colectar
      objetivos para ataques de spearphishing.
    recommendation: >
      Cargar la misma cantidad de frames en todos
      los casos de carga de la aplicación.
    threat: >
      Atacante en Internet enviando enlaces maliciosos.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: X
      report_confidence: X
  requirements: ['134', '135', '185']
  metadata:
    en:
      details: __empty__
'387':
  en:
    title: Insecure service configuration - Object Reutilization
    description: >
      The system does not validate that objects, data or information,
      valid for one use only can be reused.
    impact: >
      Abuse functionalities that should be accessed once.
    recommendation: >
      Implement validations to guarantee that One-Time data.
      cannot be reused.
    threat: >
      Anonymous attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The OTP generated is not expired after the user uses it to sign in for the first time
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token || req.body.password = user.OTpasswd){
            //Code to handle user sign in
          }
        }
      }
      ```
    compliant: |
      The OTP generated is correctly expired after a single use
      ```javascript
      const logIn = (req, res) => {
        if (isValidUser(req.body.user)) {
          if (validateToken == req.body.token || req.body.password = user.OTpasswd){
            user.OTPasswd = Null
            //Code to handle user sign in
          }
        }
      }
      ```
  remediation_time: '90'
  es:
    title: Insecure service configuration - Object Reutilization
    description: >
      El sistema no valida que los objetos, datos o información
      que deberían ser válidos por un solo uso.
      sean reutilizados
    impact: >
      Abusar de funcionalidades que deberían ser accedidas solo una vez.
    recommendation: >
      Implementar validaciones que garanticen que los datos de un solo uso
      no sean reutilizados.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['030']
  metadata:
    en:
      details: __empty__
'388':
  en:
    title: Insecure authentication method - NTLM
    description: >
      The application uses the Legacy NTLM authentication protocol
      which can be vulnerable to several security flaws,
      including Relay attacks, Man in the Middle
      and brute force to obtain valid challenge results.
    impact: >
      Obtain valid challenges to impersonate application users.
    recommendation: >
      Avoid and restrict the use of NTLM as authentication mechanism,
      in favor of more recent and secure alternatives
      such as Kerberos, Smart Cards, OAuth, Bearer Authentication,
      forms, JWT, among others.
    threat: >
      Anonymous attacker from adjacent network performing a MitM.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The server configuration file contains NTML authentication protocol
      ```yaml
      adminSecurity: active
      authMode: NTLM
      ```
    compliant: |
      The server configuration uses a safe authentication mechanism
      ```yaml
      adminSecurity: active
      authMode: Kerberos
      ```
  remediation_time: '120'
  es:
    title: Insecure authentication method - NTLM
    description: >
      La aplicación utiliza el protocolo legacy NTLM
      como protocolo de autenticación,
      el cual puede ser vulnerable a ataques de Relay, Man in the Middle
      y fuerza bruta para obtener credenciales válidas.
    impact: >
      Obtener credenciales válidas para suplantar usuarios de la aplicación.
    recommendation: >
      Evitar y restringir el uso de NTLM como mecanismo de autenticación,
      en favor de alternativas más recientes y seguras como:
      Kerberos, Smart Cards, OAuth, autenticación Bearer,
      formularios, JWT, entre otros.
    threat: >
      Atacante anónimo desde red adyacente ejecutando un MitM.
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['228', '319']
  metadata:
    en:
      details: __empty__
'389':
  en:
    title: Insufficient data authenticity validation - JAR signing
    description: >
      The JAR files that compose the application
      are not correctly signed,
      allowing an attacker to modify the code
      withouth raising alerts
      on an integrity check.
    impact: >
      Inject malicious code in the application without raising alerts.
    recommendation: >
      Sign the application JAR files using a trusted key.
    threat: >
      Anonymous attacker from Internet with access to the JAR Files.
  category: Data Manipulation
  examples:
    non_compliant: |
      The source code has .jar files that were not signed before runtime, please check to verify before compiling
    compliant: |
      Sign all the JAR files of the application with a certified key tool
      ```java
      jarsigner -keystore NONE -certchain "bundle.pem" -tsa "http://time.certum.pl" -storetype PKCS11
        -providerClass sun.security.pkcs11.SunPKCS11 -providerArg "provider.cfg"
        -storepass "[your_pin]" "[your_code].jar" "[your_alias]"
      ```
  remediation_time: '90'
  es:
    title: Insufficient data authenticity validation - JAR signing
    description: >
      Los archivos JAR que componen la aplicación
      no han sido firmados correctamente,
      permitiendole a un atacante realizar modificaciones
      al código sin que éstas se vean reflejadas
      en una verificación de integridad.
    impact: >
      Ingresar código malicioso en la aplicación sin levantar alertas.
    recommendation: >
      Firmar los archivos JAR utilizando una llave de confianza.
    threat: >
      Atacante anónimo desde Internet con acceso a los JAR.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: X
      remediation_level: O
      report_confidence: C
  requirements: ['122', '173', '178', '320']
  metadata:
    en:
      details: __empty__
'390':
  en:
    title: Prototype Pollution
    description: >
      An application object, method or module
      can be overwritten with malicious logic
      due to the lack of validations
      and the nature of the JavaScript language.
    impact: >
      - Overwrite or pollute the behavior
      of existing methods in the application.

      - Lead to dangerous vulnerabilities
      suchs as XSS, SQLi, RCE, among others.
    recommendation: >
      - Implement integrity validations on the vulnerable objects.

      - Restrict and Discourage the use harmful properties
      such as _proto_ in the system objects.
    threat: >
      Authenticated attacker from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      There are functionalities that can be overwritten due to insecure coding practices
      ```javascript
      function modifyPrototype(moduleName, deleteMethod, newMethod) {
        // modifying the prototype of a module from within another function
        var newMod = require(moduleName);
        delete newMod[deleteMethod];
        newMod.${newMethod} = function() {
            // function body that modifies the original method
        };

        module.exports = newMod;
      }
      ```
    compliant: |
      There are no harmful functionalities on vulnerable objects
      ```javascript
      function modifyPrototype(moduleName, deleteMethod, newMethod) {
        var newMod = new moduleName;

        //Add new method to the object, without altering the original
        newMod.${newMethod} = function() {
            //Add functionality to object
        };

        return newMod;
      }
      ```
  remediation_time: '60'
  es:
    title: Prototype Pollution
    description: >
      Un Objeto, método o módulo de la aplicación
      puede ser sobreescrito con lógica maliciosa,
      debido a la ausencia de validaciones sumado a la naturaleza
      propia del lenguaje JavaScript.
    impact: >
      - Sobreescribir o corromper el comportamiento
      de métodos de la aplicación.

      - Conducir a vulnerabilidades más peligrosas
      como XSS, SQLi, RCE, entre otras.
    recommendation: >
      - Implementar validaciones de integridad en los objetos vulnerables
      para evitar que sean sobreescritos.

      - Restringir el uso de propiedades peligrosas como _proto_
      en los objetos de la aplicación.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: R
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'391':
  en:
    title: Inappropriate coding practices - Unused properties
    description: >
      The application source code defines properties
      that are not used, adding unnecessary complexity
      to the source code
      and leading to a suboptimal state
      that may cause affectations
      to the overall application performance.
    impact: >
      - Hinder the source code maintainability.

      - Release unoptimized source code
      that may affect the application performance.
    recommendation: >
      Remove the unused properties
      from the application source code.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are unused properties in the code
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username = input.next();
        String password = input.next();
        //Defined property that is never used
        String passwordVerification;

        try {
          //Code to handle user login
        } catch (InterruptedException e) {
          //Code to catch exception
        }
      }
      ```
    compliant: |
      The application does not have any unused properties in the source code
      ```java
      public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String username = input.next();
        String password = input.next();

        try {
          if(isValidUser(username, password)){
            //Code to handle user login
          }
        } catch (InterruptedException e) {
          //Code to catch exception
        }
      }
      ```
  remediation_time: '15'
  es:
    title: Inappropriate coding practices - Unused properties
    description: >
      Dentro del código fuente de la aplicación
      se definen propiedades que no se utilizan,
      agregando complejidad innecesaria al código
      y causando un estado subóptimo que podría generar
      una afectación en el desempeño general de la aplicación.
    impact: >
      - Dificultar la mantenibilidad del código.

      - Desplegar códigos no optimizados
      que pueden afectar el desempeño de la aplicación.
    recommendation: >
      Remover las propiedades no utilizadas
      del código fuente de la aplicación.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['164', '167']
  metadata:
    en:
      details: __empty__
'392':
  en:
    title: Security controls bypass or absence - Firewall
    description: >
      The firewall security verifications
      either do not exist
      or can be bypassed.
    impact: >
      Bypass security validations
      to perform diferent attacks.
    recommendation: >
      Guarantee that firewall security mechanisms
      and access rules are active and cannot be bypassed.
    threat: >
      Anonymous attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The firewall configuration allows insecure port connections through its configuration files
      ```java
      gateway: "My gateway name"
      firewall_service:
        enabled: true
        policy: 'drop'
        log_default_action: true
        firewall_rules:
        - :id: '1'
          :enabled: true
          :description: 'allow_conections'
          :policy: 'allow'
          :destination_port_range: '*'
          :destination_ip: '00.01.02.03'
          :source_port_range: '*'
          :source_ip: 'Any'
      ```
    compliant: |
      The firewall is safely configured over a secure port
      ```java
      gateway: "My gateway name"
      firewall_service:
        enabled: true
        policy: 'drop'
        log_default_action: true
        firewall_rules:
        - :id: '1'
          :enabled: true
          :description: 'disallow_conections'
          :policy: 'disallow'
          :destination_port_range: '5353'
          :destination_ip: '00.01.02.03'
          :source_port_range: '5353'
          :source_ip: 'Any'
      ```
  remediation_time: '60'
  es:
    title: Security controls bypass or absence - Firewall
    description: >
      Las verificaciones de seguridad del Firewall
      son inexistentes o pueden ser saltados.
    impact: >
      Saltar validaciones de seguridad
      para ejecutar diferentes ataques.
    recommendation: >
      Garantizar que los mecanismos de seguridad
      y reglas de acceso del firewall están activos
      y no pueden ser bypaseados.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['062', '266', '273']
  metadata:
    en:
      details: __empty__
'393':
  en:
    # The difference with 011 is just the title
    title: Use of software with known vulnerabilities in development
    description: >
      The system uses the version
      of a software or dependency
      with known vulnerabilities
      in pre-productive environments.
    impact: >
      Exploit public vulnerabilities
      of the components in the affected environments.
    recommendation: >
      - Update the affected software
      to the versions recommended
      by the vendor.

      - Replace deprecated components
      or components with Zero-Day vulnerabilities.
    threat: Authenticated attacker from the Internet.
  es:
    # The difference with 011 is just the title
    title: Use of software with known vulnerabilities in development
    description: >
      El sistema usa la versión
      de un software o dependencia
      con vulnerabilidades conocidas
      en un ambiente pre-productivo.
    impact: >
      Explotar vulnerabilidades públicas
      de los componentes en los ambientes afectados.
    recommendation: >
      - Actualizar el software afectado
      a las versiones recomendadas
      por el fabricante.

      - Reemplazar componentes que estén obsoletos
      o cuenten con vulnerabilidades Zero Day.
    threat: Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Example importing a dependency with known vulnerabilities such as xmldom
      ```json
      {
        "name": "test",
        "version": "1.0.0",
        "description": "nothing",
        "main": "index.js",
        "author": "Luis Saavedra",
        "license": "MIT",
        "private": false,
        "dependencies": {
          "@angular/core": "^13.3.3",
          "cloudron-sysadmin": "1.0.0",
          "script-manager": "0.8.6",
          "slug": "0.9.0"
        },
        "devDependencies": {
          "xmldom": "0.4.0"
        }
      }
      ```
    compliant: |
      Search for known vulnerabilities of any dependencies used on the code, replace them for safer alternatives
      ```json
      {
        "name": "test",
        "version": "1.0.0",
        "description": "nothing",
        "main": "index.js",
        "author": "Luis Saavedra",
        "license": "MIT",
        "private": false,
        "dependencies": {
          "@angular/core": "^13.3.3",
          "cloudron-sysadmin": "1.0.0",
        },
      }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['048', '262']
  metadata:
    en:
      details: __empty__
'394':
  en:
    title: Insufficient data authenticity validation - Cloudtrail Logs
    description: >
      One or more Cloudtrail instances
      do not enable the EnableLogFileValidation attribute
      avoiding the integrity validation to be performed.
      This practice could aid an attacker
      to inject malicious information in log files
      without rainsing any alert.
    impact: >
      Alterate the system logs integrity
      witouth raising alerts.
    recommendation: >
      Set the EnableLogFileValidation attribute in true
      for all Cloudtrail instances.
    threat: >
      Authenticated attacker from the Internet.
  es:
    title: Insufficient data authenticity validation - Cloudtrail Logs
    description: >
      Una o más instancias asociadas a Cloudtrail
      no habilitan el atributo EnableLogFileValidation
      con lo cual no se genera un hash de integridad
      que garantice que el archivo no ha sido modificado
      por actores maliciosos.
    impact: >
      Alterar la integridad de los logs del sistema
      sin generar ninguna alerta.
    recommendation: >
      Establecer el atributo EnableLogFileValidation en true
      en todas las instancias de CloudTrail.
    threat: >
      Atacante autenticado desde Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not enable log file validation
      ```yaml
      Resources:
        trail1:
          Type: AWS::CloudTrail::Trail
          Properties:
            IsLogging: true
            S3BucketName: bk2
            EnableLogFileValidation: false
      ```
      ```terraform
      resource "aws_cloudtrail" "foobar" {
        enable_log_file_validation    = false
        name                          = "tf-trail-foobar"
        s3_bucket_name                = aws_s3_bucket.foo.id
        s3_key_prefix                 = "prefix"
        include_global_service_events = false
      }
      ```
      Using the AWS CLI, the following command checks CloudTrail trails have file integrity validation feature enabled
      ```
      $ aws cloudtrail describe-trails
      ```
      The command returns the following output
      ```
      {
        "trailList": [
          {
            "IncludeGlobalServiceEvents": true,
            "Name": "MyGlobalTrail",
            "TrailARN": "arn:aws:cloudtrail:us-east-1:
                        123456789012:trail/MyGlobalTrail",
            "LogFileValidationEnabled": false,
            "IsMultiRegionTrail": false,
            "S3BucketName": "cloudtrail-global-logging",
            "HomeRegion": "us-east-1"
          }
        ]
      }
      ```
      If **LogFileValidationEnabled** config parameter value is set to **false**, the trail has an insecure configuration
    compliant: |
      The resource correctly enables log file validation
      ```yaml
      Resources:
        trail1:
          Type: AWS::CloudTrail::Trail
          Properties:
            IsLogging: true
            S3BucketName: bk1
            EnableLogFileValidation: true
      ```
      ```terraform
      resource "aws_cloudtrail" "foobar" {
        enable_log_file_validation    = true
        name                          = "tf-trail-foobar"
        s3_bucket_name                = aws_s3_bucket.foo.id
        s3_key_prefix                 = "prefix"
        include_global_service_events = false
      }
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['080']
  metadata:
    en:
      details: __empty__
'395':
  en:
    title: Insecure generation of random numbers -  Static IV
    description: >
      The application uses static, hardcoded values
      for initialization vectors.
      By knowing initialization vectors
      an attacker could perform a reverse engineering attack
      to predict the random values
      that should remain as secrets.
    impact: >
      Predict random values to craft new attack vectors.
    recommendation: >
      Generate initialization vectors randomly
      using mechanisms with secure randomness
      and high entropy.
    threat: >
      Authenticated attacker from the Internet
      with access to the source code.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application uses insecure encryption algorithms
      ```python
      from Crypto import Random
      from Crypto.Cipher import AES
      from Crypto.Util.Padding import paddef encrypt(value, key):
        value = value.encode('ascii')
        iv = "HardCodedValue"
        cipher = AES.new(key, AES.MODE_CBC, iv)
        ciphertext = cipher.encrypt(pad(bytes(value, encoding='utf8'), size))
        return iv + ciphertext
      ```
    compliant: |
      The application includes secure encryption algorithms
      ```python
      from Crypto import Random
      from Crypto.Cipher import AES
      from Crypto.Util.Padding import paddef encrypt(value, key):
        value = value.encode('ascii')
        iv = Random.new().read(AES.block_size)
        cipher = AES.new(key, AES.MODE_CBC, iv)
        ciphertext = cipher.encrypt(pad(bytes(value, encoding='utf8'), size))
        return iv + ciphertext
      ```
  remediation_time: '30'
  es:
    title: Insecure generation of random numbers -  Static IV
    description: >
      La aplicación utiliza valores estáticos
      quemados en código
      como vectores de inicialización.
      Al conocer los vectores de inicialización
      un atacante podría realizar ingeniería reversa
      a la aplicación para predecir los valores
      aleatorios que deberían mantenerse secretos.
    impact: >
      Predecir valores alteatorios
      para generar nuevos vectores de ataque.
    recommendation: >
      Generar vectores de inicialización aleatorios
      utilizando mecanismos de aleatoriedad seguros
      que cuenten con alta entropía.
    threat: >
      Atacante autenticado desde Internet
      con acceso al código fuente.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['223', '224']
  metadata:
    en:
      details: __empty__
'396':
  en:
    title: Insecure service configuration - KMS
    description: >
      The automatic key rotation
      for the KMS service is disabled.
      By keeping static keys
      during long periods
      the chances to compromise a valid key are higher.
    impact: >
      Increase the chance to get valid keys.
    recommendation: >
      Enable the automatic key rotation
      for all the service keys.
    threat: >
      Anonymous attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not enable automatic key rotation within allowable limits
      ```yaml
      Resources:
        key1:
          Type: 'AWS::KMS::Key'
          Properties:
            Description: An example multi-Region primary key
            MultiRegion: true
            EnableKeyRotation: false
            PendingWindowInDays: 10
            KeyPolicy:
              Version: 2012-10-17
              Id: key-default-1
              Statement:
                - Sid: Enable IAM User Permissions
                  Effect: Allow
                  Principal:
                    AWS: 'arn:aws:iam::111122223333:root'
                  Action: 'kms:*'
                  Resource: '*'
      ```
      ```terraform
      resource "aws_kms_key" "a" {
        customer_master_key_spec = "SYMMETRIC_DEFAULT"
        description              = "KMS key 1"
        deletion_window_in_days  = 10
        enable_key_rotation      = false
      }
      ```
      Using the AWS CLI, the following command verifies the Key Rotation flag for a selected CMK
      ```
      $ aws kms get-key-rotation-status
            --key-id {CMK_id}

      ```
      If command output returns false for the **KeyRotationEnabled** flag, the service has an insecure configuration
    compliant: |
      The resource has automatic key rotation enabled
      ```yaml
      Resources:
        key1:
          Type: 'AWS::KMS::Key'
          Properties:
            Description: An example multi-Region primary key
            MultiRegion: true
            EnableKeyRotation: true
            PendingWindowInDays: 10
            KeyPolicy:
              Version: 2012-10-17
              Id: key-default-1
              Statement:
                - Sid: Enable IAM User Permissions
                  Effect: Allow
                  Principal:
                    AWS: 'arn:aws:iam::111122223333:root'
                  Action: 'kms:*'
                  Resource: '*'
      ```
      ```terraform
      resource "aws_kms_key" "a" {
        customer_master_key_spec = "SYMMETRIC_DEFAULT"
        description              = "KMS key 1"
        deletion_window_in_days  = 10
        enable_key_rotation      = true
      }
      ```
  remediation_time: '60'
  es:
    title: Insecure service configuration - KMS
    description: >
      La rotación automática de llaves
      del servicio de KMS se encuentra deshabilitada.
      Al mantener las llaves estáticas
      durante un tiempo prolongado
      se incrementa el riesgo de que éstas sean comprometidas.
    impact: >
      Incrementar la probabilidad de obtener llaves KMS.
    recommendation: >
      Habilitar la rotación automática de llaves
      para todas las llaves del servicio.
    threat: >
      Atacante anónimo desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'397':
  en:
    title: Insecure authentication method - LDAP
    description: >
      The use of LDAP software in its current state is
      not suitable as an authentication service.
      LDAP is an active directory, this means that it
      (the LDAP server) is constantly being inundated
      with new queries.
      An authentication service should never have more
      traffic than necessary.

      Passwords can be sent over networks in plain-text.
      Although v3 of the protocol allows TLS sessions,
      the use of such security has not fully carried over
      due to historic security policies using the obsolete
      SSL-session method, which can be easily compromised
      by SSL certificate spoofing.
    impact: >
      DoS attack exploiting the TCP three-way handshake
      required when initializing a connection to an
      LDAP server.
    recommendation: >
      - LDAP had to incorporate the use of SSL to provide
      encryption of traffic containing plain-text passwords.

      - Bind all blind authentication connections to a second physical LDAP
      server that is a clone of the directory tree for the scope
      of a blind authentication.

      - If allowing connections from the Internet, only allow
      blind authentication.
    threat: >
      Unauthorized attacker from intranet.
  category: Protocol Manipulation
  examples:
    non_compliant: |
      The LDAP server does not include SSL encryption for sensitive traffic
      ```c
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "LDAP://myserver/OU=People,O=mycompany";
      de.AuthenticationType = AuthenticationTypes.None;
      ```
    compliant: |
      The LDAP server is securely configure to use SSL encryption on sensitive traffic
      ```c
      DirectoryEntry de = new DirectoryEntry();
      de.Path = "LDAP://myserver/OU=People,O=mycompany";
      de.AuthenticationType = AuthenticationTypes.Blind;
      ```
  remediation_time: '60'
  es:
    title: Insecure authentication method - LDAP
    description: >
      El uso del software LDAP en su estado actual no es
      adecuado como servicio de autenticación.
      LDAP es un directorio activo, esto significa que (el servidor LDAP)
      está constantemente inundado de nuevas consultas.
      Un servicio de autenticación nunca debería tener
      más tráfico del necesario.

      Las contraseñas pueden enviarse a través de
      las redes en texto plano.
      Aunque la v3 del protocolo permite las sesiones TLS,
      el uso de dicha seguridad no se ha trasladado del
      todo debido a las políticas de seguridad históricas
      que utilizan el obsoleto método de la sesión SSL,
      que puede verse fácilmente comprometido por la
      suplantación del certificado SSL.
    impact: >
      Ataque DoS que explota el handshake TCP de tres vías
      requerido al inicializar una conexión a un servidor LDAP.
    recommendation: >
      - LDAP tuvo que incorporar el uso de SSL para proporcionar
      encriptación del tráfico que contiene contraseñas de texto plano.

      - Enlaza todas las conexiones de autenticación ciega a un
      segundo servidor LDAP físico que es un clon del árbol de
      directorios para el ámbito de una autenticación ciega.

      - Si se permiten conexiones desde Internet, sólo
      permita la autenticación ciega.
    threat: >
      Atacante no autorizado desde intranet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: X
  requirements: ['228', '319']
  metadata:
    en:
      details: __empty__
'398':
  en:
    title: Fragment Injection
    description: >
      The application is vulnerable to Fragment Injection
      caused either by an unsafe implementation of PreferenceActivity
      or an insecure configuration of isValidFragment.
    impact: >
      Use malicious fragments
      to exploit different vulnerabilities.
    recommendation: >
      - Set the attribute exported to false
      to avoid the attempt of
      foreign applications to exploit the vulnerability.

      - Ensure the application is running
      with targetSdkVersion higher than 19.

      - Set a whitelist of trusted fragments
      and validate them through the implementation of isValidFragment.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are unverified inputs that are used to put fragments into the application
      ```java
      @Override
      String initialFragment = getIntent().getStringExtra(EXTRA_SHOW_FRAGMENT);
      Bundle initialArguments = getIntent().getBundleExtra(EXTRA_SHOW_FRAGMENT_ARGUMENTS);
      if (savedInstanceState != null) {
        //Handle Exception
      } else {
          if (initialFragment != null && mSinglePane) {
            // Add Fragment to the application
          }
        }
      }
      ```
    compliant: |
      Implement a check for every fragment introduced to the application
      ```java
      public boolean isValidFragment(String fragmentName) {
        return MyFragment.class.getName().equals(fragmentName);
      }
      ```
  remediation_time: '120'
  es:
    title: Fragment Injection
    description: >
      La aplicación es vulnerable a una inyección de fragmentos
      al definir una implementación insegura de PreferenceActivity
      o establecer una configuración incorrrecta de isValidFragment.
    impact: >
      Utilizar fragmentos maliciosos
      que pueden ser usados para explotar
      diferentes vulnerabilidades.
    recommendation: >
      - Establecer el atributo exported a false
       para evitar intentos de explotación
       de aplicaciones de terceros.

      - Garantizar que la aplicación corra
      con targetSdkVersion superior a 19.

      - Establecer una lista de fragmentos de confianza,
       validándolos mediante la implementación de isValidFragment.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: R
  requirements: ['266', '173']
  metadata:
    en:
      details: __empty__
'399':
  en:
    title: Security controls absence - Monitoring
    description: >
      The application lacks of alert or notification mechanisms
      in the presence of critical changes in the system,
      such as: access and modification of resources,
      roles creation, among others.
    impact: >
      Perform potentially harmful operations in the system
      without raising an alert.
    recommendation: >
      Set notification mechanisms
      in critical changes in the system resources or services.
    threat: >
      Authenticated attacker from the Internet
      who succeeded to compromise a resource.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are sensitive resources in the application that do not have notification mechanisms in case of changes
    compliant: |
      Sensitive resources have notification mechanisms in place to report changes
      ```terraform
      resource "aws_iam_notification" "iam_notification" {
        lambda_function {
          lambda_function_arn = aws_lambda_function.func.arn
          events              = ["iam:Edited*"]
          filter_prefix       = "AWSLogs/"
          filter_suffix       = ".log"
        }

        depends_on = [resource.name]
      }
      ```
  remediation_time: '90'
  es:
    title: Security controls absence - Monitoring
    description: >
      La aplicación no cuenta con mecanismos de alerta
      o notificación ante cambios críticos del sistema
      como acceso y edición de recursos, creación de roles,
      entre otros.
    impact: >
      Realizar acciones potencialmente dañinas en el sistema
      sin generar ninguna alerta.
    recommendation: >
      Establecer mecanismos de notificación
      ante cambios críticos en los recursos o servicios del sistema.
    threat: >
      Atacante autenticado desde Internet
      que haya logrado comprometer un recurso.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: H
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['301', '318']
  metadata:
    en:
      details: __empty__
'400':
  en:
    title: Traceability Loss - AWS
    description: >
      Some EC2, ELB or S3 instances do not set
      the logging property,
      which avoid the log files to be created.
      These files are useful to identify
      and trace malicious actions or anomalous behaviours.
      Alternatively,
      the log files do not have enough detail level.
    impact: >
      Perform harmful actions
      without raising an alert.
    recommendation: >
      Set the logging property
      in all the EC2, ELB and S3 instances.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have the logging property set
      ```yaml
      Resources:
        LoadBalancer1:
          Type: AWS::ElasticLoadBalancing::LoadBalancer
          Properties:
            AccessLoggingPolicy:
              Enabled: false
              S3BucketName: bkname
            Listeners:
            - InstancePort: '80'
              InstanceProtocol: HTTP
              LoadBalancerPort: '443'
              Protocol: HTTPS
      ```
      The resource has monitoring disabled
      ```terraform
      resource "aws_instance" "foo" {
        monitoring                  = false
        instance_type               = "t2.micro"
        disable_api_termination     = true
        associate_public_ip_address = false
        security_groups             = ["test"]
        iam_instance_profile        = "ami-005e54dee72cc1d00"

        network_interface {
          network_interface_id = aws_network_interface.foo.id
          device_index         = 0
        }
        credit_specification {
          cpu_credits = "unlimited"
        }
      }
      ```
      The resource does not have multiregion property enabled
      ```terraform
      resource "aws_cloudtrail" "foobar" {
        name                          = "tf-trail-foobar"
        s3_bucket_name                = aws_s3_bucket.foo.id
        s3_key_prefix                 = "prefix"
        include_global_service_events = false
        is_multi_region_trail         = false
      }
      ```
      Using the AWS CLI, the following command checks if an AWS S3 Server Access Logging feature is enabled
      ```
      $ aws s3api get-bucket-logging
            --bucket {bucket_name}
      ```
      If the command does not return any output, the access logging feature is not currently enabled for the selected bucket.
    compliant: |
      The resource has the logging property correctly configured
      ```yaml
      Resources:
        LoadBalancer1:
          Type: AWS::ElasticLoadBalancing::LoadBalancer
          Properties:
            AccessLoggingPolicy:
              Enabled: true
              S3BucketName: bkname
            Listeners:
            - InstancePort: '80'
              InstanceProtocol: HTTP
              LoadBalancerPort: '443'
              Protocol: HTTPS
      ```
      The resource has monitoring enabled
      ```terraform
      resource "aws_instance" "foo" {
        monitoring                  = true
        instance_type               = "t2.micro"
        disable_api_termination     = true
        associate_public_ip_address = false
        security_groups             = ["test"]
        iam_instance_profile        = "ami-005e54dee72cc1d00"

        network_interface {
          network_interface_id = aws_network_interface.foo.id
          device_index         = 0
        }
        credit_specification {
          cpu_credits = "unlimited"
        }
      }
      ```
      The resource has multiregion property enabled
      ```terraform
      resource "aws_cloudtrail" "foobar" {
        name                          = "tf-trail-foobar"
        s3_bucket_name                = aws_s3_bucket.foo.id
        s3_key_prefix                 = "prefix"
        include_global_service_events = false
        is_multi_region_trail         = true
      }
      ```
  remediation_time: '60'
  es:
    title: Traceability Loss - AWS
    description: >
      Algunas instancias de EC2, S3 o ELB
      no definen la propiedad logging,
      con lo cual no se crean registros
      de trazabilidad que ayuden a identificar
      acciones maliciosas o comportamientos anómalos.
      Alternativamente,
      los logs creados no cuentan
      con el suficiente nivel de detalle.
    impact: >
      Realizar acciones maliciosas
      sin dejar ningún rastro.
    recommendation: >
      Establecer la propiedad logging en todas
      las instancias de EC2, S3 y ELB.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['075', '376', '377', '378']
  metadata:
    en:
      details: __empty__
'401':
  en:
    title: Insecure service configuration - AKV Secret Expiration
    description: >
      The secrets stored in Azure Key Vault
      do not set an expiration date.
    impact: >
      Increase the chances of
      compromising sensitive secrets of the system.
    recommendation: >
      Define an expiration date for Azure secrets
      by setting the expiration_date property.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The azure secrets do not have an expiration date or limit set
      ```terraform
      resource "azurerm_key_vault_secret" "vulnerable" {
        name         = "example"
        value        = var.value_azsqlrevapp
        key_vault_id = data.azurerm_key_vault.kv.id
      }
      ```
      Using the Azure CLI, the following command checks the secret keys have an expiration date
      ```
      $ az keyvault secret show
          --id {Active_secret_key_id}
          --query '{"expires":attributes.expires}'
      ```
      If the command output returns null as value for the "expires" attribute, he selected AKV secret key does not have an expiration date configured
    compliant: |
      There is a correctly set expiration date on the azure secrets
      ```terraform
      resource "azurerm_key_vault_secret" "not_vulnerable" {
        name            = "kvAzsqlRevApphist"
        expiration_date = "2020-12-30T20:00:00Z"
        value           = var.value_azsqlrevapphist
        key_vault_id    = data.azurerm_key_vault.kv.id
      }
      ```
  remediation_time: '60'
  es:
    title: Insecure service configuration - AKV Secret Expiration
    description: >
      Los secretos almacenados en Azure Key Vault
      no definen una fecha de expiración.
    impact: >
      Incrementar las probabilidades
      de comprometer secretos sensibles del sistema.
    recommendation: >
      Establecer una fecha de expiración para los secretos
      definiendo la propiedad expiration_date.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['130', '138', '140']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/set-an-expiration-date-on-all-secrets
'402':
  en:
    title: Traceability Loss - Azure
    description: >
      The Azure configurations
      do not enable the log service
      with enough granularity.
      Ommiting relevant information
      may hinder the detection
      of anomalous behaviours
      or security breaches.
    impact: >
      Hinder the detection of security issues.
    recommendation: >
      Configure the logs with the necessary granularity level
      to detect and identify potentially harmful behaviors
      by enabling logging for read, write and delete requests.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not enable logging for sensitive requests
      ```terraform
      resource "azurerm_storage_account" "vulnerable" {
        name                     = "example"
        resource_group_name      = data.azurerm_resource_group.example.name
        location                 = data.azurerm_resource_group.example.location
        account_tier             = "Standard"
        account_replication_type = "GRS"
        min_tls_version          = "TLS1_2"
        queue_properties {
          logging {
            delete                = false
            read                  = false
            version               = "1.0"
            retention_policy_days = 10
          }
        }
      }
      ```
      The resource does not have a failed request tracing mechanism
      ```terraform
      resource "azurerm_app_service" "vulnerable" {
        name                = "example-app-service"
        location            = azurerm_resource_group.example.location
        resource_group_name = azurerm_resource_group.example.name
        app_service_plan_id = azurerm_app_service_plan.example.id
        https_only          = true
        logs {
          failed_request_tracing_enabled = false
        }
        auth_settings {
          enabled = true
        }
      }
      ```
      All sensitive changes should have an alert mechanism, for example, using the Azure CLI, the following command checks that an alert is configured for "Update Security Service" events
      ```
      $ az monitor activity-log alert show
          --ids {alert_rule_id}
          --query 'condition'
      ```
      Check the command output for the object with the "field" property set to "operationName".
      If the object's "equals" property is not set to "Microsoft.Security/policies/write", the selected alert rule is not configured to detect "Update Security Policy" events.
    compliant: |
      The resource correctly enables logging for sensitive requests
      ```terraform
      resource "azurerm_storage_account" "not_vulnerable" {
        name                     = "example"
        resource_group_name      = data.azurerm_resource_group.example.name
        location                 = data.azurerm_resource_group.example.location
        account_tier             = "Standard"
        account_replication_type = "GRS"
        min_tls_version          = "TLS1_2"
        queue_properties {
          logging {
            delete                = true
            read                  = true
            write                 = true
            version               = "1.0"
            retention_policy_days = 10
          }
        }
      }
      ```
      The resource has the logs properties correctly configured
      ```terraform
      resource "azurerm_app_service" "not_vulnerable" {
        name                = "example-app-service"
        location            = azurerm_resource_group.example.location
        resource_group_name = azurerm_resource_group.example.name
        app_service_plan_id = azurerm_app_service_plan.example.id
        https_only          = true
        logs {
          failed_request_tracing_enabled  = true
          detailed_error_messages_enabled = true
        }
        auth_settings {
          enabled = true
        }
      }
      ```
  remediation_time: '60'
  es:
    title: Traceability Loss - Azure
    description: >
      Las configuraciones de Azure
      no habilitan el registro de logs
      con un nivel de granularidad
      lo suficientemente detallado.
      Omitir detalles relevantes puede enmascarar
      comportamientos anómalos o brechas de seguridad.
    impact: >
      Dificultar la detección de inicidentes de seguridad.
    recommendation: >
      Configurar los registros con el nivel de granularidad
      necesario para identificar comportamientos potencialmente
      peligrosos, habilitando los registros de peticiones
      de lectura, escritura y borrado.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['075', '376', '377', '378']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/enable-requests-on-storage-logging-for-queue-service
'403':
  en:
    title: Insecure service configuration - usesCleartextTraffic
    description: >
      The application has
      android:usesCleartextTraffic set to
      true, which allows it to access resources
      that do not use encryption, a situation
      that could be exploited by an attacker
      to perform MitM attacks and compromise
      the confidentiality and integrity
      of the application.
    impact: >
      - Obtain sensitive information
      through MitM attacks.

      - Modify intercepted information with
      the aim of deceiving an application user.
    recommendation: >
      The android:usesCleartextTraffic
      must be set to false.
    threat: >
      Attacker without credentials from
      the same network segment as an
      application user.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application manifest has usesCleartextTraffic set to true
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" android:usesCleartextTraffic= "True" package="com.android.zerosms">
          <uses-permission android:name="android.permission.SEND_SMS"/>
          <application android:label="@7F040001" android:icon="@7F020002">
              <provider
                android:authorities="com.andriod.databasetest.contentprovider"
                android:name=".db.ContentProviderDb"
                android:exported="true"
                android:grantUriPermissions="true">
              </provider>
          </application>
      </manifest>
      ```
    compliant: |
      The application manifest has usesCleartextTraffic set to false
      ```html
      <manifest xmlns:android="http://schemas.android.com/apk/res/android" android:sharedUserId="android.uid.system" android:versionCode="4" android:versionName="1.0" android:usesCleartextTraffic= "False" package="com.android.zerosms">
          <uses-permission android:name="android.permission.SEND_SMS"/>
          <application android:label="@7F040001" android:icon="@7F020002">
              <provider
                android:authorities="com.andriod.databasetest.contentprovider"
                android:name=".db.ContentProviderDb"
                android:exported="false"
                android:grantUriPermissions="true">
              </provider>
          </application>
      </manifest>
      ```
  remediation_time: '15'
  es:
    title: Insecure service configuration - usesCleartextTraffic
    description: >
      La aplicación tiene configurado
      android:usesCleartextTraffic en
      true, lo que permite que esta acceda
      a recursos que no usan cifrado,
      situación que podría ser aprovechada
      por un atacante para realizar ataques
      tipo MitM y comprometer la confidencialidad
      e integridad de la aplicación.
    impact: >
      - Obtener información sensible
      mediante ataques MitM.

      - Modificar la información
      interceptada con el objetivo de engañar
      a un usuario de la aplicación.
    recommendation: >
      El android:usesCleartextTraffic
      debe ser configurado en false.
    threat: >
      Atacante sin credenciales desde el
      mismo segmento de red de un usuario
      de la aplicación.
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['130', '138', '140']
  metadata:
    en:
      details: __empty__
'404':
  en:
    title: OS Command Injection
    description: >
      The application allows the execution
      of functions or methods which
      execute commands in the system
      with non-sanitized parameters.
      This action would allow an attacker
      to inject malicious commands in the server
      to highly increase the attack vectors
      by escalating privileges, obtaining or modifying
      sensitive information stored in the machine.
    impact: >
      Inject malicious commands that will be executed
      in the server.
    recommendation: >
      - If possible, do not use functions that execute commands
      in the system with inputs controlled by the user.

      - Validate all input parameters using regular expressions
      or whitelists before passing the parameters to critical functions.
    threat: >
      Authenticated local attacker with access to the machine.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are functionalities that execute a command without checking or treating user input
      ```python
      import os
      def upload_file( filename)
        try
          command = userCommand + filename
          os.system(command)
        except
          return "Error"
      ```
    compliant: |
      The application do not use system sensitive functions
      ```python
      def upload_file(filename)
        try
          filename_escaped = filename.replace(' ', '\ ')
          command = "%s -q --no-warnings %s --exec \'mv {} %s\' &>/dev/null" % \
            (filename_escaped)
          runCommand(command)
        except
          return "Error"
      ```
  remediation_time: '120'
  es:
    title: OS Command Injection
    description: >
      La aplicación ejecuta funciones o métodos
      que ejecutan comandos en el sistema
      con parámetros sin validar.
      Esto permite a un atacante inyectar
      comandos maliciosos en el servidor
      que pueden ampliar enormemente la superficie de ataque,
      escalando privilegios, obteniendo o modificando
      información sensible allí almacenada.
    impact: >
      Inyectar comandos maliciosos que serán ejecutados en el servidor.
    recommendation: >
      - De ser posible, no utilizar funciones que ejecuten comandos
      en el sistema con entradas controladas por el usuario.

      - Validar todos los parámetros mediante expresiones regulares
      o listas blancas antes de pasarlas como parámetros a una función crítica.
    threat: >
      Atacante autenticado con acceso local a la máquina.
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['173', '265', '266']
  metadata:
    en:
      details: __empty__
'405':
  en:
    title: Excessive privileges - Access Mode
    description: >
      The system files or directories
      have an access mode too permissive
    impact: >
      - Read, write or execute files

      - Create potentially harmful files
    recommendation: >
      System files and directories
      must be restricted by a custom permission mask,
      for example an access mode 0600
    threat: >
      Anonymous attacker with local access to the machine
  category: Functionality Abuse
  examples:
    non_compliant: |
      The access modes are too permissive
      ```yaml
      Name:            task-pv-volume
      Labels:          type=local
      StorageClass:    standard
      Status:          Terminating
      Claim:
      Reclaim Policy:  Delete
      Access Modes:    *
      Capacity:        1Gi
      Message:
      Source:
        Type:          HostPath
        Path:          /tmp/data
        HostPathType:
      Events:            <none>
      ```
    compliant: |
      There is a secure access mode configuration
      ```yaml
      Name:            task-pv-volume
      Labels:          type=local
      StorageClass:    standard
      Status:          Terminating
      Claim:
      Reclaim Policy:  Delete
      Access Modes:    0600
      Capacity:        1Gi
      Message:
      Source:
        Type:          HostPath
        Path:          /tmp/data
        HostPathType:
      Events:            <none>
      ```
  remediation_time: '15'
  es:
    title: Excessive privileges - Access Mode
    description: >
      Los archivos o directorios del sistema
      cuentan con un modo de acceso demasiado permisivo.
    impact: >
      - Leer modificar, ejecutar o eliminar archivos

      - Crear archivos potencialmente maliciosos
    recommendation: >
      Los archivos y directorios de la aplicación
      deben estar restringidos por una máscara de permisos
      personalizada, por ejemplo un access mode 0600.
    threat: >
      Atacante anónimo con acceso local a la máquina
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['033', '176', '265', '280']
  metadata:
    en:
      details: __empty__
'406':
  en:
    title: Non-encrypted confidential information - EFS
    description: >
      The AWS Elastic File System (EFS) service
      is encrypted with a default KMS key.
      Best practices recommend encrypting EFS instances
      using Customer Managed Keys (CMKs)
      to reduce risk of exposure
      and give full control of encrypted information.
    impact: >
      Obtain confidential information from file system
    recommendation: >
      Enable the EFS encryption
      using a KMS Customer Managed Key (CMK)
    threat: >
      Anonymous attacker with local access
      to one or more EFS instances
  category: Information Collection
  examples:
    non_compliant: |
      The resource does not have encryption correctly set up
      ```yaml
      Resources:
        FileSystemResource:
          Type: 'AWS::EFS::FileSystem'
          Properties:
            AvailabilityZoneName: us-east-1a
            BackupPolicy:
              Status: ENABLED
            Encrypted: false
      ```
      Terraform example
      ```terraform
      resource "aws_efs_file_system" "enabled" {
        creation_token = "example"
        encrypted      = false
      }
      ```
      Using the AWS CLI, the following command checks if the EFS file systems are encrypted
      ```
      $ aws efs describe-file-systems
            --region us-east-1
            --file-system-id {fs_id}
            --query 'FileSystems[*].Encrypted'
      ```
      If the command output returns **false**, the file system is unencrypted.
    compliant: |
      The resource has encryption correctly configured with a KMS Key
      ```yaml
      Resources:
        FileSystemResource:
          Type: 'AWS::EFS::FileSystem'
          Properties:
            AvailabilityZoneName: us-east-1a
            BackupPolicy:
              Status: ENABLED
            Encrypted: true
            KMS_Key: ${encrypted_key}
      ```
  remediation_time: '20'
  es:
    title: Non-encrypted confidential information - EFS
    description: >
      El servicio de AWS Elastic File System (EFS)
      se encuentra cifrado con una llave por defecto de KMS.
      Las mejores prácticas recomiendan encriptar las instancias de EFS
      utilizando llaves gestionadas por el cliente (CMK)
      para reducir el riesgo de exposición
      y otorgar control total de la información encriptada
    impact: >
      Obtener información confidencial de los archivos del sistema
    recommendation: >
      Habilitar el cifrado de instancias de EFS
      utilizando llaves gestionadas pr el cliente (CMK).
    threat: >
      Atacante anónimo con acceso local a una o más instancias de EFS
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['185', '300']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/bc_aws_general_104
'407':
  en:
    title: Non-encrypted confidential information - EBS Volumes
    description: >
      One or more Elastic Block Store (EBS) instances
      are no encrypted,
      allowing an attacker to read
      potencially sensitive information
      regarding the launch configuration of EC2 Instances
    impact: >
      Obtain information related to EC2 launch configuration
      to craft more complex attack vectors
    recommendation: >
      Enable the encryption of all the EBS instances
      by setting the property _Encrypted_ to _true_
    threat: >
      Anonymous attacker with local access to a EBS instance
  category: Information Collection
  examples:
    non_compliant: |
      The resource does not have an encryption mechanism correctly configured
      ```yaml
      Resources:
        myLaunchConfig:
          Type: AWS::AutoScaling::LaunchConfiguration
          Properties:
            ImageId: !Ref LatestAmiId
            SecurityGroups:
              - Ref: "myEC2SecurityGroup"
            InstanceType:
              Ref: "InstanceType"
            BlockDeviceMappings:
              - DeviceName: /dev/sda1
                Ebs:
                  VolumeSize: 30
                  VolumeType: "gp3"
              - DeviceName: /dev/sdm
                Ebs:
                  VolumeSize: 100
                  DeleteOnTermination: "false"
                  Encrypted : false
      ```
      Terraform example
      ```terraform
      resource "aws_launch_configuration" "example" {
        instance_type = "t2.micro"
        root_block_device {
          encrypted = false
        }
      }
      ```
      Using the AWS CLI, the following command checks if the EBS Volumes are encrypted
      ```
      $ aws ec2 describe-volumes
          --filters Name=attachment.instance-id, Values= {volume_id}
      ```
      If the command output returns **false** in the **Encrypted** element, the volume is unencrypted.
    compliant: |
      The resource has encryption mechanism enabled
      ```yaml
      Resources:
        myLaunchConfig:
          Type: AWS::AutoScaling::LaunchConfiguration
          Properties:
            ImageId: !Ref LatestAmiId
            SecurityGroups:
              - Ref: "myEC2SecurityGroup"
            InstanceType:
              Ref: "InstanceType"
            BlockDeviceMappings:
              - DeviceName: /dev/sda1
                Ebs:
                  VolumeSize: 30
                  VolumeType: "gp3"
              - DeviceName: /dev/sdm
                Ebs:
                  VolumeSize: 100
                  DeleteOnTermination: "false"
                  Encrypted : true
      ```
  remediation_time: '20'
  es:
    title: Non-encrypted confidential information - EBS Volumes
    description: >
      Una o más instancias de Elastic Block Store (EBS)
      no se encuentran cifradas,
      permitiendo a un atacante visualizar
      información potencialmente sensible
      relacionada al despliege de instancias de EC2
    impact: >
      Obtener información de despliegue de instancias de EC2
      para generar vectores de ataque más complejos
    recommendation: >
      Habilitar el cifrado de todas las instancias
      de EBS al establecer el valor de _Encrypted_ en _true_
    threat: >
      Atacante anónimo con acceso local a una instancia de EBS
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['185', '300']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/general_13
'408':
  en:
    title: Traceability Loss - API Gateway
    description: >
      Some AWS API Gateway instances
      do not enable the logging feature,
      discarding information that can be managed
      by other AWS services such as Cloudwatch
      to detect possible system anomalies
    impact: >
      Lose traceability of events of interest
      to detect potential security breaches
    recommendation: >
      - Enable the logging feature for all the API gateway instances

      - Set a destination for the log files
      using other log services such as CloudWatch or Cloudtrail
    threat: >
      Authenticated attacker from the Internet
      with access to the AWS console
  category: Deceptive Interactions
  examples:
    non_compliant: |
      The resource does not have the logging feature enabled
      ```yaml
      Resources:
        Dev:
          Type: AWS::ApiGateway::Stage
          Properties:
            StageName: Dev
            Description: Prod Stage
            RestApiId: MyRestApi
            Variables:
              Stack: Prod
      ```
      Terraform example
      ```terraform
      resource "aws_api_gateway_stage" "example" {
        deployment_id = aws_api_gateway_deployment.example.id
        rest_api_id   = aws_api_gateway_rest_api.example.id
        stage_name    = "example"
      }
      ```
      Using the AWS CLI, the following command checks that the AWS CloudWatch logs are enabled for all APIs created with Amazon API Gateway
      ```
      $ aws apigateway get-stages
            --region us-east-1
            --rest-api-id {api_id}
      ```
      The command output follows the following structure
      ```
      {
        "item": [
          {
            "stageName": "Development",
            "cacheClusterEnabled": false,
            "cacheClusterStatus": "NOT_AVAILABLE",
            "deploymentId": "z0haur",
            "lastUpdatedDate": 1509558521,
            "createdDate": 1509558521,
            "methodSettings": {}
          },
          {
            "stageName": "Production",
            "cacheClusterEnabled": false,
            "cacheClusterStatus": "NOT_AVAILABLE",
            "deploymentId": "z0haur",
            "lastUpdatedDate": 1509557971,
            "createdDate": 1509557971,
            "methodSettings": {}
          }
        ]
      }
      ```
      If the methodSettings object returned for the specified stage does not contain a property named loggingLevel, logging using Amazon CloudWatch is not enabled for the selected API stage.
    compliant: |
      The resource has the logging feature correctly enabled
      ```yaml
      Resources:
        Prod:
          Type: AWS::ApiGateway::Stage
          Properties:
            AccessLogSetting:
              DestinationArn: String
              Format: String
            StageName: Prod
            Description: Prod Stage
            RestApiId: MyRestApi
            Variables:
              Stack: Prod
      ```
  remediation_time: '20'
  es:
    title: Traceability Loss - API Gateway
    description: >
      Algunas instancias de API Gateway de AWS
      no tienen habilitada la funcionalidad de logging,
      descartando información que puede ser administrada
      por otros servicios como CloudWatch
      para detectar posibles anomalías en el sistema.
    impact: >
      Perder trazabilidad de eventos de interés
      ante posibles brechas de seguridad
    recommendation: >
      - Habilitar la funcionalidad de Logging en las instancias
      de API gateway

      - Definir un destino para los archivos de log
      usando otros servicios como CloudWatch o CloudTrail
    threat: >
      Atacante autenticado en la consola de AWS desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['075', '079', '376']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/logging_17
'409':
  en:
    title: Non-encrypted confidential information - DynamoDB
    description: >
      Some AWS DyanmoDB instances are not encrypted
      or use the default KMS encryption
      which do not use a Customer Managed Key (CMK)
    impact: >
      Obtain critical information from the databases in plaintext
    recommendation: >
      Enable the DynamoDB encryption for all their instances
      using a custom KMS key
    threat: >
      Authenticated attacker from the Internet
      with access to the Database
  category: Information Collection
  examples:
    non_compliant: |
      The resource is not using server side encryption
      ```terraform
      resource "aws_dynamodb_table" "basic-dynamodb-table" {
        server_side_encryption {
          enabled     = false
          kms_key_arn = aws_kms_key.dynamo.arn
        }
      }
      ```
      A Dynamodb table is unencrypted
      ```yaml
      DDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          Encrypted : false
          SSESpecification:
            KMSMasterKeyId: keyid
            SSEEnabled: false
            SSEType: KMS
      ```
      Using the AWS CLI, the following command checks if Amazon DynamoDB tables are using AWS-managed Customer Master Keys (CMKs)
      ```
      $ aws dynamodb describe-table
          --region us-east-1
          --table-name {dynamo_table_name}
          --query 'Table.SSEDescription.SSEType'
      ```
      If the command output returns AES256 instead of KMS, the selected Amazon DynamoDB table is configured to use AWS-owned Customer Master Keys instead of AWS-managed CMKs for Server-Side Encryption, which is insecure.
    compliant: |
      The resource has server side encryption enabled
      ```terraform
      resource "aws_dynamodb_table" "basic-dynamodb-table" {
        server_side_encryption {
          enabled     = true
          kms_key_arn = aws_kms_key.dynamo.arn
        }
      }
      ```
  remediation_time: '20'
  es:
    title: Non-encrypted confidential information - DynamoDB
    description: >
      Algunas instancias de DynamoDB no se encuentran cifradas
      o utilizan el cifrado por defecto de KMS
      que no utiliza llaves administradas por el usuario (CMK)
    impact: >
      Obtener información crítica
      de las bases de datos en texto plano
    recommendation: >
      Habilitar el cifrado de las instancias de DynamoDB
      utilizando una llave KMS personalizada
    threat: >
      Atacante autenticado desde Internet con acceso a la base de Datos
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: H
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['185', '300']
  metadata:
    en:
      details: >
        https://docs.bridgecrew.io/docs/ensure-that-dynamodb-tables-are-encrypted
'410':
  en:
    title: Dependency Confusion
    description: >
      The application incorrectly defines the dependencies to be used.
      This generates some ambiguity that can be used by an attacker
      to confuse the package manager in charge of installing
      or updating the project's dependencies,
      with the aim of executing potentially harmful code,
      thus increasing the possible attack vectors.
    impact: >
      - Execute malicious code in the application

      - Deploy a malicious version of the application
      that can lead to a system unavailability
    recommendation: >
      - Set the name of the organization
      that owns the private dependency
      in the package manager file.

       - Set the organization in both the private and public registry
       of the package manager.
    threat: >
      Anonymous attacker from the Internet
  category: Functionality Abuse
  examples:
    non_compliant: |
      There is configuration to upload the package without the organization id
      ```java
      <distributionManagement>
        <repository>
          <url>https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/</url>
        </repository>
        <snapshotRepository>
          <url>https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/</url>
        </snapshotRepository>
      </distributionManagement>
      ```
    compliant: |
      All the registries of the package manager have the organization id set
      ```java
      <distributionManagement>
        <repository>
          <id>{organization_id}</id>
          <url>https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/</url>
        </repository>
        <snapshotRepository>
          <id>{organization_id}</id>
          <url>https://{WORKSPACE}.bytesafe.dev/maven/{REGISTRY}/</url>
        </snapshotRepository>
      </distributionManagement>
      ```
  remediation_time: '20'
  es:
    title: Dependency Confusion
    description: >
      La aplicación define incorrectamente las dependencias a usar.
      Debido a esto se genera cierta ambigüedad que puede ser utilizada
      por un atacante para confundir al gestor de paquetes
      encargado de instalar o actualizar las dependencias del proyecto,
      con el objetivo de ejecutar código potencialmente dañino,
      aumentando así los posibles vectores de ataque.
    impact: >
      - Ejecutar código malicioso en la aplicación

      - Desplegar una versión corrupta de la aplicación
      que pueda llevar a la indisponibilidad de la misma
    recommendation: >
      - Establecer el nombre de la organización propietaria
      de la dependencia privada en el archivo del gestor de paquetes.

      - Establecer la organización tanto en el registro privado
      como público del gestor de paquetes.
    threat: >
      Atacante anónimo desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: H
      availability: L
    temporal:
      exploit_code_maturity: H
      remediation_level: O
      report_confidence: C
  requirements: ['048', '262', '302']
  metadata:
    en:
      details: __empty__
'411':
  en:
    title: Insecure encryption algorithm - Default encryption
    description: >
      Some Amazon services support Key Management Service (KMS).
      As a good practice, it is recommended
      to use Customer Controlled Keys (CMK)
      instead of the default keys,
      in order to take full advantage of the KMS service.
    impact: >
      - Obtain sensitive information in plain text

      - Lose the malleability and control offered by a Customer Managed Key
    recommendation: >
      Enable the encryption using KMS Customer Controlled Keys (CMK)
    threat: >
      Authenticated attacker from the Internet with access to the service
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource has unsafe KMS configuration
      ```yaml
      Resources:
        MySecret:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret"
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 30
              ExcludeCharacters: '"@/\'
      ```
      The resource uses insecure encryption methods with default keys
      ```terraform
      resource "aws_dynamodb_table" "basic-dynamodb-table" {
        server_side_encryption {
          enabled     = true
          kms_key_arn = default
        }
      }
      ```
      Using the AWS CLI, the following two commands check the EBS volumes are using KMS CMK customer-managed keys instead of AWS managed-keys
      ```
      $ aws ec2 describe-volumes
            --volume-ids vol-f7f65326
      $ aws kms list-aliases
            --region us-east-1
      ```
      The first comand should return the KMS key ARN (Amazon Resource Name) ID. The ARN ID is returned as the value for the KmsKeyId parameter.
      The second command output should return all the KMS keys metadata.
      If the alias for the matched ID between the two command outputs is “alias/aws/ebs”, the key used for encryption is a default key / AWS-managed key.
    compliant: |
      The resource has safe configuration of KMS Key for encryption
      ```yaml
      Resources:
        MySecret:
          Type: 'AWS::SecretsManager::Secret'
          Properties:
            Name: MySecretForAppA
            Description: "This secret"
            GenerateSecretString:
              SecretStringTemplate: '{"username": "test-user"}'
              GenerateStringKey: "password"
              PasswordLength: 30
              ExcludeCharacters: '"@/\'
            KmsKeyId: keyId
      ```
  remediation_time: '20'
  es:
    title: Insecure encryption algorithm - Default encryption
    description: >
      Algunos servicios de Amazon son compatibles
      con el servicio de administración de llaves (KMS).
      Como buena práctica, es recomendable utilizar llaves
      controladas por el usuario (CMK) en lugar de las llaves por defecto,
      para utilizar todas las ventajas que ofrece el servicio KMS.
    impact: >
      - Obtener información confidencial en texto plano

      - Perder la maleabilidad y control
      que ofrece una llave administrada por el usuario
    recommendation: >
      Habilitar el cifrado utilizando llaves controladas por el usuario (CMK)
      del servicio de manejo de llaves de Amazon (KMS)
    threat: >
      Atacante autenticado desde Internet con acceso al servicio
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['147', '151', '181', '224']
  metadata:
    en:
      details: __empty__
'412':
  en:
    title: Lack of protection against deletion - Azure Key Vault
    description: >
      Some Azure Key Vaults instances
      do not enable properties that allow secrets
      to be recovered in the event of accidental deletion
      or by malicious actors.
    impact: >
      Delete sensitive secrets by accident
      with no chance of recovery
    recommendation: >
      Enable the properties EnableSoftDelete and EnablePurgeProtection
      in every Azure Key Vault (AKV) instance.
    threat: >
      Authenticated attacker from the Internet
      with write permissions in the vault
  category: Functionality Abuse
  examples:
    non_compliant: |
      The resource does not have any protection against deletion enabled
      ```terraform
      resource "azurerm_key_vault" "vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
      }
      ```
      Using the Azure CLI, the following command checks production Azure Key Vaults are recoverable
      ```
      $ az keyvault show
           --name {keyvault_id}
           --query 'properties.{"enableSoftDelete":enableSoftDelete,"enablePurgeProtection":enablePurgeProtection}'
      ```
      If the command output returns null for both "enablePurgeProtection" and "enableSoftDelete" configuration attributes, the verified Microsoft Azure Key Vault instance and its objects are not recoverable, which means that the resource does not have protection against deletion.
    compliant: |
      All resources have protection against deletion enabled
      ```terraform
      resource "azurerm_key_vault" "not_vulnerable" {
        name                       = "examplekeyvault"
        location                   = azurerm_resource_group.example.location
        resource_group_name        = azurerm_resource_group.example.name
        tenant_id                  = data.azurerm_client_config.current.tenant_id
        soft_delete_retention_days = 7
        soft_delete_enabled        = true
        purge_protection_enabled   = true
      }
      ```
  remediation_time: '20'
  es:
    title: Lack of protection against deletion - Azure Key Vault
    description: >
      Algunas instancias de Azure Key Vault
      no activan propiedades que permitan recuperar secretos
      en caso de borrado accidental o por cuenta de actores maliciosos.
    impact: >
      Eliminar secretos confidenciales por accidente
      sin posibilidad de recuperarlos
    recommendation: >
      Activar las propiedades EnableSoftDelete y EnablePurgeProtection
      en todas las instancias de Azure Key Vault (AKV)
    threat: >
      Atacante autenticado desde Internet
      con permisos de edición en los secretos
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: H
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['186', '265']
  metadata:
    en:
      details: __empty__
'413':
  en:
    title: Insecure file upload - DLL Injection
    description: >
      The application does not properly validate
      the DLL files, allowing the injection
      of malicious DLLS
    impact: >
      Inject backdoors, virus, or
      other types of malicious files into the application
    recommendation: >
      - Verify with an antivirus that the imported DLLs
      do not contain virus, backdoors or potentially harmful information

      - Define a white-list of allowed DLLs
      and their respective integrity hashes
    threat: >
      Anonymous attacker from local machine
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not verify on the server side the inputs before a file upload
      ```c {3,7,15}
      using System;
      using System.Reflection;
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form["in"];
          byte[] rawAssembly = Convert.FromBase64String(input);
          Assembly.Load(rawAssembly);
        }
      }
      ```
    compliant: |
      The application performs server side validation for all inputs
      ```c {3,7,15}
      using System;
      using System.Reflection;
      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form["in"];
          string cleanInput = clearRawUserInput(input);
          byte[] rawAssembly = Convert.FromBase64String(cleanInput);
          Assembly.Load(rawAssembly);
        }
      }
      ```
  remediation_time: '20'
  es:
    title: Insecure file upload - DLL Injection
    description: >
      La aplicación no valida adecuadamente
      los archivos DLL permitiendo la inyección
      de DLLs maliciosos.
    impact: >
      Inyectar backdoors, virus u otro tipo de archivos
      maliciosos en la aplicación.
    recommendation: >
      - Verificar con un antivirus que los DLLs importados
      no contengan virus, backdoors o información potencialmente dañina

      - Definir una lista de DDLs permitidos en la aplicación
      junto con sus hashes de Integridad
    threat: >
      Atacante anónimo desde máquina local
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['040', '041']
  metadata:
    en:
      details: __empty__
'414':
  en:
    title: Insecure service configuration - Header Checking
    description: >
      The application disables the HeaderChecking property,
      which enables the encoding of newlines and carriage returns,
      thus allowing the injection of malicious headers
    impact: >
      Ease header injection attacks
      through newlines and carriage returns
    recommendation: >
      Set the EnableHeaderChecking property to true,
      of remove the line that sets the property in false,
      since its default value is true
    threat: >
      Anonymoous attacker from the Internet
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application has the EnableHeaderchecking disabled
      ```c {3,7,15}
      using System;
      using System.Web.Configuration;

      class TestClass {
        public void TestMethod() {
          HttpRuntimeSection httpRuntimeSection = new HttpRuntimeSection();
          httpRuntimeSection.EnableHeaderChecking = false;
        }
      }
      ```
    compliant: |
      The application correctly configures the EnableHeaderChecking
      ```c {3,7,15}
      using System;
      using System.Web.Configuration;

      class TestClass {
        public void TestMethod() {
          HttpRuntimeSection httpRuntimeSection = new HttpRuntimeSection();
          httpRuntimeSection.EnableHeaderChecking = true;
        }
      }
      ```
  remediation_time: '20'
  es:
    title: Insecure service configuration - Header Checking
    description: >
      La aplicación deshabilita la propiedad HeaderChecking,
      la cual codifica saltos de línea y carriage returns,
      permitiendo la inyección de headers maliciosos
    impact: >
      Facilitar vulnerabilidades de inyección de headers
      por medio de saltos de línea y carriage returns
    recommendation: >
      Establecer la propiedad EnableHeaderChecking en true
      o eliminar la línea donde se establece en false,
      ya que su valor por defecto es true
    threat: >
      Atacante anónimo desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'415':
  en:
    title: Insecure service configuration - Container level access policy
    description: >
      Container level policy is not set
      when generating a service Shared Access Signature (SAS).
      A container-level access policy
      can be modified or revoked at any time.
      It provides greater flexibility and control
      over the permissions that are granted
    impact: >
      Create IDORs, excessive privileges,
      or broken authentication vulnerabilities
    recommendation: >
      Specify a valid group policy identifier when generating the service SAS.
    threat: >
      Authenticated attacker from the Internet
  category: Functionality Abuse
  examples:
    non_compliant: |
      The service SAS does not specify any group policy identifier
      ```javascript
      var storageAccount = CloudStorageAccount.Parse(connectionString);
      var blobClient = storageAccount.CreateCloudBlobClient();

      var blobContainer = blobClient.GetContainerReference(containerName);
      blobContainer.CreateIfNotExists();

      var storedPolicy = new SharedAccessPolicy()
      {
        SharedAccessExpiryTime = DateTime.UtcNow.AddHours(10),
        Permissions = SharedAccessBlobPermissions.Read |
                      SharedAccessBlobPermissions.Write |
                      SharedAccessBlobPermissions.List
        AccessPolicy = defaultPolicy();
      };
      //Generate SAS
      var containerSignature = blobContainer.GetSharedAccessSignature(null, policyName);
      var uri = blobContainer.Uri + containerSignature;
      ```
    compliant: |
      The service SAS is correctly configured with a group policy
      ```javascript
      var storageAccount = CloudStorageAccount.Parse(connectionString);
      var blobClient = storageAccount.CreateCloudBlobClient();

      var blobContainer = blobClient.GetContainerReference(containerName);
      blobContainer.CreateIfNotExists();

      var storedPolicy = new SharedAccessPolicy()
      {
        SharedAccessExpiryTime = DateTime.UtcNow.AddHours(10),
        Permissions = SharedAccessBlobPermissions.Read |
                      SharedAccessBlobPermissions.Write |
                      SharedAccessBlobPermissions.List
        AccessPolicy = groupPolicy();
      };

      //Define access permissions before generating the key
      var permissions = blobContainer.GetPermissions();
      permissions.SharedAccessPolicies.Clear();
      permissions.SharedAccessPolicies.Add(policyName, storedPolicy);
      blobContainer.SetPermissions(permissions);

      var containerSignature = blobContainer.GetSharedAccessSignature(null, policyName);
      var uri = blobContainer.Uri + containerSignature;
      ```
  remediation_time: '50'
  es:
    title: Insecure service configuration - Container level access policy
    description: >
      Las políticas a nivel de contenedor
      no se están definiendo cuando se genera
      una firma de acceso compartido (SAS).
      Las políticas a nivel de contenedor
      pueden ser modificadas o revocadas en cualquier momento,
      y proporcionan más flexibilidad y control
      sobre los permisos otorgados
    impact: >
      Crear vulnerabilidades tipo IDOR,
      permisos excesivos o Broken Authentication.
    recommendation: >
      Especificar un identificador de políticas de grupo válido
      cuando se genere el servicio SAS.
    threat: >
      Atacante autenticado desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['186']
  metadata:
    en:
      details: __empty__
'416':
  en:
    title: XAML injection
    description: >
      The application does not properly validate user input,
      allowing XamlReader instances to be manipulated
      to generate malicious elements
      that can interact with other system actors
    impact: >
      Create malicious elements that can produce
      more severe vulnerabilities
    recommendation: >
      Define length and content validations
      in all the system imputs
    threat: >
      Authenticated attacker from the Internet
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not perform any server side validation for user inputs
      ```c {3,7,15}
      using System;
      using System.IO;

      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form["in"];
          byte[] bytes = Convert.FromBase64String(input);
          MemoryStream ms = new MemoryStream(bytes);
          System.Windows.Markup.XamlReader.Load(ms);
        }
      }
      ```
    compliant: |
      The application perform server side validation of all system inputs
      ```c {3,7,15}
      using System;
      using System.IO;

      public partial class WebForm : System.Web.UI.Page {
        protected void Page_Load(object sender, EventArgs e) {
          string input = Request.Form["in"];
          string cleanInput = clearRawUserInput(input);
          byte[] bytes = Convert.FromBase64String(cleaninput);
          MemoryStream ms = new MemoryStream(bytes);
          System.Windows.Markup.XamlReader.Load(ms);
        }
      }
      ```
  remediation_time: '20'
  es:
    title: XAML injection
    description: >
      La aplicación no valida adecuadamente
      las entradas de usuario,
      permitiendo manipular instancias de XamlReader
      para generar elementos maliciosos
      que pueden interactuar con otros actores del sistema
    impact: >
      Crear elementos maliciosos que pueden
      producir vulnerabilidades más severas
    recommendation: >
      Implementar validaciones de longitud y contenido
      en todas las entradas del sistema
    threat: >
      Atacante autenticado desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'417':
  en:
    title: Account Takeover
    description: >
      By exploiting one or several application vulnerabilities
      it is possible to take control over a user account
      and perform action on his behalf
    impact: >
      - Affect the traceability and non-repudiation
      of the user's actions.

      - Deny the access of a legitimate user
      to its own account

      - Obtain potentially confidential information
      from the user account
    recommendation: >
      Define account recovery mechannisms,
      validating that the requester is the account owner.
    threat: >
      Authenticated attacker from the Internet
  category: Functionality Abuse
  examples:
    non_compliant: |
      The application does not validate the account owner is the same resetting the password
      ```java
      public void recoverAccount(useremail, userId){
        if(isValidUser(userId)) {
          Account account = application.sendPasswordResetEmail(userEmail);
          Account account = application.resetPassword("newPassword");
        }
      }
      ```
    compliant: |
      The application includes methods to validate the account owner is requesting the password change
      ```java
      public void recoverAccount(userEmail, userId){
        if(isValidUser(userId, userEmail)) {
          Account account = application.sendPasswordResetEmail(userEmail);
          Account account = application.resetPassword("$TOKEN", "newPassword");
        }
      }
      ```
  remediation_time: '100'
  es:
    title: Account Takeover
    description: >
      Al explotar una o varias vulnerabilidades presentes en la aplicación,
      es posible tomar el control de una cuenta de un usuario del sistema
      y realizar acciones a su nombre
    impact: >
      - Afectar la trazabilidad e irrenunciabilidad
      de las acciones del usuario.

      - Denegar el acceso del usuario legítimo
      a su propia cuenta

      - Visualizar información potencialmente confidencial
      de la cuenta del usuario
    recommendation: >
      Establecer mecanismos de recuperación de cuentas,
      validando que quien solicita el acceso es el dueño de la misma
    threat: >
      Atacante autenticado desde Internet
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['266', '238']
  metadata:
    en:
      details: __empty__
'418':
  en:
    title: Insecure service configuration - Docker
    description: >
      Using the ADD command to automatically extract files
      to the destination directory
      adds the risk of exploiting vulnerabilities
      such as zip bombs and Zip Slip
      that could then be activated automatically.
    impact: >
      Expose the system to zip-based vulnerabilities
    recommendation: >
      Avoid the use of the ADD command
      unless you need extract a local tar file.
      Instead, use the COPY command
    threat: >
      Authenticated local attacker with access to the container
  category: Functionality Abuse
  examples:
    non_compliant: |
      The Docker service performs an insecure use of the ADD command
      ```yaml
      FROM python:3.7-alpine
      WORKDIR /code
      ENV FLASK_APP=app.py
      ENV FLASK_RUN_HOST=0.0.0.0
      RUN apk add --no-cache gcc musl-dev
      ADD requirements.txt requirements.txt
      RUN pip install -r requirements.txt
      EXPOSE 5000
      CMD ["flask", "run"]
      ```
    compliant: |
      The Docker service avoids the use of the ADD command
      ```yaml
      FROM python:3.7-alpine
      WORKDIR /code
      ENV FLASK_APP=app.py
      ENV FLASK_RUN_HOST=0.0.0.0
      RUN apk add --no-cache gcc musl-dev
      COPY requirements.txt requirements.txt
      RUN pip install -r requirements.txt
      EXPOSE 5000
      CMD ["flask", "run"]
      ```
  remediation_time: '20'
  es:
    title: Insecure service configuration - Docker
    description: >
      El uso de comando ADD para extraer archivos automáticamente
      al directorio de destino
      agrega el riesgo de explotar vulnerabilidades como
      zip bombs y Zip Slip que luego podrían activarse automáticamente.
    impact: >
      Exponer el sistema a vulnerabilidades basadas en zip.
    recommendation: >
      Evitar el uso del comando ADD
      a menos que necesite extraer un archivo tar local.
      En su lugar utilizar el comando COPY.
    threat: >
      Atacante local autenticado con acceso al contenedor.
  score:
    base:
      attack_vector: L
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'419':
  en:
    title: Traceability Loss - Kubernetes
    description: >
      The kubernetes configuration does not set a logging
      property, which prevents log files from being created.
      These files are useful for identifying and tracking
      malicious actions or anomalous behavior. Alternatively,
      log files do not have sufficient level of detail.
    impact: >
      Perform harmful actions without raising an alert.
    recommendation: >
      Enable auditing on the Kubernetes API Server and
      set the desired audit log path.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      The Kubernetes configuration does not set a log file configuration
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        creationTimestamp: null
        labels:
          component: kube-apiserver
          tier: control-plane
        name: kube-apiserver
        namespace: kube-system
      spec:
        containers:
        - command:
      +  - kube-apiserver
      ```
    compliant: |
      The Kubernetes configuration includes the desired log path
      ```yaml
      apiVersion: v1
      kind: Pod
      metadata:
        creationTimestamp: null
        labels:
          component: kube-apiserver
          tier: control-plane
        name: kube-apiserver
        namespace: kube-system
      spec:
        containers:
        - command:
      +  - kube-apiserver
      +  - --audit-log-path=/path/to/log
          image: gcr.io/google_containers/kube-apiserver-amd64:v1.6.0
          ...
      ```
  remediation_time: '60'
  es:
    title: Traceability Loss - Kubernetes
    description: >
      La configuración de kubernetes no establece una propiedad de
      registro, lo que evita que se creen archivos de registro. Estos
      archivos son útiles para identificar y rastrear acciones maliciosas
      o comportamientos anómalos. Alternativamente, los archivos de
      registro no tienen suficiente nivel de detalle.
    impact: >
      Realizar acciones perjudiciales sin que se produzca una alerta.
    recommendation: >
      Habilite la auditoría en el servidor API de Kubernetes y configure
      la ruta de registro de auditoría deseada.
    threat: >
      Atacante autenticado desde internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['075', '376', '377', '378']
  metadata:
    en:
      details: __empty__
'420':
  en:
    title: Password reset poisoning
    description: >
      The application generates password reset links improperly,
      allowing an attacker to manipulate the request by changing
      the domain to one under his control.
    impact: >
      Compromising user accounts.
    recommendation: >
      Ensure that password change URLs are not disposed in client-side
      requests.
    threat: >
      Attacker without authentication from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      ```python
      def send_email_password_reset(request: HTTP) -> bool:
          domain_app = request.body.redirect_url
          user = DB.find_user(request.session.user)

          if(user):
             token = generate_token(user.id)
             url = f"{domain_app}/reset-password?token={token}"
             Mailer.send_email(
                 from_email="support@vulnerable-app.com",
                 to_email=user.email,
                 message=f"To reset your account password, please click on the following link: {url}"
             )
             return True

          return False
      ```
    compliant: |
      ```python
      def send_email_password_reset(request: HTTP) -> bool:
          domain_app = env.production.domain_app
          user = DB.find_user(request.session.user)

          if(user):
              token = generate_token(user.id)
              url = f"{domain_app}/reset-password?token={token}"
              Mailer.send_email(
                  from_email="support@vulnerable-app.com",
                  to_email=user.email,
                  message=f"To reset your account password, please click on the following link: {url}"
              )
              return True

          return False
      ```
  remediation_time: '1440'
  es:
    title: Password reset poisoning
    description: >
      La aplicación genera links de restablecimiento de contraseña de forma
      inadecuada, permitiendo a un atacante manipular la petición cambiando
      el dominio a uno sobre su control.
    impact: >
      Comprometer cuentas de usuarios.
    recommendation: >
      Asegurar que las URL de cambio de password no sean dispuestas en las
      solicitudes del lado del cliente.
    threat: >
      Atacante sin autenticación desde internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: R
      scope: C
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['173', '238']
  metadata:
    en:
      details: __empty__
'421':
  en:
    title: Insecure encryption algorithm - Insecure Elliptic Curve
    description: >
      The system makes use of weak elliptic curves.
    impact: >
      - Produce incorrect results for some unusual curve points
      - Expose secret data when the input is not a curve point
      - Expose secret data through branch synchronization
      - Expose secret data through cache synchronization
    recommendation: >
      Ensure that the curves used are safe for both ECDLP and ECC in general.
    threat: >
      Unauthenticated attacker from the Internet.
  category: Information Collection
  examples:
    non_compliant: |
      ```yaml
      openssl ecparam -name secp256k1 -out secp256k1.pem
      ```
    compliant: |
      ```yaml
      openssl ecparam -name X25519 -out X25519.pem
      ```
  remediation_time: '60'
  es:
    title: Insecure encryption algorithm - Insecure Elliptic Curve
    description: >
      La aplicación genera links de restablecimiento de contraseña de forma
      inadecuada, permitiendo a un atacante manipular la petición cambiando
      el dominio a uno sobre su control.
    impact: >
      - Producir resultados incorrectos para algunos puntos de la curva poco comunes
      - Exponer datos secretos cuando la entrada no es un punto de curva
      - Exponer datos secretos a través de la sincronización de bifurcaciones
      - Exponer datos secretos a través de la sincronización de la caché
    recommendation: >
      Asegurarse que las curvas usadas sean seguras tanto para ECDLP como para ECC
      en general.
    threat: >
      Atacante sin autenticación desde internet.
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['148', '150']
  metadata:
    en:
      details: __empty__
'422':
  en:
    title: Server side template injection
    description: >
      The application allows injecting malicious entries into a server-side command
      template.
      This vulnerability occurs when an attacker can use the template's template syntax
      to inject
      a malicious payload into a template, which is then executed on the server side.
    impact: >
      - Execute commands remotely
      - View the contents of sensitive files stored on the server.
      - Obtain sensitive information.
      - Read system files.
      - Cause strange behavior on the server.
    recommendation: >
      Properly sanitize user-controlled inputs.
      Encourage the use of sandboxing.
    threat: >
      Unauthenticated attacker from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      ```yaml
      from jinja2 import Environment

      env = Environment()  # Sensitive: New Jinja2 Environment has autoescape set to false
      env = Environment(autoescape=False)  # Sensitive:
      ```
    compliant: |
      ```yaml
      from jinja2 import Environment
      env = Environment(autoescape=True)  # Compliant
      ```
  remediation_time: '1440'
  es:
    title: Server side template injection
    description: >
      La aplicación permite inyectar entradas maliciosas en una plantilla de comandos
      del lado del servidor. Esta vulnerabilidad ocurre cuando un atacante puede usar
      la
      sintaxis de la plantilla para inyectar una carga util maliciosa en una plantilla,
      que luego se ejecuta en el lado del servidor.
    impact: >
      - Ejecutar comandos remotamente
      - Visualizar el contenido de archivos sensibles almacenados en el servidor.
      - Obtener información sensible.
      - Leer archivos del sistema.
      - Causar comportamientos extraños en el servidor.
    recommendation: >
      Sanitizar correctamente las entradas controladas por el usuario.
      Propender por el uso de sandboxing.
    threat: >
      Atacante sin autenticación desde internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: N
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: C
  requirements: ['173', '176', '265', '266']
  metadata:
    en:
      details: __empty__
'423':
  en:
    title: Inappropriate coding practices - System exit
    description: >
      The J2EE application use System.exit(), it is undesirable for
      a web application to attempt to shut down the application container.  Accessing
      a function that can shut down the application is an avenue
      for denial of service (DoS) attacks.
    impact: >
      - Temporarily or permanently deny access to the application resource.
    recommendation: >
      Delegate shutdown functions only to privileged and duly authorized
      accesses.
    threat: >
      Authenticated attacker from the Internet.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are system.exit() in the code
      ```java
      Public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
          ...
        } catch (ApplicationSpecificException ase) {
          logger.error("Caught: " + ase.toString());
          System.exit(1);
        }
      }
      ```
    compliant: |
      The application does not have any system.exit() in the source code
      ```java
      Public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
          ...
        } catch (ApplicationSpecificException ase) {
          logger.error("Caught: " + ase.toString());
        }
      }
      ```
  remediation_time: '15'
  es:
    title: Inappropriate coding practices - System exit
    description: >
      La aplicación J2EE utiliza System.exit(), no es deseable que una
      aplicación web intente cerrar el contenedor de la aplicación.
      Acceder a una función que puede cerrar la aplicación es una vía
      para ataques de denegación de servicio (DoS).
    impact: >
      - Denegar temporal o permanentemente el acceso al recurso
       de la aplicación.
    recommendation: >
      Delegar las funciones de apagado solo a accesos privilegiados
      y debidamente autorizados.
    threat: >
      Atacante autenticado desde Internet.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['164', '167', '072', '327']
  metadata:
    en:
      details: __empty__
'424':
  en:
    title: Sideloaded
    description: >
      The installation of any application outside of a legitimate infrastructure such as the app
      store for the operating system in question is considered sideloading.
    impact: >
      - Allow installation from unknown media, increasing the possibility of infection by malware.
    recommendation: >
      Use only the official application distribution store or private platforms with access controls
      that prevent unauthorized personnel from access controls that prevent unauthorized personnel from
      accessing application installation packages.
    threat: >
      Unprivileged attacker from the internet impersonating the application.
  category: System Manipulation
  examples:
    non_compliant: |
      Code examples do not apply for this vulnerability
    compliant: |
      Code examples do not apply for this vulnerability
  remediation_time: '1440'
  es:
    title: Sideloaded
    description: >
      La instalación de cualquier aplicación fuera de una infraestructura legítima como la tienda de
      aplicaciones para el sistema operativo en cuestión se considera sideloading.
    impact: >
      - Permitir la instalación desde medios desconocidos, incrementando la posibilidad de infección
      por casos de malware.
    recommendation: >
      Usar solo la tienda oficial de distribución de aplicaciones o plataformas privadas con controles
      de acceso que impidan que personal no autorizado pueda acceder a los paquetes de instalación de
      las aplicaciones.
    threat: >
      Atacante sin privilegios desde internet suplantando la aplicación.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: C
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['041', '155']
  metadata:
    en:
      details: __empty__
'425':
  en:
    title: Server side cross-site scripting
    description: >
      It is possible to inject JavaScript into application fields, with the goal of having the
      server execute malicious code before rendering user input. This allows a remote attacker
      to compromise internal server files, make requests on behalf of the server or perform
      a port scan.
    impact: >
      - Extracting information from the server.
      - Execute actions on the server or on behalf of the server.
    recommendation: >
      Properly sanitize user input, before executing it on the server side.
    threat: >
      Unprivileged attacker from the internet impersonating the application.
  category: Unexpected Injection
  examples:
      non_compliant: |
        There are some clases in the applicatin that do not have any validation for the inputs
        ```java
        class ContactForm{
          public function configure(InputsMeta $inputs){
            addWidgets(
              new sfWidgetFormInput($inputs->name),
              new sfWidgetFormInput($inputs->email),
              new sfWidgetFormSelect($inputs->subject),
              new sfWidgetFormTextarea($inputs->message)
            );
          }
        }
        ```
      compliant: |
        The application defines parameters and limitations for input information.
        ```java
        class ContactController {
            /**
            * @input("name", type = "string", singleLine = true, required = false)
            * @input("email", type = "email")
            * @input("subject", type = "string", alternatives = ['Subject A', 'Subject B', 'Subject C'])
            * @input("message", type = "string", range = [4,])
            */
            public function post(Inputs $inputs){
              //Validates inputs and throw error when they are not included in the allowed and pre defined lists values
            }
        }

        class ContactForm extends sfFormX {
          public function configure(InputsMeta $inputs){
            //Bind the form to the input list of the @controller.@method
            //throws error when the @controller.@method.@input is not defined for a widget
            $this->addWidgets(
              new sfWidgetFormInput($inputs->name),
              new sfWidgetFormInput($inputs->email),
              new sfWidgetFormSelect($inputs->subject),
              new sfWidgetFormTextarea($inputs->message)
            );
            $this->widgetSchema->setNameFormat('contact[%s]');
          }
        }
        ```
  remediation_time: '45'
  es:
    title: Server side cross-site scripting
    description: >
      Es posible inyectar JavaScript en los campos de la aplicación, con el objetivo de que el
      servidor ejecute el código malicioso antes de renderizar la entrada del usuario. Esto
      permite a un atacante remoto comprometer archivos internos del servidor, realizar
      peticiones a nombre del servidor o realizar un escaneo de puertos.
    impact: >
      - Extraer información del servidor.
      - Ejecutar acciones en el servido o a nombre de el.
    recommendation: >
      Sanitizar correctamente las entradas del usuario, antes de ejecutarlas del lado del servidor.
    threat: >
      Atacante autenticado desde internet manipulando los parámetros de la aplicación.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: H
      remediation_level: U
      report_confidence: R
  requirements: ['173']
  metadata:
    en:
      details: __empty__
'426':
  en:
    title: Supply Chain Attack - Kubernetes
    description: >
      Kubernetes dependencies are not pinned to an exact digest,
      making the docker build unable the verify the integrity of the image
      and allowing a malicious actor to override the used components
      with malicious components without leaving a trace.
    impact: >
      Override depdendencies or component with malicious content.
    recommendation: >
      Use mechanisms such as git-commits, or artifacts and hashes
      to verify the data integrity.
    threat: >
      Anonymous attacker from Internet
      with write access to the provider releases.
  category: Functionality Abuse
  examples:
    non_compliant: |
      There are docker dependencies not pinned
      ```Kubernetes
      apiVersion: v1
      kind: Pod
      metadata:
        name: <Pod name>
      spec:
        containers:
        - name: <container name>
          image: ubuntu
      ```
    compliant: |
      All docker dependencies are pinned using secure mechanisms
      ```docker
      apiVersion: v1
      kind: Pod
      metadata:
        name: <Pod name>
      spec:
        containers:
        - name: <container name>
          image: ubuntu@sha256:45b23dee08af5e43a7fea6c4cf9c25ccf269ee113168c19722f87876677c5cb2
      ```
  remediation_time: '15'
  es:
    title: Supply Chain Attack - Kubernetes
    description: >
      Las dependencias de Kubernetes no están pineadas a un digest específico,
      haciendo que el proceso de construcción del docker
      sea incapaz de verificar la integridad de la imagen
      y permitiendo a un actor malicioso
      sobreescribir los componentes utilizados
      con componentes maliciosos
      sin dejar un rastro.
    impact: >
      Sobreescribir dependencias o componentes con contenido malicioso.
    recommendation: >
      Utilizar mecanismos como git-commits,
      o utilizar artefactos y hashes
      para verificar la integridad de los datos.
    threat: >
      Atacante anónimo desde Internet
      con acceso de escritura a los releasers del proveedor.
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: N
      integrity: L
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['266']
  metadata:
    en:
      details: __empty__
'427':
  en:
    title: Use of an insecure channel - Docker
    description: >
      The EXPOSE instruction informs Docker that the container listens on the specified
      network ports at runtime. Inform only the ports that your application needs and
      avoid exposing ports such as HTTP (80).
    impact: >
      Capture confidential information and credentials in plain text.
    recommendation: >
      Deploy the application over an encrypted communication channel,
      for instance, HTTPS with TLS.

      Always try to reduce the attack surface and use EXPOSE
      to mark and document only the required ports in the Dockerfile.
    threat: >
      Anonymous attacker on adjacent network
      performing a man-in-the-middle.
  es:
    title: Use of an insecure channel - Docker
    description: >
      La instrucción EXPOSE informa a Docker que el contenedor escucha en los puertos
      de red especificados en tiempo de ejecución. Informe solo los puertos
      que su aplicación necesita y evite exponer puertos como HTTP (80).
    impact: >
      Capturar información confidencial y credenciales en texto plano.
    recommendation: >
      Desplegar la aplicación sobre un canal de comunicación cifrado,
      por ejemplo, HTTPS utilizando TLS.

      Reducir la superficie de ataque y usar EXPOSE para marcar y documentar
      solo los puertos requeridos en el Dockerfile.
    threat: >
      Atacante anónimo en red adyacente
      ejecutando un ataque de hombre en el medio.
  category: Information Collection
  examples:
    non_compliant: |
      Some insecure channels are used to deploy the application
      ```Dockerfile

      FROM node:14-alpine AS development
      ENV NODE_ENV development
      WORKDIR /app
      COPY package.json .
      RUN npm install
      COPY . .
      EXPOSE 80
      CMD [ "node", "app.js" ]

      ```
    compliant: |
      Use secure channels to deploy the application
      ```Dockerfile

      FROM node:14-alpine AS development
      ENV NODE_ENV development
      WORKDIR /app
      COPY package.json .
      RUN npm install
      COPY . .
      EXPOSE 443
      CMD [ "node", "app.js" ]

      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: A
      attack_complexity: H
      privileges_required: N
      user_interaction: R
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['181']
  metadata:
    en:
      details: __empty__
'428':
  en:
    title: Inappropriate coding practices - invalid file
    description: >
      Files are stored in the repository that cannot be verified
      because their content is not compatible with their extension.
    impact: >
      - Difficult security auditing process.

      - Cause an inadequate operation in the different applications
        that make use of it.
    recommendation: >
      - Verify the identified files and adjust their content to their
       corresponding extension.
    threat: >
      Attacker authenticated from the Internet with access to the source code.
  es:
    title: Inappropriate coding practices - invalid file
    description: >
      En el repositorio se almacenan archivos que no se pueden verificar
      debido a que su contenido no es compatible con su extensión.
    impact: >
      - Dificultar el proceso auditoría de seguridad.

      - Provocar un inadecuado funcionamiento en las distintas aplicaciones
        que hacen uso de el..
    recommendation: >
      Verificar los archivos identificados y ajustar su contenido a su
        correspondiente extensión.
    threat: >
      Atacante autenticado desde Internet con acceso al código fuente.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Inappropriate use of comments in json file.
      ```json
      [
      //This is a comment to be adjusted in production.
        {
          "name": "example document",
          "int": 123,
          "notation": -123.123e-2,
          "unicode": "\\u2665",
          "character": "0",
        },
      ]
      ```
    compliant: |
      Use of comments in json file.
      ```json
      [
        {
          "_comment": "comment text goes here...",
          "name": "example document",
          "int": 123,
          "notation": -123.123e-2,
          "unicode": "\\u2665",
          "character": "0",
        },
      ]
      ```
  remediation_time: '15'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: N
      integrity: N
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['046']
  metadata:
    en:
      details: __empty__
'429':
    en:
      title: Universal cross-site scripting (UXSS)
      description: >
        Universal cross-site scripting exploits client-side vulnerabilities, either
        through the browser or the extensions that the user enables, leading to the
        possibility of cross-side scripting exploitation or the execution of malicious
        code.
      impact: >
        - Persistently inject malicious JavaScript code.
        - hijack any session that belongs open in the compromised browser.
        - Execute malicious code.
      recommendation: >
        Keep your browsers and extensions up to date. Although this is not a definitive
        solution to the specific vulnerability, always use and install only what is necessary.
      threat: >
        Unauthenticated attacker from the Internet with access to the victim's browser.
    es:
      title: Universal cross-site scripting (UXSS)
      description: >
        Universal cross-site scripting explota las vulnerabilidades del lado del cliente,
        bien sea por el navegador o las extenciones que el usuario habilite ocacionando la
        posibilidad de explotacion de un cross-side-scripting o llegar a ejecutar codigo
        malicioso.
      impact: >
        - Inyectar código JavaScript malicioso de forma persistente.
        - Apropiarse de cualquier sesión que pertenezca abierta en el navegador comprometido.
        - Ejecución de código malicioso.
      recommendation: >
        Mantenga sus navegadores y extensiones actualizadas. Aunque esto no sea una
        solución definitiva a la vulnerabilidad en específico, siempre use e instale únicamente
        lo necesario.
      threat: >
        Atacante no autenticado desde Internet con acceso al navegador de la víctima.
    category: Unexpected Injection
    examples:
      non_compliant: |
        Code examples do not apply for this vulnerability
      compliant: |
        Code examples do not apply for this vulnerability
    remediation_time: '600'
    score:
      base:
        attack_vector: N
        attack_complexity: H
        privileges_required: N
        user_interaction: N
        scope: C
        confidentiality: H
        integrity: L
        availability: L
      temporal:
        exploit_code_maturity: P
        remediation_level: U
        report_confidence: C
    requirements: ['173']
    metadata:
      en:
        details: __empty__
'430':
    en:
      title: Serverless - one dedicated IAM role per function
      description: >
        Avoid sharing IAM roles with multiple Lambda functions. As permissions are added to
        the role, these are shared across all functions using this role. By using one
        dedicated IAM role per function, you can control permissions more intentionally.
      impact: >
        Execute actions that should be restricted to other groups or roles.
      recommendation: >
        Every Lambda function should have a 1:1 relationship with an IAM role. Even if some
        functions have the same policy initially, always separate the IAM roles to ensure least
        privilege policies.
      threat: >
        Authenticated attacker from the Internet with access to a misconfigured role.
    es:
      title: Serverless - one dedicated IAM role per function
      description: >
        Evite compartir roles de IAM con varias funciones de Lambda. A medida que se agregan
        permisos al rol, estos se comparten entre todas las funciones que usan este rol. Al
        usar un rol de IAM dedicado por función, puede controlar los permisos de manera más
        intencional.
      impact: >
        Ejecutar acciones que deberían estar restringidas a otros grupos o roles.
      recommendation: >
        Cada función de Lambda debe tener una relación 1:1 con un rol de IAM. Incluso si algunas
        funciones tienen la misma política inicialmente, siempre separe los roles de IAM para
        garantizar políticas de privilegios mínimos.
      threat: >
        Atacante desde Internet con acceso a cualquiera de los roles mal configurados.
    category: Unexpected Injection
    examples:
      non_compliant: |
        ``` yaml
        iamRoleStatements:
          - Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
            Resource: "arn:aws:dynamodb:us-east-1:*:*"
          - Effect: "Allow"
            Action:
              - xray:PutTelemetryRecords
              - xray:PutTraceSegments
            Resource: "*"
        ```
      compliant: |
        ```yaml
        createFunctionRole:
          Type: AWS::IAM::Role
          Properties:
            RoleName: ${self:service}-${self:custom.stage}-create-${self:custom.region}-lambdaRole
            AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Principal:
                    Service:
                      - lambda.amazonaws.com
                  Action: sts:AssumeRole
            Policies:
              - PolicyName: inlinePolicy
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                    - Effect: Allow
                      Action:
                        - logs:PutLogEvents
                      Resource:
                        - 'Fn::Join':
                        - ':'
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - log-group:/aws/lambda/${self:service}-${self:custom.stage}-create:*
                    - Effect: "Allow"
                      Action:
                      - xray:PutTraceSegments
                      Resource: "*"
                    - Effect: Allow
                      Action:
                      - dynamodb:PutItem
                      Resource:
                      - 'Fn::Join':
                      - ':'
                      - 'arn:aws:dynamodb'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
        ```
    remediation_time: '30'
    score:
      base:
        attack_vector: N
        attack_complexity: H
        privileges_required: H
        user_interaction: N
        scope: U
        confidentiality: L
        integrity: L
        availability: N
      temporal:
        exploit_code_maturity: U
        remediation_level: U
        report_confidence: R
    requirements: ['095', '096', '186']
    metadata:
      en:
        details: __empty__
'431':
    en:
      title: Supply Chain Attack - NPM
      description: >
        NPM dependencies do not have a software integrity definition file to use, allowing third party
        actors to change or inject malicious software.
      impact: >
        Override depdendencies or component with malicious content.
      recommendation: >
        Pin your version numbers in package.json
        Use a package-lock.json and install with npm ci
      threat: >
        Anonymous attacker from Internet
        with write access to the provider releases.
    category: Functionality Abuse
    examples:
      non_compliant: |
        There are docker dependencies not pinned
        ```json

        ```
      compliant: |
        All docker dependencies are pinned using secure mechanisms
        ```json

        ```
    remediation_time: '15'
    es:
      title: Supply Chain Attack - NPM
      description: >
        Las dependencias de NPM no cuentan con un archivo de definición de integridad del software a usar,
        permitiendo a actores terceros cambiar o inyectar software malicioso.
      impact: >
        Sobreescribir dependencias o componentes con contenido malicioso.
      recommendation: >
        Fija tus números de versión enpackage.json
        Usar package-lock.jsone instalar connpm ci
      threat: >
        Atacante anónimo desde Internet
        con acceso de escritura a los releasers del proveedor.
    score:
      base:
        attack_vector: N
        attack_complexity: H
        privileges_required: N
        user_interaction: R
        scope: U
        confidentiality: N
        integrity: L
        availability: N
      temporal:
        exploit_code_maturity: U
        remediation_level: O
        report_confidence: R
    requirements: ['266']
    metadata:
      en:
        details: __empty__
'432':
  en:
    title: Inappropriate coding practices - relative path command
    description: >
      Files are found that reference executables within the system that make use of relative path definition.
      When a binary that makes use of relative paths is executed, they call the executables of environment variables
      or PATH, which an attacker can manipulate, being able to compromise the system completely.
    impact: >
      Obtain uncontrolled privileges.
    recommendation: >
      Using absolute paths for calling executables.
    threat: >
      Authenticated attacker with local access to the compromised system.
  es:
    title: Inappropriate coding practices - relative path command
    description: >
      Se encuentran archivos que hacen referencia a ejecutables dentro del sistema que hace uso de la definición de
      rutas relativas. Cuando se ejecuta un binario que hace uso de rutas relativas, estos llaman los ejecutables de
      variables de ambiente o PATH, que un atacante puede manipular, pudiendo comprometer el sistema por completo.
    impact: >
      Obtener privilegios no controlados.
    recommendation: >
      Usar rutas absolutas para la el llamado de ejecutables.
    threat: >
      Atacante autenticado con acceso local al sistema comprometido.
  category: Functionality Abuse
  examples:
    non_compliant: |
      Relative path in executable pwd
      ```C
        #include<test.h>
         void main()
          {
            Setuid(0);
            setgid(0);
            system("pwd");
          }
      ```
    compliant: |
      Absolute path in executable pwd
      ```C
        #include<test.h>
         void main()
          {
            Setuid(0);
            setgid(0);
            system("/bin/pwd");
          }
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: L
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: U
      remediation_level: U
      report_confidence: R
  requirements: ['156', '168', '266', '302', '342']
  metadata:
    en:
      details: __empty__
'433':
  en:
    title: Non-encrypted confidential information - Redshift Cluster
    description: >
      Some AWS Redshift cluster are not encrypted.
    impact: >
      Obtain critical information from the databases in plaintext
    recommendation: >
      Enable the redshift encryption for all clusters
    threat: >
      Authenticated attacker from the Internet
      with access to the redshift cluster
  category: Information Collection
  examples:
    non_compliant: |
      The resource is not using encrypted
      ```Yaml
      Resources:
        RedshiftCluster:
          Type: AWS::Redshift::Cluster
          Properties:
              ClusterType: multi-node
              NumberOfNodes: 2
              DBName: mydatabase
              KmsKeyId: arn:aws:kms:us-east-1:123456789099:key/9876qasw-98ab-76cd-56ef-9087654321ef
      ```
    compliant: |
      The resource has encryption enabled
      ```
      Resources:
        RedshiftCluster:
          Type: AWS::Redshift::Cluster
          Properties:
              ClusterType: multi-node
              NumberOfNodes: 2
              DBName: mydatabase
              MasterUsername: myuser
              MasterUserPassword: mypassword
              Encrypted: true
              KmsKeyId: arn:aws:kms:us-east-1:123456789099:key/9876qasw-98ab-76cd-56ef-9087654321ef
      ```

  remediation_time: '60'
  es:
    title: Non-encrypted confidential information - Redshift Cluster
    description: >
      Algunos clústeres de AWS Redshift no están cifrados.
    impact: >
      Obtener información crítica de las bases de datos en texto plano
    recommendation: >
      Habilitar el cifrado de redshift para todos los clusters
    threat: >
      Atacante autentificado desde Internet con acceso al cluster redshift
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: H
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: U
      remediation_level: O
      report_confidence: R
  requirements: ['185', '300']
  metadata:
    en:
      details: >
        https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-db-encryption.html
'434':
  en:
    title: Client-side template injection
    description: >
      The application allows injecting malicious entries into a client-side command
      template.
      This vulnerability occurs when an attacker can use the template's template syntax
      to inject a malicious payload into a template, which is then executed on the client side.
    impact: >
      - Generate dynamic client-side content.
      - Execution of unwanted code in the context of the user's browser.
      - Theft of sensitive information.
      - Manipulation of page content.
      - Malware propagation
    recommendation: >
      Properly sanitize user-controlled inputs.
    threat: >
      Authenticated attacker from the Internet.
  category: Unexpected Injection
  examples:
    non_compliant: |
      ```javascript
      import { Component, OnInit } from '@angular/core';
      import { DomSanitizer, SafeHtml } from "@angular/platform-browser";
      import { ActivatedRoute } from '@angular/router';

      @Component({
          template: '<div id="hello" [innerHTML]="hello"></div>'
      })
      export class HelloComponent implements OnInit {
        hello: SafeHtml;

        constructor(private sanitizer: DomSanitizer, private route: ActivatedRoute) { }

        ngOnInit(): void {
          let name = this.route.snapshot.queryParams.name;
          let html = "<h1>Hello " + name + "</h1>";
          this.hello = this.sanitizer.bypassSecurityTrustHtml(html); // Sensitive
        }
      }
      ```
    compliant: |
      ```javascript
      import { Component, OnInit } from '@angular/core';
      import { DomSanitizer } from "@angular/platform-browser";
      import { ActivatedRoute } from '@angular/router';

      @Component({
        template: '<div id="hello"><h1>Hello {{name}}</h1></div>',
      })
      export class HelloComponent implements OnInit {
        name: string;

        constructor(private sanitizer: DomSanitizer, private route: ActivatedRoute) { }

        ngOnInit(): void {
          this.name = this.route.snapshot.queryParams.name;
        }
      }
      ```
  remediation_time: '1440'
  es:
    title: Client-side template injection
    description: >
      La aplicación permite inyectar entradas maliciosas en una plantilla de comandos
      del lado del cliente. Esta vulnerabilidad ocurre cuando un atacante puede usar
      la sintaxis de la plantilla para inyectar una carga util maliciosa en una plantilla,
      que luego se ejecuta en el lado del servidor.
    impact: >
      - Generar contenido dinámico del lado del cliente.
      - Ejecución de código no deseado en el contexto del navegador del usuario.
      - Robo de información sensible.
      - Manipulación del contenido de las páginas.
      - Propagación de malware
    recommendation: >
      Sanitizar correctamente las entradas controladas por el usuario.
    threat: >
      Atacante autenticado desde internet.
  score:
    base:
      attack_vector: N
      attack_complexity: L
      privileges_required: L
      user_interaction: N
      scope: C
      confidentiality: L
      integrity: N
      availability: N
    temporal:
      exploit_code_maturity: P
      remediation_level: U
      report_confidence: C
  requirements: ['173', '176', '265', '266']
  metadata:
    en:
      details: __empty__
'435':
  en:
    title: Use of software with known vulnerabilities in environments
    description: >
      The system uses the version of a software or dependency
      with known vulnerabilities.
    impact: >
      Exploit found vulnerabilities in the affected components.
    recommendation: >
      Update the affected software to the versions recommended
      by the vendor.
    threat: Authenticated attacker from the Internet.
  es:
    title: Use of software with known vulnerabilities in environments
    description: >
      El sistema usa la versión de un software o dependencia
      con vulnerabilidades conocidas.
    impact: >
      Explotar vulnerabilidades encontradas en los componentes afectados.
    recommendation: >
      Actualizar el software afectado a las versiones recomendadas
      por el fabricante.
    threat: Atacante autenticado desde Internet.
  category: Information Collection
  examples:
    non_compliant: |
      ```
      ```
    compliant: |
      ```
      ```
  remediation_time: '60'
  score:
    base:
      attack_vector: N
      attack_complexity: H
      privileges_required: L
      user_interaction: N
      scope: U
      confidentiality: L
      integrity: L
      availability: L
    temporal:
      exploit_code_maturity: P
      remediation_level: O
      report_confidence: C
  requirements: ['262']
  metadata:
    en:
      details: __empty__
