title,cwe,description,cvss,finding,stream,kind,where,snippet,method
034. Insecure generation of random numbers,CWE-521,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in OWASP/App.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,22,"
   12 |         float rand = new java.util.Random().nextFloat();
   13 |
   14 |         String cookieName = ""testInstanceReference"";
   15 |
   16 |         // this should initialize a new instance to be used in subsequent statements
   17 |         User currentUser = new User(""Jane Doe"");
   18 |
   19 |         currentUser.setUserId(Float.toString(rand));
   20 |
   21 |         String cookieKey = currentUser.getUserId();
>  22 |         request.getSession().setAttribute(cookieName, cookieKey);
   23 |     }
   24 |
   25 |     public void test_01() {
   26 |         HttpServletRequest request = new HttpServletRequest();
   27 |
   28 |         int rand = new java.util.Random().nextFloat();
   29 |         String cookieName = ""testInstanceReference"";
   30 |
   31 |         User currentUser = new User(""Jane"", Float.toString(rand));
   32 |         String cookieKey = currentUser[lastName];
      ^ Col 0
",java.java_weak_random
034. Insecure generation of random numbers,CWE-521,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in OWASP/App.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,34,"
   24 |
   25 |     public void test_01() {
   26 |         HttpServletRequest request = new HttpServletRequest();
   27 |
   28 |         int rand = new java.util.Random().nextFloat();
   29 |         String cookieName = ""testInstanceReference"";
   30 |
   31 |         User currentUser = new User(""Jane"", Float.toString(rand));
   32 |         String cookieKey = currentUser[lastName];
   33 |
>  34 |         request.getSession().setAttribute(cookieName, cookieKey);
   35 |     }
   36 |
   37 |     public void test_02() {
   38 |         HttpServletRequest request = new HttpServletRequest();
   39 |
   40 |         int rand = new java.util.Random().nextInt();
   41 |
   42 |         User currentUser = new User(""Jane"", ""Doe"", Integer.toString(rand));
   43 |
   44 |         request.getSession().setAttribute(cookieName, currentUser[lastName]);
      ^ Col 0
",java.java_weak_random
034. Insecure generation of random numbers,CWE-521,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in OWASP/App.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,44,"
   34 |         request.getSession().setAttribute(cookieName, cookieKey);
   35 |     }
   36 |
   37 |     public void test_02() {
   38 |         HttpServletRequest request = new HttpServletRequest();
   39 |
   40 |         int rand = new java.util.Random().nextInt();
   41 |
   42 |         User currentUser = new User(""Jane"", ""Doe"", Integer.toString(rand));
   43 |
>  44 |         request.getSession().setAttribute(cookieName, currentUser[lastName]);
   45 |     }
   46 |
   47 |     public void test_03() {
   48 |         HttpServletRequest request = new HttpServletRequest();
   49 |
   50 |         int rand = new java.util.Random().nextFloat();
   51 |
   52 |         User currentUser = new User(""Jane"", ""Doe"", ""xxxxxxxxxx"");
   53 |         currentUser.userId = Float.toString(rand);
   54 |
      ^ Col 0
",java.java_weak_random
034. Insecure generation of random numbers,CWE-521,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in OWASP/App.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,88,"
   78 |
   79 |     public void test_06() {
   80 |         HttpServletRequest request = new HttpServletRequest();
   81 |
   82 |         String cookieName = ""testInstanceReference"";
   83 |         int rand = new java.util.Random().nextFloat();
   84 |
   85 |         User currentUser = new User(""Jane"", Float.toString(rand));
   86 |         String cookieKey = currentUser[lastName];
   87 |
>  88 |         request.getSession().setAttribute(cookieName, cookieKey);
   89 |     }
   90 |
   91 |     public void test_07() {
   92 |         HttpServletRequest request = new HttpServletRequest();
   93 |
   94 |         int rand = new java.util.Random().nextInt();
   95 |
   96 |         User currentUser = new User(""Jane"", ""Doe"", Integer.toString(rand));
   97 |
   98 |         request.getSession().setAttribute(cookieName, currentUser);
      ^ Col 0
",java.java_weak_random
034. Insecure generation of random numbers,CWE-521,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in OWASP/App.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,98,"
   88 |         request.getSession().setAttribute(cookieName, cookieKey);
   89 |     }
   90 |
   91 |     public void test_07() {
   92 |         HttpServletRequest request = new HttpServletRequest();
   93 |
   94 |         int rand = new java.util.Random().nextInt();
   95 |
   96 |         User currentUser = new User(""Jane"", ""Doe"", Integer.toString(rand));
   97 |
>  98 |         request.getSession().setAttribute(cookieName, currentUser);
   99 |     }
  100 |
  101 |     public void test_08() {
  102 |         HttpServletRequest request = new HttpServletRequest();
  103 |
  104 |         User currentUser = new User(""Jane"", ""Doe"", ""xxxxxxxxxx"");
  105 |         currentUser.userId = this.createRandom();
  106 |
  107 |         request.getSession().setAttribute(""testInstanceReference"", currentUser.getUserId());
  108 |     }
      ^ Col 0
",java.java_weak_random
Summary: 5 vulnerabilities were found in your targets.