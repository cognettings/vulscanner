title,cwe,description,cvss,finding,stream,kind,where,snippet,method
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,14,"
   4 | {
   5 |     public class Controllers
   6 |     {
   7 |         public void Configure(IApplicationBuilder app)
   8 |         {
   9 |             // Should report
  10 |
  11 |             var corsBuilder = new CorsPolicyBuilder();
  12 |             corsBuilder.AllowAnyHeader();
  13 |             corsBuilder.AllowAnyMethod();
> 14 |             corsBuilder.AllowAnyOrigin();
  15 |
  16 |             var policyBuilder = new CorsPolicyBuilder();
  17 |             var policy = policyBuilder
  18 |                 .AllowAnyOrigin()
  19 |                 .AllowAnyHeader()
  20 |                 .AllowAnyMethod()
  21 |                 .Build();
  22 |
  23 |             app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);
  24 |
     ^ Col 0
",c_sharp.csharp_insecure_cors
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,17,"
   7 |         public void Configure(IApplicationBuilder app)
   8 |         {
   9 |             // Should report
  10 |
  11 |             var corsBuilder = new CorsPolicyBuilder();
  12 |             corsBuilder.AllowAnyHeader();
  13 |             corsBuilder.AllowAnyMethod();
  14 |             corsBuilder.AllowAnyOrigin();
  15 |
  16 |             var policyBuilder = new CorsPolicyBuilder();
> 17 |             var policy = policyBuilder
  18 |                 .AllowAnyOrigin()
  19 |                 .AllowAnyHeader()
  20 |                 .AllowAnyMethod()
  21 |                 .Build();
  22 |
  23 |             app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);
  24 |
  25 |             app.UseCors( cors => cors
  26 |                 .AllowAnyMethod()
  27 |                 .AllowAnyOrigin());
     ^ Col 0
",c_sharp.csharp_insecure_cors
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,23,"
  13 |             corsBuilder.AllowAnyMethod();
  14 |             corsBuilder.AllowAnyOrigin();
  15 |
  16 |             var policyBuilder = new CorsPolicyBuilder();
  17 |             var policy = policyBuilder
  18 |                 .AllowAnyOrigin()
  19 |                 .AllowAnyHeader()
  20 |                 .AllowAnyMethod()
  21 |                 .Build();
  22 |
> 23 |             app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);
  24 |
  25 |             app.UseCors( cors => cors
  26 |                 .AllowAnyMethod()
  27 |                 .AllowAnyOrigin());
  28 |
  29 |
  30 |             // Should not report
  31 |             var SecCorsBuilder = new CorsPolicyBuilder();
  32 |             SecCorsBuilder.AllowAnyHeader();
  33 |             SecCorsBuilder.AllowAnyMethod();
     ^ Col 0
",c_sharp.csharp_insecure_cors
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,25,"
  15 |
  16 |             var policyBuilder = new CorsPolicyBuilder();
  17 |             var policy = policyBuilder
  18 |                 .AllowAnyOrigin()
  19 |                 .AllowAnyHeader()
  20 |                 .AllowAnyMethod()
  21 |                 .Build();
  22 |
  23 |             app.UseCors(Microsoft.Owin.Cors.CorsOptions.AllowAll);
  24 |
> 25 |             app.UseCors( cors => cors
  26 |                 .AllowAnyMethod()
  27 |                 .AllowAnyOrigin());
  28 |
  29 |
  30 |             // Should not report
  31 |             var SecCorsBuilder = new CorsPolicyBuilder();
  32 |             SecCorsBuilder.AllowAnyHeader();
  33 |             SecCorsBuilder.AllowAnyMethod();
  34 |
  35 |             var SecPolicyBuilder = new CorsPolicyBuilder();
     ^ Col 0
",c_sharp.csharp_insecure_cors
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors_origin.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,13,"
   3 |
   4 | namespace AspNet5SQLite
   5 | {
   6 |     public class Startup
   7 |     {
   8 |         // Setting an insecure cors policy attribute
   9 |         public void ConfigureServices(IServiceCollection services)
  10 |         {
  11 |             var policy = new Microsoft.AspNetCore.Cors.Infrastructure.CorsPolicy();
  12 |             policy.Headers.Add(""*"");
> 13 |             policy.Origins.Add(""*"");
  14 |             policy.SupportsCredentials = true;
  15 |
  16 |         }
  17 |     }
  18 |
  19 |     public class Startup2
  20 |     {
  21 |         //Setting the insecure cors policy directly
  22 |         public void ConfigureServices(IServiceCollection services)
  23 |         {
     ^ Col 0
",c_sharp.csharp_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors_origin.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,26,"
  16 |         }
  17 |     }
  18 |
  19 |     public class Startup2
  20 |     {
  21 |         //Setting the insecure cors policy directly
  22 |         public void ConfigureServices(IServiceCollection services)
  23 |         {
  24 |             services.AddCors(options =>
  25 |             {
> 26 |                 options.AddPolicy(name: ""corsGlobalPolicy"",
  27 |                     builder =>
  28 |                     {
  29 |                         builder.WithOrigins(Configuration[""Origins:localdev""])
  30 |                             .AllowAnyOrigin()
  31 |                             .AllowAnyMethod();
  32 |                     });
  33 |             });
  34 |         }
  35 |
  36 |         public void ConfigureServices(IServiceCollection services)
     ^ Col 0
",c_sharp.csharp_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors_origin.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,40,"
  30 |                             .AllowAnyOrigin()
  31 |                             .AllowAnyMethod();
  32 |                     });
  33 |             });
  34 |         }
  35 |
  36 |         public void ConfigureServices(IServiceCollection services)
  37 |         {
  38 |             services.AddCors(c =>
  39 |             {
> 40 |                 c.AddPolicy(""AllowOrigin"", options => options.AllowAnyMethod().AllowAnyHeader().AllowAnyOrigin());
  41 |             });
  42 |         }
  43 |     }
  44 |
  45 |     //Enabling insecure cors policy via attribute
  46 |     [EnableCors(origins: ""*"", headers: ""*"", methods: ""*"")]
  47 |     public class ItemsController : ApiController
  48 |     {
  49 |         public HttpResponseMessage GetAll() {}
  50 |     }
     ^ Col 0
",c_sharp.csharp_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/c_sharp_insecure_cors_origin.cs,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,46,"
  31 |                             .AllowAnyMethod();
  32 |                     });
  33 |             });
  34 |         }
  35 |
  36 |         public void ConfigureServices(IServiceCollection services)
  37 |         {
  38 |             services.AddCors(c =>
  39 |             {
  40 |                 c.AddPolicy(""AllowOrigin"", options => options.AllowAnyMethod().AllowAnyHeader().AllowAnyOrigin());
  41 |             });
  42 |         }
  43 |     }
  44 |
  45 |     //Enabling insecure cors policy via attribute
> 46 |     [EnableCors(origins: ""*"", headers: ""*"", methods: ""*"")]
  47 |     public class ItemsController : ApiController
  48 |     {
  49 |         public HttpResponseMessage GetAll() {}
  50 |     }
  51 | }
     ^ Col 0
",c_sharp.csharp_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/cfn_cors_allowed_origin.yml,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,20,"
  10 |       - http:
  11 |           path: transactions/validations
  12 |           method: post
  13 |           cors:
  14 |             origin: ""*""
  15 |   transaction-updating:
  16 |     events:
  17 |       - http:
  18 |           path: transactions/dynamo/
  19 |           method: post
> 20 |           cors: true
  21 |   ##SAFE
  22 |   transaction-validation:
  23 |     events:
  24 |       - http:
  25 |           path: transactions/validations
  26 |           cors:
  27 |             origin:
  28 |               - http://example.com
  29 |               - http://example2.com
  30 | ## Another dangerous cors policy setting
     ^ Col 0
",cloudformation.json_ssl_port_missing
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/java_insecure_cors.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,13,"
   3 |
   4 |  private static final String ALL_ORIGINS = ""*"";
   5 |
   6 |  public WebFilter insecure1(){
   7 |   return (ServerWebExchange ctx, WebFilterChain chain)-> {
   8 |    ServerHttpRequest req = ctx.getRequest();
   9 |
  10 |    if (CorsUtils.isCorsRequest(request)){
  11 |     ServerHttpResponse req = ctx.getResponse();
  12 |     HttpHeaders headers = response.getHeaders();
> 13 |     headers.add(""Access-Control-Allow-Origin"", ALL_ORIGINS);  // Sensitive
  14 |    }
  15 |    return chain.filter(ctx);
  16 |   };
  17 |  }
  18 |
  19 |   public void insecure2(CorsRegistry registry) {
  20 |     registry.addMapping(""/**"").allowedOrigins(""*""); // Sensitive
  21 |   }
  22 |
  23 |  public void insecure3() {
     ^ Col 0
",java.java_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/java_insecure_cors.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,20,"
  10 |    if (CorsUtils.isCorsRequest(request)){
  11 |     ServerHttpResponse req = ctx.getResponse();
  12 |     HttpHeaders headers = response.getHeaders();
  13 |     headers.add(""Access-Control-Allow-Origin"", ALL_ORIGINS);  // Sensitive
  14 |    }
  15 |    return chain.filter(ctx);
  16 |   };
  17 |  }
  18 |
  19 |   public void insecure2(CorsRegistry registry) {
> 20 |     registry.addMapping(""/**"").allowedOrigins(""*""); // Sensitive
  21 |   }
  22 |
  23 |  public void insecure3() {
  24 |     CorsConfiguration config = new CorsConfiguration();
  25 |   config.addAllowedOrigin(ALL_ORIGINS); // Sensitive
  26 |   }
  27 |
  28 |  public void secure() {
  29 |   String ALLOWED_ORIGIN = ""www.mytrustedorigin.com"";
  30 |     CorsConfiguration config = new CorsConfiguration();
     ^ Col 0
",java.java_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/java_insecure_cors.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,25,"
  14 |    }
  15 |    return chain.filter(ctx);
  16 |   };
  17 |  }
  18 |
  19 |   public void insecure2(CorsRegistry registry) {
  20 |     registry.addMapping(""/**"").allowedOrigins(""*""); // Sensitive
  21 |   }
  22 |
  23 |  public void insecure3() {
  24 |     CorsConfiguration config = new CorsConfiguration();
> 25 |   config.addAllowedOrigin(ALL_ORIGINS); // Sensitive
  26 |   }
  27 |
  28 |  public void secure() {
  29 |   String ALLOWED_ORIGIN = ""www.mytrustedorigin.com"";
  30 |     CorsConfiguration config = new CorsConfiguration();
  31 |   config.addAllowedOrigin(ALLOWED_ORIGIN); // Safe
  32 |   }
  33 |
  34 | }
     ^ Col 0
",java.java_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-16,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/java_insecure_cors_modifiers.java,CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N/E:U/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,7,"
   1 |
   2 | @RestController
   3 | public class CategoryParametersController {
   4 |
   5 |     private ParametersCategory parametersCategory;
   6 |
>  7 |   @CrossOrigin(origins = ""*"", methods = {RequestMethod.GET, RequestMethod.POST})
   8 |     @PostMapping(""/test"")
   9 |     public ResponseEntity<Response> getRoute() {
  10 |         return parametersCategory.generateResponse();
  11 |     }
  12 |
  13 |   @CrossOrigin(origins = ""mysite.com"", methods = {RequestMethod.GET, RequestMethod.POST})
  14 |     public ResponseEntity<Response> getRoute() {
  15 |         return parametersCategory.generateResponse();
  16 |     }
  17 | }
     ^ Col 0
",java.java_insecure_cors_origin
134. Insecure or unset HTTP headers - CORS,CWE-614,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/cfn_cors_allowed_origin.yml,CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N/E:U/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,14,"
   4 |
   5 | plugins:
   6 |   - serverless-plugin-ifelse
   7 | functions:
   8 |   transaction-dynamo:
   9 |     events:
  10 |       - http:
  11 |           path: transactions/validations
  12 |           method: post
  13 |           cors:
> 14 |             origin: ""*""
  15 |   transaction-updating:
  16 |     events:
  17 |       - http:
  18 |           path: transactions/dynamo/
  19 |           method: post
  20 |           cors: true
  21 |   ##SAFE
  22 |   transaction-validation:
  23 |     events:
  24 |       - http:
     ^ Col 0
",cloudformation.cfn_wildcard_in_allowed_origins
134. Insecure or unset HTTP headers - CORS,CWE-614,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/cfn_cors_allowed_origin.yml,CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N/E:U/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,38,"
  18 |           path: transactions/dynamo/
  19 |           method: post
  20 |           cors: true
  21 |   ##SAFE
  22 |   transaction-validation:
  23 |     events:
  24 |       - http:
  25 |           path: transactions/validations
  26 |           cors:
  27 |             origin:
  28 |               - http://example.com
  29 |               - http://example2.com
  30 | ## Another dangerous cors policy setting
  31 | Resources:
  32 |   CompanyApiGateway:
  33 |     Type: AWS::Serverless::Api
  34 |     Properties:
  35 |       Cors:
  36 |         AllowMethods: ""'*'""
  37 |         AllowHeaders: ""'*'""
> 38 |         AllowOrigin: ""'*'""
     ^ Col 0
",cloudformation.cfn_wildcard_in_allowed_origins
134. Insecure or unset HTTP headers - CORS,CWE-614,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/json_wildcard_in_allowed_origins.json,CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N/E:U/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,55,"
  45 |                             ""AllowedHeaders"": [
  46 |                                 ""*""
  47 |                             ],
  48 |                             ""AllowedMethods"": [
  49 |                                 ""GET"",
  50 |                                 ""HEAD"",
  51 |                                 ""PUT"",
  52 |                                 ""POST"",
  53 |                                 ""DELETE""
  54 |                             ],
> 55 |                             ""AllowedOrigins"": [
  56 |                                 ""*""
  57 |                             ],
  58 |                             ""ExposedHeaders"": [
  59 |                                 ""x-amz-server-side-encryption"",
  60 |                                 ""x-amz-request-id"",
  61 |                                 ""x-amz-id-2"",
  62 |                                 ""ETag""
  63 |                             ],
  64 |                             ""Id"": ""S3CORSRuleId1"",
  65 |                             ""MaxAge"": ""3000""
     ^ Col 0
",cloudformation.cfn_wildcard_in_allowed_origins
134. Insecure or unset HTTP headers - CORS,CWE-614,The cors policy allows any origin in namespace/skims/test/data/lib_root/f134/tfm_s3_cors_all_origins_enabled.tf,CVSS:3.1/AV:A/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N/E:U/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/134,skims,SAST,7,"
   1 | resource ""aws_s3_bucket_cors_configuration"" ""example"" {
   2 |   bucket = aws_s3_bucket.example.id
   3 |
   4 |   cors_rule {
   5 |     allowed_headers = [""*""]
   6 |     allowed_methods = [""PUT"", ""POST""]
>  7 |     allowed_origins = [""*""]
   8 |   }
   9 |
  10 |   cors_rule {
  11 |     allowed_methods = [""GET""]
  12 |     allowed_origins = [""https://s3-website-test.hashicorp.com""]
  13 |   }
  14 | }
     ^ Col 0
",cloudformation.cfn_wildcard_in_allowed_origins
Summary: 17 vulnerabilities were found in your targets.