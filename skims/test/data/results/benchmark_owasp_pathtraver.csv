title,cwe,description,cvss,finding,stream,kind,where,snippet,method
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |     }
  62 |    }
  63 |   }
  64 |
  65 |
  66 |         String fileName = null;
  67 |         java.io.FileInputStream fis = null;
  68 |
  69 |         try {
  70 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param;
> 71 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  72 |           byte[] b = new byte[1000];
  73 |           int size = fis.read(b);
  74 |           response.getWriter().println(
  75 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  76 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  77 |           );
  78 |         } catch (Exception e) {
  79 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  80 |             response.getWriter().println(
  81 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |
  62 |
  63 |
  64 |
  65 |
  66 | fileName = null;
  67 | .FileInputStream fis = null;
  68 |
  69 |
  70 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param;
> 71 |  new java.io.FileInputStream(new java.io.File(fileName));
  72 | ] b = new byte[1000];
  73 | ize = fis.read(b);
  74 | nse.getWriter().println(
  75 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  76 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  77 |
  78 |  (Exception e) {
  79 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  80 | ponse.getWriter().println(
  81 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
  62 |    }
  63 |   }
  64 |
  65 |
  66 |   String fileName = null;
  67 |   java.io.FileOutputStream fos = null;
  68 |
  69 |   try {
  70 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param;
  71 |
> 72 |    fos = new java.io.FileOutputStream(fileName, false);
  73 |          response.getWriter().println(
  74 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  75 | );
  76 |
  77 |   } catch (Exception e) {
  78 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  79 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  80 |   } finally {
  81 |    if (fos != null) {
  82 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |   java.util.Enumeration<String> headers = request.getHeaders(""BenchmarkTest00011"");
  47 |
  48 |   if (headers != null && headers.hasMoreElements()) {
  49 |    param = headers.nextElement(); // just grab first element
  50 |   }
  51 |
  52 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  53 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  54 |
  55 |
> 56 |   java.io.File fileTarget = new java.io.File(param, ""/Test.txt"");
  57 |   response.getWriter().println(
  58 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  59 | );
  60 |   if (fileTarget.exists()) {
  61 |    response.getWriter().println(
  62 | "" And file already exists.""
  63 | );
  64 |   } else { response.getWriter().println(
  65 | "" But file doesn't exist yet.""
  66 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
  50 |   }
  51 |
  52 |
  53 |
  54 |   String fileName = null;
  55 |   java.io.FileOutputStream fos = null;
  56 |
  57 |   try {
  58 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param;
  59 |
> 60 |    fos = new java.io.FileOutputStream(fileName, false);
  61 |          response.getWriter().println(
  62 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  63 | );
  64 |
  65 |   } catch (Exception e) {
  66 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  67 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  68 |   } finally {
  69 |    if (fos != null) {
  70 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param;
  53 |
  54 |
  55 | e the file first so the test won't throw an exception if it doesn't exist.
  56 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  57 | vuln, rather than the File signature we are trying to actually test.
  58 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  59 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param).createNewFile();
  60 |
  61 |
> 62 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  63 |   new java.io.FileInputStream(fileName).getFD());
  64 |
  65 | sponse.getWriter().println(
  66 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  67 |
  68 |
  69 | Exception e) {
  70 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  71 |
  72 |
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,63,"
  53 |
  54 |   try (
  55 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  56 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  57 |    // as a vuln, rather than the File signature we are trying to actually test.
  58 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  59 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + param).createNewFile();
  60 |
  61 |
  62 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 63 |              new java.io.FileInputStream(fileName).getFD());
  64 |      ) {
  65 |          response.getWriter().println(
  66 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  67 | );
  68 |
  69 |   } catch (Exception e) {
  70 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  71 |   }
  72 |  }
  73 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |   }
  62 |
  63 |
  64 |   String bar = """";
  65 |   if (param != null) {
  66 |    bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
  67 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  68 |   }
  69 |
  70 |
> 71 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  72 |   response.getWriter().println(
  73 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  74 | );
  75 |   if (fileTarget.exists()) {
  76 |    response.getWriter().println(
  77 | "" And file already exists.""
  78 | );
  79 |   } else { response.getWriter().println(
  80 | "" But file doesn't exist yet.""
  81 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,77,"
   67 |   map77232.put(""keyB-77232"", param); // put it in a collection
   68 |   map77232.put(""keyC"", ""another-Value""); // put some stuff in the collection
   69 |   bar = (String)map77232.get(""keyB-77232""); // get it back out
   70 |
   71 |
   72 |         String fileName = null;
   73 |         java.io.FileInputStream fis = null;
   74 |
   75 |         try {
   76 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  77 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   78 |           byte[] b = new byte[1000];
   79 |           int size = fis.read(b);
   80 |           response.getWriter().println(
   81 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   82 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   83 |           );
   84 |         } catch (Exception e) {
   85 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   86 |             response.getWriter().println(
   87 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,77,"
   67 | ""keyB-77232"", param); // put it in a collection
   68 | ""keyC"", ""another-Value""); // put some stuff in the collection
   69 | )map77232.get(""keyB-77232""); // get it back out
   70 |
   71 |
   72 | fileName = null;
   73 | .FileInputStream fis = null;
   74 |
   75 |
   76 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  77 |  new java.io.FileInputStream(new java.io.File(fileName));
   78 | ] b = new byte[1000];
   79 | ize = fis.read(b);
   80 | nse.getWriter().println(
   81 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   82 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   83 |
   84 |  (Exception e) {
   85 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   86 | ponse.getWriter().println(
   87 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,78,"
   68 |
   69 |   bar = (7*18) + num > 200 ? ""This_should_always_happen"" : param;
   70 |
   71 |
   72 |
   73 |         String fileName = null;
   74 |         java.io.FileInputStream fis = null;
   75 |
   76 |         try {
   77 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  78 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   79 |           byte[] b = new byte[1000];
   80 |           int size = fis.read(b);
   81 |           response.getWriter().println(
   82 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   83 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   84 |           );
   85 |         } catch (Exception e) {
   86 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   87 |             response.getWriter().println(
   88 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00063.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,78,"
   68 |
   69 | + num > 200 ? ""This_should_always_happen"" : param;
   70 |
   71 |
   72 |
   73 | fileName = null;
   74 | .FileInputStream fis = null;
   75 |
   76 |
   77 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  78 |  new java.io.FileInputStream(new java.io.File(fileName));
   79 | ] b = new byte[1000];
   80 | ize = fis.read(b);
   81 | nse.getWriter().println(
   82 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   83 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   84 |
   85 |  (Exception e) {
   86 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   87 | ponse.getWriter().println(
   88 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00064.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,79,"
  69 |   bar = (7*18) + num > 200 ? ""This_should_always_happen"" : param;
  70 |
  71 |
  72 |
  73 |   String fileName = null;
  74 |   java.io.FileOutputStream fos = null;
  75 |
  76 |   try {
  77 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  78 |
> 79 |    fos = new java.io.FileOutputStream(fileName);
  80 |          response.getWriter().println(
  81 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  82 | );
  83 |
  84 |      } catch (Exception e) {
  85 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  86 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  87 |   } finally {
  88 |    if (fos != null) {
  89 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00131.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,74,"
  64 |     case 'C':
  65 |     case 'D':
  66 |           bar = param;
  67 |           break;
  68 |     default:
  69 |           bar = ""bob's your uncle"";
  70 |           break;
  71 |   }
  72 |
  73 |
> 74 |   java.io.File fileTarget = new java.io.File(bar);
  75 |   response.getWriter().println(
  76 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  77 | );
  78 |   if (fileTarget.exists()) {
  79 |    response.getWriter().println(
  80 | "" And file already exists.""
  81 | );
  82 |   } else { response.getWriter().println(
  83 | "" But file doesn't exist yet.""
  84 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00132.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,79,"
   69 |           bar = ""bob's your uncle"";
   70 |           break;
   71 |   }
   72 |
   73 |
   74 |         String fileName = null;
   75 |         java.io.FileInputStream fis = null;
   76 |
   77 |         try {
   78 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  79 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   80 |           byte[] b = new byte[1000];
   81 |           int size = fis.read(b);
   82 |           response.getWriter().println(
   83 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   84 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   85 |           );
   86 |         } catch (Exception e) {
   87 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   88 |             response.getWriter().println(
   89 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00132.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,79,"
   69 |  ""bob's your uncle"";
   70 | ;
   71 |
   72 |
   73 |
   74 | fileName = null;
   75 | .FileInputStream fis = null;
   76 |
   77 |
   78 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  79 |  new java.io.FileInputStream(new java.io.File(fileName));
   80 | ] b = new byte[1000];
   81 | ize = fis.read(b);
   82 | nse.getWriter().println(
   83 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   84 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   85 |
   86 |  (Exception e) {
   87 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   88 | ponse.getWriter().println(
   89 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
  56 |
  57 |   bar = (7*42) - num > 200 ? ""This should never happen"" : param;
  58 |
  59 |
  60 |
  61 |   String fileName = null;
  62 |   java.io.FileInputStream fis = null;
  63 |
  64 |   try {
  65 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 66 |    fis = new java.io.FileInputStream(fileName);
  67 |    byte[] b = new byte[1000];
  68 |    int size = fis.read(b);
  69 |    response.getWriter().println(
  70 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  71 | );
  72 |    response.getWriter().println(
  73 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  74 | );
  75 |   } catch (Exception e) {
  76 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,84,"
  74 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  75 |
  76 |
  77 | e the file first so the test won't throw an exception if it doesn't exist.
  78 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  79 | vuln, rather than the File signature we are trying to actually test.
  80 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  81 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  82 |
  83 |
> 84 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  85 |   new java.io.FileInputStream(fileName).getFD());
  86 |
  87 | sponse.getWriter().println(
  88 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  89 |
  90 |
  91 | Exception e) {
  92 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  93 |
  94 |
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00135.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,85,"
  75 |
  76 |   try (
  77 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  78 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  79 |    // as a vuln, rather than the File signature we are trying to actually test.
  80 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  81 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  82 |
  83 |
  84 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 85 |              new java.io.FileInputStream(fileName).getFD());
  86 |      ) {
  87 |          response.getWriter().println(
  88 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  89 | );
  90 |
  91 |   } catch (Exception e) {
  92 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  93 |   }
  94 |  }
  95 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00136.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,80,"
   70 |           break;
   71 |   }
   72 |
   73 |
   74 |   String fileName = null;
   75 |   java.io.FileOutputStream fos = null;
   76 |
   77 |   try {
   78 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   79 |
>  80 |    fos = new java.io.FileOutputStream(fileName, false);
   81 |          response.getWriter().println(
   82 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   83 | );
   84 |
   85 |   } catch (Exception e) {
   86 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   87 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   88 |   } finally {
   89 |    if (fos != null) {
   90 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,94,"
   84 |   // Mac requires an extra slash for some reason.
   85 |   String startURIslashes = """";
   86 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   87 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   88 |           startURIslashes = ""/"";
   89 |          else startURIslashes = ""//"";
   90 |
   91 |   try {
   92 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   93 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  94 |    java.io.File fileTarget = new java.io.File(fileURI);
   95 |             response.getWriter().println(
   96 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   97 | );
   98 |             if (fileTarget.exists()) {
   99 |             response.getWriter().println(
  100 | "" And file already exists.""
  101 | );
  102 |             } else { response.getWriter().println(
  103 | "" But file doesn't exist yet.""
  104 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 |
   66 |   bar = (7*42) - num > 200 ? ""This should never happen"" : param;
   67 |
   68 |
   69 |
   70 |         String fileName = null;
   71 |         java.io.FileInputStream fis = null;
   72 |
   73 |         try {
   74 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  75 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   76 |           byte[] b = new byte[1000];
   77 |           int size = fis.read(b);
   78 |           response.getWriter().println(
   79 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   81 |           );
   82 |         } catch (Exception e) {
   83 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   84 |             response.getWriter().println(
   85 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 |
   66 | - num > 200 ? ""This should never happen"" : param;
   67 |
   68 |
   69 |
   70 | fileName = null;
   71 | .FileInputStream fis = null;
   72 |
   73 |
   74 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  75 |  new java.io.FileInputStream(new java.io.File(fileName));
   76 | ] b = new byte[1000];
   77 | ize = fis.read(b);
   78 | nse.getWriter().println(
   79 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   81 |
   82 |  (Exception e) {
   83 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   84 | ponse.getWriter().println(
   85 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00221.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
  66 |   bar = (7*18) + num > 200 ? ""This_should_always_happen"" : param;
  67 |
  68 |
  69 |
  70 |   String fileName = null;
  71 |   java.io.FileOutputStream fos = null;
  72 |
  73 |   try {
  74 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  75 |
> 76 |    fos = new java.io.FileOutputStream(fileName, false);
  77 |          response.getWriter().println(
  78 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  79 | );
  80 |
  81 |   } catch (Exception e) {
  82 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  83 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  84 |   } finally {
  85 |    if (fos != null) {
  86 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,89,"
   79 |           break;
   80 |   }
   81 |
   82 |
   83 |   String fileName = null;
   84 |   java.io.FileOutputStream fos = null;
   85 |
   86 |   try {
   87 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   88 |
>  89 |    fos = new java.io.FileOutputStream(fileName);
   90 |          response.getWriter().println(
   91 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   92 | );
   93 |
   94 |      } catch (Exception e) {
   95 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   96 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   97 |   } finally {
   98 |    if (fos != null) {
   99 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
  66 |     case 'C':
  67 |     case 'D':
  68 |           bar = param;
  69 |           break;
  70 |     default:
  71 |           bar = ""bobs_your_uncle"";
  72 |           break;
  73 |   }
  74 |
  75 |
> 76 |   java.io.File fileTarget = new java.io.File(bar);
  77 |   response.getWriter().println(
  78 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  79 | );
  80 |   if (fileTarget.exists()) {
  81 |    response.getWriter().println(
  82 | "" And file already exists.""
  83 | );
  84 |   } else { response.getWriter().println(
  85 | "" But file doesn't exist yet.""
  86 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00263.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,81,"
   71 |           bar = ""bob's your uncle"";
   72 |           break;
   73 |   }
   74 |
   75 |
   76 |         String fileName = null;
   77 |         java.io.FileInputStream fis = null;
   78 |
   79 |         try {
   80 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  81 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   82 |           byte[] b = new byte[1000];
   83 |           int size = fis.read(b);
   84 |           response.getWriter().println(
   85 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   86 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   87 |           );
   88 |         } catch (Exception e) {
   89 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   90 |             response.getWriter().println(
   91 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00263.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,81,"
   71 |  ""bob's your uncle"";
   72 | ;
   73 |
   74 |
   75 |
   76 | fileName = null;
   77 | .FileInputStream fis = null;
   78 |
   79 |
   80 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  81 |  new java.io.FileInputStream(new java.io.File(fileName));
   82 | ] b = new byte[1000];
   83 | ize = fis.read(b);
   84 | nse.getWriter().println(
   85 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   86 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   87 |
   88 |  (Exception e) {
   89 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   90 | ponse.getWriter().println(
   91 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
  58 |   if ( (500/42) + num > 200 )
  59 |      bar = param;
  60 |   else bar = ""This should never happen"";
  61 |
  62 |
  63 |         String fileName = null;
  64 |         java.io.FileInputStream fis = null;
  65 |
  66 |         try {
  67 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 68 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  69 |           byte[] b = new byte[1000];
  70 |           int size = fis.read(b);
  71 |           response.getWriter().println(
  72 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  73 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  74 |           );
  75 |         } catch (Exception e) {
  76 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  77 |             response.getWriter().println(
  78 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
  58 |  + num > 200 )
  59 | m;
  60 | his should never happen"";
  61 |
  62 |
  63 | fileName = null;
  64 | .FileInputStream fis = null;
  65 |
  66 |
  67 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 68 |  new java.io.FileInputStream(new java.io.File(fileName));
  69 | ] b = new byte[1000];
  70 | ize = fis.read(b);
  71 | nse.getWriter().println(
  72 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  73 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  74 |
  75 |  (Exception e) {
  76 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  77 | ponse.getWriter().println(
  78 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |
  47 |   String bar;
  48 |
  49 |   // Simple if statement that assigns param to bar on true condition
  50 |   int num = 196;
  51 |   if ( (500/42) + num > 200 )
  52 |      bar = param;
  53 |   else bar = ""This should never happen"";
  54 |
  55 |
> 56 |   java.io.File fileTarget = new java.io.File(bar);
  57 |   response.getWriter().println(
  58 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  59 | );
  60 |   if (fileTarget.exists()) {
  61 |    response.getWriter().println(
  62 | "" And file already exists.""
  63 | );
  64 |   } else { response.getWriter().println(
  65 | "" But file doesn't exist yet.""
  66 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |    bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
  50 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  51 |   }
  52 |
  53 |
  54 |         String fileName = null;
  55 |         java.io.FileInputStream fis = null;
  56 |
  57 |         try {
  58 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 59 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  60 |           byte[] b = new byte[1000];
  61 |           int size = fis.read(b);
  62 |           response.getWriter().println(
  63 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  64 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  65 |           );
  66 |         } catch (Exception e) {
  67 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  68 |             response.getWriter().println(
  69 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 | ring( org.apache.commons.codec.binary.Base64.decodeBase64(
  50 | ommons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  51 |
  52 |
  53 |
  54 | fileName = null;
  55 | .FileInputStream fis = null;
  56 |
  57 |
  58 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 59 |  new java.io.FileInputStream(new java.io.File(fileName));
  60 | ] b = new byte[1000];
  61 | ize = fis.read(b);
  62 | nse.getWriter().println(
  63 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  64 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  65 |
  66 |  (Exception e) {
  67 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  68 | ponse.getWriter().println(
  69 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00361.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,74,"
  64 |           bar = ""bob's your uncle"";
  65 |           break;
  66 |   }
  67 |
  68 |
  69 |   String fileName = null;
  70 |   java.io.FileInputStream fis = null;
  71 |
  72 |   try {
  73 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 74 |    fis = new java.io.FileInputStream(fileName);
  75 |    byte[] b = new byte[1000];
  76 |    int size = fis.read(b);
  77 |    response.getWriter().println(
  78 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  79 | );
  80 |    response.getWriter().println(
  81 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  82 | );
  83 |   } catch (Exception e) {
  84 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |
  47 |   String bar = param;
  48 |
  49 |
  50 |   String fileName = null;
  51 |   java.io.FileOutputStream fos = null;
  52 |
  53 |   try {
  54 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  55 |
> 56 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  57 |          response.getWriter().println(
  58 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  59 | );
  60 |
  61 |   } catch (Exception e) {
  62 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  63 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  64 |   } finally {
  65 |    if (fos != null) {
  66 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |
  47 | bar = param;
  48 |
  49 |
  50 | fileName = null;
  51 | .FileOutputStream fos = null;
  52 |
  53 |
  54 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  55 |
> 56 | new java.io.FileOutputStream(new java.io.File(fileName));
  57 | response.getWriter().println(
  58 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  59 |
  60 |
  61 |  (Exception e) {
  62 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  63 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  64 | ly {
  65 | s != null) {
  66 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
  50 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  51 |
  52 |
  53 | e the file first so the test won't throw an exception if it doesn't exist.
  54 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  55 | vuln, rather than the File signature we are trying to actually test.
  56 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  57 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  58 |
  59 |
> 60 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  61 |   new java.io.FileInputStream(fileName).getFD());
  62 |
  63 | sponse.getWriter().println(
  64 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  65 |
  66 |
  67 | Exception e) {
  68 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  69 |
  70 |
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
  51 |
  52 |   try (
  53 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  54 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  55 |    // as a vuln, rather than the File signature we are trying to actually test.
  56 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  57 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  58 |
  59 |
  60 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 61 |              new java.io.FileInputStream(fileName).getFD());
  62 |      ) {
  63 |          response.getWriter().println(
  64 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  65 | );
  66 |
  67 |   } catch (Exception e) {
  68 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  69 |   }
  70 |  }
  71 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,70,"
  60 |   // Mac requires an extra slash for some reason.
  61 |   String startURIslashes = """";
  62 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  63 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  64 |           startURIslashes = ""/"";
  65 |          else startURIslashes = ""//"";
  66 |
  67 |   try {
  68 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
  69 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
> 70 |    java.io.File fileTarget = new java.io.File(fileURI);
  71 |             response.getWriter().println(
  72 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  73 | );
  74 |             if (fileTarget.exists()) {
  75 |             response.getWriter().println(
  76 | "" And file already exists.""
  77 | );
  78 |             } else { response.getWriter().println(
  79 | "" But file doesn't exist yet.""
  80 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00454.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
  56 |   if ( (7*42) - num > 200 )
  57 |      bar = ""This_should_always_happen"";
  58 |   else bar = param;
  59 |
  60 |
  61 |         String fileName = null;
  62 |         java.io.FileInputStream fis = null;
  63 |
  64 |         try {
  65 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 66 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  67 |           byte[] b = new byte[1000];
  68 |           int size = fis.read(b);
  69 |           response.getWriter().println(
  70 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  71 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  72 |           );
  73 |         } catch (Exception e) {
  74 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  75 |             response.getWriter().println(
  76 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00454.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
  56 |  num > 200 )
  57 | s_should_always_happen"";
  58 | ram;
  59 |
  60 |
  61 | fileName = null;
  62 | .FileInputStream fis = null;
  63 |
  64 |
  65 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 66 |  new java.io.FileInputStream(new java.io.File(fileName));
  67 | ] b = new byte[1000];
  68 | ize = fis.read(b);
  69 | nse.getWriter().println(
  70 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  71 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  72 |
  73 |  (Exception e) {
  74 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  75 | ponse.getWriter().println(
  76 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
  54 |    bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
  55 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  56 |   }
  57 |
  58 |
  59 |   String fileName = null;
  60 |   java.io.FileInputStream fis = null;
  61 |
  62 |   try {
  63 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 64 |    fis = new java.io.FileInputStream(fileName);
  65 |    byte[] b = new byte[1000];
  66 |    int size = fis.read(b);
  67 |    response.getWriter().println(
  68 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  69 | );
  70 |    response.getWriter().println(
  71 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  72 | );
  73 |   } catch (Exception e) {
  74 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00456.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,65,"
  55 |   map49381.put(""keyB-49381"", param); // put it in a collection
  56 |   map49381.put(""keyC"", ""another-Value""); // put some stuff in the collection
  57 |   bar = (String)map49381.get(""keyB-49381""); // get it back out
  58 |
  59 |
  60 |   String fileName = null;
  61 |   java.io.FileInputStream fis = null;
  62 |
  63 |   try {
  64 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 65 |    fis = new java.io.FileInputStream(fileName);
  66 |    byte[] b = new byte[1000];
  67 |    int size = fis.read(b);
  68 |    response.getWriter().println(
  69 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  70 | );
  71 |    response.getWriter().println(
  72 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  73 | );
  74 |   } catch (Exception e) {
  75 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00457.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |    bar = valuesList.get(0); // get the param value
  62 |   }
  63 |
  64 |
  65 |   String fileName = null;
  66 |   java.io.FileOutputStream fos = null;
  67 |
  68 |   try {
  69 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  70 |
> 71 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  72 |          response.getWriter().println(
  73 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  74 | );
  75 |
  76 |   } catch (Exception e) {
  77 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  78 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  79 |   } finally {
  80 |    if (fos != null) {
  81 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00457.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 | valuesList.get(0); // get the param value
  62 |
  63 |
  64 |
  65 | fileName = null;
  66 | .FileOutputStream fos = null;
  67 |
  68 |
  69 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  70 |
> 71 | new java.io.FileOutputStream(new java.io.File(fileName));
  72 | response.getWriter().println(
  73 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  74 |
  75 |
  76 |  (Exception e) {
  77 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  78 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  79 | ly {
  80 | s != null) {
  81 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,80,"
   70 |           break;
   71 |   }
   72 |
   73 |
   74 |   String fileName = null;
   75 |   java.io.FileOutputStream fos = null;
   76 |
   77 |   try {
   78 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   79 |
>  80 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
   81 |          response.getWriter().println(
   82 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   83 | );
   84 |
   85 |   } catch (Exception e) {
   86 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   87 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   88 |   } finally {
   89 |    if (fos != null) {
   90 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00458.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,80,"
   70 |  break;
   71 |
   72 |
   73 |
   74 | fileName = null;
   75 | .FileOutputStream fos = null;
   76 |
   77 |
   78 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   79 |
>  80 | new java.io.FileOutputStream(new java.io.File(fileName));
   81 | response.getWriter().println(
   82 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   83 |
   84 |
   85 |  (Exception e) {
   86 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   87 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   88 | ly {
   89 | s != null) {
   90 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,65,"
  55 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  56 |   }
  57 |
  58 |
  59 |   String fileName = null;
  60 |   java.io.FileOutputStream fos = null;
  61 |
  62 |   try {
  63 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  64 |
> 65 |    fos = new java.io.FileOutputStream(fileName);
  66 |          response.getWriter().println(
  67 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  68 | );
  69 |
  70 |      } catch (Exception e) {
  71 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  72 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  73 |   } finally {
  74 |    if (fos != null) {
  75 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
  54 |          flag = false;
  55 |      }
  56 |     }
  57 |    }
  58 |   }
  59 |
  60 |
  61 |   String bar = param;
  62 |
  63 |
> 64 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  65 |   response.getWriter().println(
  66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  67 | );
  68 |   if (fileTarget.exists()) {
  69 |    response.getWriter().println(
  70 | "" And file already exists.""
  71 | );
  72 |   } else { response.getWriter().println(
  73 | "" But file doesn't exist yet.""
  74 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,65,"
  55 |      }
  56 |     }
  57 |    }
  58 |   }
  59 |
  60 |
  61 |   org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  62 |   String bar = thing.doSomething(param);
  63 |
  64 |
> 65 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  66 |   response.getWriter().println(
  67 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  68 | );
  69 |   if (fileTarget.exists()) {
  70 |    response.getWriter().println(
  71 | "" And file already exists.""
  72 | );
  73 |   } else { response.getWriter().println(
  74 | "" But file doesn't exist yet.""
  75 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00528.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,80,"
  70 |   // Mac requires an extra slash for some reason.
  71 |   String startURIslashes = """";
  72 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  73 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  74 |           startURIslashes = ""/"";
  75 |          else startURIslashes = ""//"";
  76 |
  77 |   try {
  78 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
  79 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
> 80 |    java.io.File fileTarget = new java.io.File(fileURI);
  81 |             response.getWriter().println(
  82 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  83 | );
  84 |             if (fileTarget.exists()) {
  85 |             response.getWriter().println(
  86 | "" And file already exists.""
  87 | );
  88 |             } else { response.getWriter().println(
  89 | "" But file doesn't exist yet.""
  90 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,69,"
  59 |
  60 |
  61 |   String bar = param;
  62 |
  63 |
  64 |   String fileName = null;
  65 |   java.io.FileInputStream fis = null;
  66 |
  67 |   try {
  68 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 69 |    fis = new java.io.FileInputStream(fileName);
  70 |    byte[] b = new byte[1000];
  71 |    int size = fis.read(b);
  72 |    response.getWriter().println(
  73 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  74 | );
  75 |    response.getWriter().println(
  76 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  77 | );
  78 |   } catch (Exception e) {
  79 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00623.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,55,"
  45 |   if (param == null) param = """";
  46 |
  47 |
  48 |   String bar = """";
  49 |   if (param != null) {
  50 |    bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
  51 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  52 |   }
  53 |
  54 |
> 55 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  56 |   response.getWriter().println(
  57 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  58 | );
  59 |   if (fileTarget.exists()) {
  60 |    response.getWriter().println(
  61 | "" And file already exists.""
  62 | );
  63 |   } else { response.getWriter().println(
  64 | "" But file doesn't exist yet.""
  65 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
  51 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  52 |   }
  53 |
  54 |
  55 |   String fileName = null;
  56 |   java.io.FileOutputStream fos = null;
  57 |
  58 |   try {
  59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  60 |
> 61 |    fos = new java.io.FileOutputStream(fileName, false);
  62 |          response.getWriter().println(
  63 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  64 | );
  65 |
  66 |   } catch (Exception e) {
  67 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  68 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  69 |   } finally {
  70 |    if (fos != null) {
  71 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,57,"
  47 |   else param = """";
  48 |
  49 |
  50 |   String bar = """";
  51 |   if (param != null) {
  52 |    bar = new String( org.apache.commons.codec.binary.Base64.decodeBase64(
  53 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  54 |   }
  55 |
  56 |
> 57 |   java.io.File fileTarget = new java.io.File(bar);
  58 |   response.getWriter().println(
  59 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  60 | );
  61 |   if (fileTarget.exists()) {
  62 |    response.getWriter().println(
  63 | "" And file already exists.""
  64 | );
  65 |   } else { response.getWriter().println(
  66 | "" But file doesn't exist yet.""
  67 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   String param;
  45 |   if (values != null && values.length > 0)
  46 |     param = values[0];
  47 |   else param = """";
  48 |
  49 |
  50 |   org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  51 |   String bar = thing.doSomething(param);
  52 |
  53 |
> 54 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  55 |   response.getWriter().println(
  56 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  57 | );
  58 |   if (fileTarget.exists()) {
  59 |    response.getWriter().println(
  60 | "" And file already exists.""
  61 | );
  62 |   } else { response.getWriter().println(
  63 | "" But file doesn't exist yet.""
  64 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00699.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
  62 |     case 'C':
  63 |     case 'D':
  64 |           bar = param;
  65 |           break;
  66 |     default:
  67 |           bar = ""bob's your uncle"";
  68 |           break;
  69 |   }
  70 |
  71 |
> 72 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  73 |   response.getWriter().println(
  74 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  75 | );
  76 |   if (fileTarget.exists()) {
  77 |    response.getWriter().println(
  78 | "" And file already exists.""
  79 | );
  80 |   } else { response.getWriter().println(
  81 | "" But file doesn't exist yet.""
  82 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,63,"
  53 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  54 |   }
  55 |
  56 |
  57 |   String fileName = null;
  58 |   java.io.FileOutputStream fos = null;
  59 |
  60 |   try {
  61 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  62 |
> 63 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  64 |          response.getWriter().println(
  65 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  66 | );
  67 |
  68 |   } catch (Exception e) {
  69 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  70 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  71 |   } finally {
  72 |    if (fos != null) {
  73 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,63,"
  53 | ache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  54 |
  55 |
  56 |
  57 | fileName = null;
  58 | .FileOutputStream fos = null;
  59 |
  60 |
  61 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  62 |
> 63 | new java.io.FileOutputStream(new java.io.File(fileName));
  64 | response.getWriter().println(
  65 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  66 |
  67 |
  68 |  (Exception e) {
  69 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  70 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  71 | ly {
  72 | s != null) {
  73 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00783.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,74,"
  64 |   map2299.put(""keyB-2299"", param); // put it in a collection
  65 |   map2299.put(""keyC"", ""another-Value""); // put some stuff in the collection
  66 |   bar = (String)map2299.get(""keyB-2299""); // get it back out
  67 |
  68 |
  69 |         String fileName = null;
  70 |         java.io.FileInputStream fis = null;
  71 |
  72 |         try {
  73 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 74 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  75 |           byte[] b = new byte[1000];
  76 |           int size = fis.read(b);
  77 |           response.getWriter().println(
  78 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  79 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  80 |           );
  81 |         } catch (Exception e) {
  82 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  83 |             response.getWriter().println(
  84 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00783.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,74,"
  64 | keyB-2299"", param); // put it in a collection
  65 | keyC"", ""another-Value""); // put some stuff in the collection
  66 | )map2299.get(""keyB-2299""); // get it back out
  67 |
  68 |
  69 | fileName = null;
  70 | .FileInputStream fis = null;
  71 |
  72 |
  73 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 74 |  new java.io.FileInputStream(new java.io.File(fileName));
  75 | ] b = new byte[1000];
  76 | ize = fis.read(b);
  77 | nse.getWriter().println(
  78 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  79 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  80 |
  81 |  (Exception e) {
  82 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  83 | ponse.getWriter().println(
  84 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00784.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,88,"
   78 |           bar = ""bob's your uncle"";
   79 |           break;
   80 |   }
   81 |
   82 |
   83 |   String fileName = null;
   84 |   java.io.FileInputStream fis = null;
   85 |
   86 |   try {
   87 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  88 |    fis = new java.io.FileInputStream(fileName);
   89 |    byte[] b = new byte[1000];
   90 |    int size = fis.read(b);
   91 |    response.getWriter().println(
   92 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   93 | );
   94 |    response.getWriter().println(
   95 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   96 | );
   97 |   } catch (Exception e) {
   98 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00785.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
  65 |   map59480.put(""keyC"", ""another-Value""); // put some stuff in the collection
  66 |   bar = (String)map59480.get(""keyB-59480""); // get it back out
  67 |
  68 |
  69 |   String fileName = null;
  70 |   java.io.FileOutputStream fos = null;
  71 |
  72 |   try {
  73 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  74 |
> 75 |    fos = new java.io.FileOutputStream(fileName, false);
  76 |          response.getWriter().println(
  77 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  78 | );
  79 |
  80 |   } catch (Exception e) {
  81 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  82 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  83 |   } finally {
  84 |    if (fos != null) {
  85 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,74,"
  64 |    org.apache.commons.codec.binary.Base64.encodeBase64( param.getBytes() ) ));
  65 |   }
  66 |
  67 |
  68 |   String fileName = null;
  69 |   java.io.FileOutputStream fos = null;
  70 |
  71 |   try {
  72 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  73 |
> 74 |    fos = new java.io.FileOutputStream(fileName);
  75 |          response.getWriter().println(
  76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  77 | );
  78 |
  79 |      } catch (Exception e) {
  80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  81 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  82 |   } finally {
  83 |    if (fos != null) {
  84 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |   org.owasp.benchmark.helpers.ThingInterface thing = org.owasp.benchmark.helpers.ThingFactory.createThing();
  62 |   String bar = thing.doSomething(param);
  63 |
  64 |
  65 |   String fileName = null;
  66 |   java.io.FileOutputStream fos = null;
  67 |
  68 |   try {
  69 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  70 |
> 71 |    fos = new java.io.FileOutputStream(fileName);
  72 |          response.getWriter().println(
  73 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  74 | );
  75 |
  76 |      } catch (Exception e) {
  77 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  78 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  79 |   } finally {
  80 |    if (fos != null) {
  81 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,65,"
  55 |    for (javax.servlet.http.Cookie theCookie : theCookies) {
  56 |     if (theCookie.getName().equals(""BenchmarkTest00950"")) {
  57 |      param = java.net.URLDecoder.decode(theCookie.getValue(), ""UTF-8"");
  58 |      break;
  59 |     }
  60 |    }
  61 |   }
  62 |
  63 |   String bar = new Test().doSomething(request, param);
  64 |
> 65 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  66 |   response.getWriter().println(
  67 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  68 | );
  69 |   if (fileTarget.exists()) {
  70 |    response.getWriter().println(
  71 | "" And file already exists.""
  72 | );
  73 |   } else { response.getWriter().println(
  74 | "" But file doesn't exist yet.""
  75 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00951.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |   // Mac requires an extra slash for some reason.
   67 |   String startURIslashes = """";
   68 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   69 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   70 |           startURIslashes = ""/"";
   71 |          else startURIslashes = ""//"";
   72 |
   73 |   try {
   74 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   75 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  76 |    java.io.File fileTarget = new java.io.File(fileURI);
   77 |    response.getWriter().println(
   78 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   79 | );
   80 |    if (fileTarget.exists()) {
   81 |     response.getWriter().println(
   82 | "" And file already exists.""
   83 | );
   84 |    } else { response.getWriter().println(
   85 | "" But file doesn't exist yet.""
   86 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |   // Mac requires an extra slash for some reason.
   67 |   String startURIslashes = """";
   68 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   69 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   70 |           startURIslashes = ""/"";
   71 |          else startURIslashes = ""//"";
   72 |
   73 |   try {
   74 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   75 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  76 |    java.io.File fileTarget = new java.io.File(fileURI);
   77 |             response.getWriter().println(
   78 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   79 | );
   80 |             if (fileTarget.exists()) {
   81 |             response.getWriter().println(
   82 | "" And file already exists.""
   83 | );
   84 |             } else { response.getWriter().println(
   85 | "" But file doesn't exist yet.""
   86 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   66 |
   67 |
   68 | e the file first so the test won't throw an exception if it doesn't exist.
   69 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 | vuln, rather than the File signature we are trying to actually test.
   71 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
>  75 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   76 |   new java.io.FileInputStream(fileName).getFD());
   77 |
   78 | sponse.getWriter().println(
   79 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |
   81 |
   82 | Exception e) {
   83 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |
   85 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |
   67 |   try (
   68 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   69 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 |    // as a vuln, rather than the File signature we are trying to actually test.
   71 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
   75 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  76 |              new java.io.FileInputStream(fileName).getFD());
   77 |      ) {
   78 |          response.getWriter().println(
   79 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 | );
   81 |
   82 |   } catch (Exception e) {
   83 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |   }
   85 |  }  // end doPost
   86 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   66 |
   67 |
   68 | e the file first so the test won't throw an exception if it doesn't exist.
   69 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 | vuln, rather than the File signature we are trying to actually test.
   71 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
>  75 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   76 |   new java.io.FileInputStream(fileName).getFD());
   77 |
   78 | sponse.getWriter().println(
   79 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |
   81 |
   82 | Exception e) {
   83 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |
   85 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00954.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |
   67 |   try (
   68 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   69 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 |    // as a vuln, rather than the File signature we are trying to actually test.
   71 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
   75 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  76 |              new java.io.FileInputStream(fileName).getFD());
   77 |      ) {
   78 |          response.getWriter().println(
   79 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 | );
   81 |
   82 |   } catch (Exception e) {
   83 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |   }
   85 |  }  // end doPost
   86 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   66 |
   67 |
   68 | e the file first so the test won't throw an exception if it doesn't exist.
   69 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 | vuln, rather than the File signature we are trying to actually test.
   71 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
>  75 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   76 |   new java.io.FileInputStream(fileName).getFD());
   77 |
   78 | sponse.getWriter().println(
   79 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |
   81 |
   82 | Exception e) {
   83 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |
   85 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00955.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |
   67 |   try (
   68 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   69 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 |    // as a vuln, rather than the File signature we are trying to actually test.
   71 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
   75 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  76 |              new java.io.FileInputStream(fileName).getFD());
   77 |      ) {
   78 |          response.getWriter().println(
   79 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 | );
   81 |
   82 |   } catch (Exception e) {
   83 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |   }
   85 |  }  // end doPost
   86 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   66 |
   67 |
   68 | e the file first so the test won't throw an exception if it doesn't exist.
   69 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 | vuln, rather than the File signature we are trying to actually test.
   71 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
>  75 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   76 |   new java.io.FileInputStream(fileName).getFD());
   77 |
   78 | sponse.getWriter().println(
   79 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |
   81 |
   82 | Exception e) {
   83 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |
   85 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |
   67 |   try (
   68 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   69 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 |    // as a vuln, rather than the File signature we are trying to actually test.
   71 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
   75 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  76 |              new java.io.FileInputStream(fileName).getFD());
   77 |      ) {
   78 |          response.getWriter().println(
   79 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 | );
   81 |
   82 |   } catch (Exception e) {
   83 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |   }
   85 |  }  // end doPost
   86 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01026.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,53,"
  43 |   String param = """";
  44 |   if (request.getHeader(""BenchmarkTest01026"") != null) {
  45 |    param = request.getHeader(""BenchmarkTest01026"");
  46 |   }
  47 |
  48 |   // URL Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
> 53 |   java.io.File fileTarget = new java.io.File(bar);
  54 |   response.getWriter().println(
  55 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  56 | );
  57 |   if (fileTarget.exists()) {
  58 |    response.getWriter().println(
  59 | "" And file already exists.""
  60 | );
  61 |   } else { response.getWriter().println(
  62 | "" But file doesn't exist yet.""
  63 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01027.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,53,"
  43 |   String param = """";
  44 |   if (request.getHeader(""BenchmarkTest01027"") != null) {
  45 |    param = request.getHeader(""BenchmarkTest01027"");
  46 |   }
  47 |
  48 |   // URL Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
> 53 |   java.io.File fileTarget = new java.io.File(bar);
  54 |   response.getWriter().println(
  55 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  56 | );
  57 |   if (fileTarget.exists()) {
  58 |    response.getWriter().println(
  59 | "" And file already exists.""
  60 | );
  61 |   } else { response.getWriter().println(
  62 | "" But file doesn't exist yet.""
  63 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
   54 |   // Mac requires an extra slash for some reason.
   55 |   String startURIslashes = """";
   56 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   57 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   58 |           startURIslashes = ""/"";
   59 |          else startURIslashes = ""//"";
   60 |
   61 |   try {
   62 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   63 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  64 |    java.io.File fileTarget = new java.io.File(fileURI);
   65 |    response.getWriter().println(
   66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   67 | );
   68 |    if (fileTarget.exists()) {
   69 |     response.getWriter().println(
   70 | "" And file already exists.""
   71 | );
   72 |    } else { response.getWriter().println(
   73 | "" But file doesn't exist yet.""
   74 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
  54 |   // Mac requires an extra slash for some reason.
  55 |   String startURIslashes = """";
  56 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  57 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  58 |           startURIslashes = ""/"";
  59 |          else startURIslashes = ""//"";
  60 |
  61 |   try {
  62 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
  63 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
> 64 |    java.io.File fileTarget = new java.io.File(fileURI);
  65 |             response.getWriter().println(
  66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  67 | );
  68 |             if (fileTarget.exists()) {
  69 |             response.getWriter().println(
  70 | "" And file already exists.""
  71 | );
  72 |             } else { response.getWriter().println(
  73 | "" But file doesn't exist yet.""
  74 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01030.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
   54 |   // Mac requires an extra slash for some reason.
   55 |   String startURIslashes = """";
   56 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   57 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   58 |           startURIslashes = ""/"";
   59 |          else startURIslashes = ""//"";
   60 |
   61 |   try {
   62 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   63 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  64 |    java.io.File fileTarget = new java.io.File(fileURI);
   65 |             response.getWriter().println(
   66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   67 | );
   68 |             if (fileTarget.exists()) {
   69 |             response.getWriter().println(
   70 | "" And file already exists.""
   71 | );
   72 |             } else { response.getWriter().println(
   73 | "" But file doesn't exist yet.""
   74 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
   48 |   // URL Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
   49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   50 |
   51 |   String bar = new Test().doSomething(request, param);
   52 |
   53 |   String fileName = null;
   54 |   java.io.FileInputStream fis = null;
   55 |
   56 |   try {
   57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  58 |    fis = new java.io.FileInputStream(fileName);
   59 |    byte[] b = new byte[1000];
   60 |    int size = fis.read(b);
   61 |    response.getWriter().println(
   62 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   63 | );
   64 |    response.getWriter().println(
   65 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   66 | );
   67 |   } catch (Exception e) {
   68 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |  java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 | bar = new Test().doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName),false);
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |  java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 | bar = new Test().doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName));
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(fileName);
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |      } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01035.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(fileName);
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |      } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01109.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
   52 |    java.util.Enumeration<String> values = request.getHeaders(name);
   53 |    if (values != null && values.hasMoreElements()) {
   54 |     param = name;
   55 |     break;
   56 |    }
   57 |   }
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
>  62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
   63 |   response.getWriter().println(
   64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   65 | );
   66 |   if (fileTarget.exists()) {
   67 |    response.getWriter().println(
   68 | "" And file already exists.""
   69 | );
   70 |   } else { response.getWriter().println(
   71 | "" But file doesn't exist yet.""
   72 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01110.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |   // Mac requires an extra slash for some reason.
   64 |   String startURIslashes = """";
   65 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   66 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   67 |           startURIslashes = ""/"";
   68 |          else startURIslashes = ""//"";
   69 |
   70 |   try {
   71 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   72 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  73 |    java.io.File fileTarget = new java.io.File(fileURI);
   74 |    response.getWriter().println(
   75 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   76 | );
   77 |    if (fileTarget.exists()) {
   78 |     response.getWriter().println(
   79 | "" And file already exists.""
   80 | );
   81 |    } else { response.getWriter().println(
   82 | "" But file doesn't exist yet.""
   83 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01113.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 | : We don't URL decode header names because people don't normally do that
   59 |
   60 | bar = new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01114.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 | : We don't URL decode header names because people don't normally do that
   59 |
   60 | bar = new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01115.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 | : We don't URL decode header names because people don't normally do that
   59 |
   60 | bar = new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName));
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
   62 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   63 |
   64 |
   65 | e the file first so the test won't throw an exception if it doesn't exist.
   66 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 | vuln, rather than the File signature we are trying to actually test.
   68 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
>  72 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   73 |   new java.io.FileInputStream(fileName).getFD());
   74 |
   75 | sponse.getWriter().println(
   76 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 |
   78 |
   79 | Exception e) {
   80 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |
   82 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |
   64 |   try (
   65 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   66 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 |    // as a vuln, rather than the File signature we are trying to actually test.
   68 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
   72 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  73 |              new java.io.FileInputStream(fileName).getFD());
   74 |      ) {
   75 |          response.getWriter().println(
   76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 | );
   78 |
   79 |   } catch (Exception e) {
   80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |   }
   82 |  }  // end doPost
   83 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
  62 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  63 |
  64 |
  65 | e the file first so the test won't throw an exception if it doesn't exist.
  66 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  67 | vuln, rather than the File signature we are trying to actually test.
  68 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  69 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  70 |
  71 |
> 72 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  73 |   new java.io.FileInputStream(fileName).getFD());
  74 |
  75 | sponse.getWriter().println(
  76 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  77 |
  78 |
  79 | Exception e) {
  80 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  81 |
  82 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
  63 |
  64 |   try (
  65 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  66 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  67 |    // as a vuln, rather than the File signature we are trying to actually test.
  68 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  69 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  70 |
  71 |
  72 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 73 |              new java.io.FileInputStream(fileName).getFD());
  74 |      ) {
  75 |          response.getWriter().println(
  76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  77 | );
  78 |
  79 |   } catch (Exception e) {
  80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  81 |   }
  82 |  }  // end doPost
  83 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,55,"
  45 |
  46 |   if (headers != null && headers.hasMoreElements()) {
  47 |    param = headers.nextElement(); // just grab first element
  48 |   }
  49 |
  50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |   String bar = new Test().doSomething(request, param);
  54 |
> 55 |   java.io.File fileTarget = new java.io.File(bar);
  56 |   response.getWriter().println(
  57 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  58 | );
  59 |   if (fileTarget.exists()) {
  60 |    response.getWriter().println(
  61 | "" And file already exists.""
  62 | );
  63 |   } else { response.getWriter().println(
  64 | "" But file doesn't exist yet.""
  65 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
  56 |   // Mac requires an extra slash for some reason.
  57 |   String startURIslashes = """";
  58 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  59 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  60 |           startURIslashes = ""/"";
  61 |          else startURIslashes = ""//"";
  62 |
  63 |   try {
  64 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
  65 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
> 66 |    java.io.File fileTarget = new java.io.File(fileURI);
  67 |    response.getWriter().println(
  68 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  69 | );
  70 |    if (fileTarget.exists()) {
  71 |     response.getWriter().println(
  72 | "" And file already exists.""
  73 | );
  74 |    } else { response.getWriter().println(
  75 | "" But file doesn't exist yet.""
  76 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
   56 |   // Mac requires an extra slash for some reason.
   57 |   String startURIslashes = """";
   58 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   59 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   60 |           startURIslashes = ""/"";
   61 |          else startURIslashes = ""//"";
   62 |
   63 |   try {
   64 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   65 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  66 |    java.io.File fileTarget = new java.io.File(fileURI);
   67 |    response.getWriter().println(
   68 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   69 | );
   70 |    if (fileTarget.exists()) {
   71 |     response.getWriter().println(
   72 | "" And file already exists.""
   73 | );
   74 |    } else { response.getWriter().println(
   75 | "" But file doesn't exist yet.""
   76 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
   50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 |   String bar = new Test().doSomething(request, param);
   54 |
   55 |   String fileName = null;
   56 |   java.io.FileInputStream fis = null;
   57 |
   58 |   try {
   59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  60 |    fis = new java.io.FileInputStream(fileName);
   61 |    byte[] b = new byte[1000];
   62 |    int size = fis.read(b);
   63 |    response.getWriter().println(
   64 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   65 | );
   66 |    response.getWriter().println(
   67 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   68 | );
   69 |   } catch (Exception e) {
   70 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01159.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
   50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
   51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 |   String bar = new Test().doSomething(request, param);
   54 |
   55 |   String fileName = null;
   56 |   java.io.FileInputStream fis = null;
   57 |
   58 |   try {
   59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  60 |    fis = new java.io.FileInputStream(fileName);
   61 |    byte[] b = new byte[1000];
   62 |    int size = fis.read(b);
   63 |    response.getWriter().println(
   64 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   65 | );
   66 |    response.getWriter().println(
   67 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   68 | );
   69 |   } catch (Exception e) {
   70 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
  51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |   String bar = new Test().doSomething(request, param);
  54 |
  55 |   String fileName = null;
  56 |   java.io.FileOutputStream fos = null;
  57 |
  58 |   try {
  59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  60 |
> 61 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
  62 |          response.getWriter().println(
  63 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  64 | );
  65 |
  66 |   } catch (Exception e) {
  67 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  68 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  69 |   } finally {
  70 |    if (fos != null) {
  71 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01160.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
  51 |  java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 | bar = new Test().doSomething(request, param);
  54 |
  55 | fileName = null;
  56 | .FileOutputStream fos = null;
  57 |
  58 |
  59 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  60 |
> 61 | new java.io.FileOutputStream(new java.io.File(fileName),false);
  62 | response.getWriter().println(
  63 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  64 |
  65 |
  66 |  (Exception e) {
  67 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  68 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  69 | ly {
  70 | s != null) {
  71 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
   51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 |   String bar = new Test().doSomething(request, param);
   54 |
   55 |   String fileName = null;
   56 |   java.io.FileOutputStream fos = null;
   57 |
   58 |   try {
   59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   60 |
>  61 |    fos = new java.io.FileOutputStream(fileName, false);
   62 |          response.getWriter().println(
   63 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   64 | );
   65 |
   66 |   } catch (Exception e) {
   67 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   68 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   69 |   } finally {
   70 |    if (fos != null) {
   71 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   // Mac requires an extra slash for some reason.
  50 |   String startURIslashes = """";
  51 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  52 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  53 |           startURIslashes = ""/"";
  54 |          else startURIslashes = ""//"";
  55 |
  56 |   try {
  57 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
  58 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
> 59 |    java.io.File fileTarget = new java.io.File(fileURI);
  60 |    response.getWriter().println(
  61 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  62 | );
  63 |    if (fileTarget.exists()) {
  64 |     response.getWriter().println(
  65 | "" And file already exists.""
  66 | );
  67 |    } else { response.getWriter().println(
  68 | "" But file doesn't exist yet.""
  69 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   // Mac requires an extra slash for some reason.
  50 |   String startURIslashes = """";
  51 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  52 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  53 |           startURIslashes = ""/"";
  54 |          else startURIslashes = ""//"";
  55 |
  56 |   try {
  57 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
  58 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
> 59 |    java.io.File fileTarget = new java.io.File(fileURI);
  60 |    response.getWriter().println(
  61 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  62 | );
  63 |    if (fileTarget.exists()) {
  64 |     response.getWriter().println(
  65 | "" And file already exists.""
  66 | );
  67 |    } else { response.getWriter().println(
  68 | "" But file doesn't exist yet.""
  69 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01237.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   // Mac requires an extra slash for some reason.
  50 |   String startURIslashes = """";
  51 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  52 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  53 |           startURIslashes = ""/"";
  54 |          else startURIslashes = ""//"";
  55 |
  56 |   try {
  57 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
  58 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
> 59 |    java.io.File fileTarget = new java.io.File(fileURI);
  60 |    response.getWriter().println(
  61 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  62 | );
  63 |    if (fileTarget.exists()) {
  64 |     response.getWriter().println(
  65 | "" And file already exists.""
  66 | );
  67 |    } else { response.getWriter().println(
  68 | "" But file doesn't exist yet.""
  69 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = new Test().doSomething(request, param);
  47 |
  48 |   String fileName = null;
  49 |   java.io.FileOutputStream fos = null;
  50 |
  51 |   try {
  52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
  55 |          response.getWriter().println(
  56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 | );
  58 |
  59 |   } catch (Exception e) {
  60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 |   } finally {
  63 |    if (fos != null) {
  64 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 | am == null) param = """";
  45 |
  46 | bar = new Test().doSomething(request, param);
  47 |
  48 | fileName = null;
  49 | .FileOutputStream fos = null;
  50 |
  51 |
  52 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 | new java.io.FileOutputStream(new java.io.File(fileName),false);
  55 | response.getWriter().println(
  56 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 |
  58 |
  59 |  (Exception e) {
  60 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 | ly {
  63 | s != null) {
  64 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
  48 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  49 |
  50 |
  51 | e the file first so the test won't throw an exception if it doesn't exist.
  52 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  53 | vuln, rather than the File signature we are trying to actually test.
  54 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  55 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  56 |
  57 |
> 58 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  59 |   new java.io.FileInputStream(fileName).getFD());
  60 |
  61 | sponse.getWriter().println(
  62 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  63 |
  64 |
  65 | Exception e) {
  66 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  67 |
  68 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |   try (
  51 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  52 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  53 |    // as a vuln, rather than the File signature we are trying to actually test.
  54 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  55 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  56 |
  57 |
  58 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 59 |              new java.io.FileInputStream(fileName).getFD());
  60 |      ) {
  61 |          response.getWriter().println(
  62 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  63 | );
  64 |
  65 |   } catch (Exception e) {
  66 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  67 |   }
  68 |  }  // end doPost
  69 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = new Test().doSomething(request, param);
  47 |
  48 |   String fileName = null;
  49 |   java.io.FileOutputStream fos = null;
  50 |
  51 |   try {
  52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 |    fos = new java.io.FileOutputStream(fileName);
  55 |          response.getWriter().println(
  56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 | );
  58 |
  59 |      } catch (Exception e) {
  60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 |   } finally {
  63 |    if (fos != null) {
  64 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01328.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
   54 |   // Mac requires an extra slash for some reason.
   55 |   String startURIslashes = """";
   56 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   57 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   58 |           startURIslashes = ""/"";
   59 |          else startURIslashes = ""//"";
   60 |
   61 |   try {
   62 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   63 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  64 |    java.io.File fileTarget = new java.io.File(fileURI);
   65 |    response.getWriter().println(
   66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   67 | );
   68 |    if (fileTarget.exists()) {
   69 |     response.getWriter().println(
   70 | "" And file already exists.""
   71 | );
   72 |    } else { response.getWriter().println(
   73 | "" But file doesn't exist yet.""
   74 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
   54 |   // Mac requires an extra slash for some reason.
   55 |   String startURIslashes = """";
   56 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   57 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   58 |           startURIslashes = ""/"";
   59 |          else startURIslashes = ""//"";
   60 |
   61 |   try {
   62 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   63 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  64 |    java.io.File fileTarget = new java.io.File(fileURI);
   65 |             response.getWriter().println(
   66 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   67 | );
   68 |             if (fileTarget.exists()) {
   69 |             response.getWriter().println(
   70 | "" And file already exists.""
   71 | );
   72 |             } else { response.getWriter().println(
   73 | "" But file doesn't exist yet.""
   74 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |
  51 |   String bar = new Test().doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |
  51 | bar = new Test().doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName));
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
   49 |
   50 |
   51 |   String bar = new Test().doSomething(request, param);
   52 |
   53 |   String fileName = null;
   54 |   java.io.FileOutputStream fos = null;
   55 |
   56 |   try {
   57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   58 |
>  59 |    fos = new java.io.FileOutputStream(fileName);
   60 |          response.getWriter().println(
   61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   62 | );
   63 |
   64 |      } catch (Exception e) {
   65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   67 |   } finally {
   68 |    if (fos != null) {
   69 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01404.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
   52 |      if (value.equals(""BenchmarkTest01404"")) {
   53 |       param = name;
   54 |          flag = false;
   55 |      }
   56 |     }
   57 |    }
   58 |   }
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
>  62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
   63 |   response.getWriter().println(
   64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   65 | );
   66 |   if (fileTarget.exists()) {
   67 |    response.getWriter().println(
   68 | "" And file already exists.""
   69 | );
   70 |   } else { response.getWriter().println(
   71 | "" But file doesn't exist yet.""
   72 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |    }
   58 |   }
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |         String fileName = null;
   63 |         java.io.FileInputStream fis = null;
   64 |
   65 |         try {
   66 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   68 |           byte[] b = new byte[1000];
   69 |           int size = fis.read(b);
   70 |           response.getWriter().println(
   71 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |           );
   74 |         } catch (Exception e) {
   75 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 |             response.getWriter().println(
   77 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |
   58 |
   59 |
   60 | new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileInputStream fis = null;
   64 |
   65 |
   66 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |  new java.io.FileInputStream(new java.io.File(fileName));
   68 | ] b = new byte[1000];
   69 | ize = fis.read(b);
   70 | nse.getWriter().println(
   71 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |
   74 |  (Exception e) {
   75 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 | ponse.getWriter().println(
   77 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01406.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |    }
   58 |   }
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
   62 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   63 |
   64 |
   65 | e the file first so the test won't throw an exception if it doesn't exist.
   66 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 | vuln, rather than the File signature we are trying to actually test.
   68 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
>  72 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   73 |   new java.io.FileInputStream(fileName).getFD());
   74 |
   75 | sponse.getWriter().println(
   76 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 |
   78 |
   79 | Exception e) {
   80 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |
   82 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01407.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |
   64 |   try (
   65 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   66 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 |    // as a vuln, rather than the File signature we are trying to actually test.
   68 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
   72 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  73 |              new java.io.FileInputStream(fileName).getFD());
   74 |      ) {
   75 |          response.getWriter().println(
   76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 | );
   78 |
   79 |   } catch (Exception e) {
   80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |   }
   82 |  }  // end doPost
   83 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   }
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName, false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,51,"
  41 |   response.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 |   String[] values = request.getParameterValues(""BenchmarkTest01571"");
  44 |   String param;
  45 |   if (values != null && values.length > 0)
  46 |     param = values[0];
  47 |   else param = """";
  48 |
  49 |   String bar = new Test().doSomething(request, param);
  50 |
> 51 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  52 |   response.getWriter().println(
  53 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  54 | );
  55 |   if (fileTarget.exists()) {
  56 |    response.getWriter().println(
  57 | "" And file already exists.""
  58 | );
  59 |   } else { response.getWriter().println(
  60 | "" But file doesn't exist yet.""
  61 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |     param = values[0];
  47 |   else param = """";
  48 |
  49 |   String bar = new Test().doSomething(request, param);
  50 |
  51 |         String fileName = null;
  52 |         java.io.FileInputStream fis = null;
  53 |
  54 |         try {
  55 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 56 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  57 |           byte[] b = new byte[1000];
  58 |           int size = fis.read(b);
  59 |           response.getWriter().println(
  60 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  61 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  62 |           );
  63 |         } catch (Exception e) {
  64 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  65 |             response.getWriter().println(
  66 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 | ues[0];
  47 | """";
  48 |
  49 | new Test().doSomething(request, param);
  50 |
  51 | fileName = null;
  52 | .FileInputStream fis = null;
  53 |
  54 |
  55 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 56 |  new java.io.FileInputStream(new java.io.File(fileName));
  57 | ] b = new byte[1000];
  58 | ize = fis.read(b);
  59 | nse.getWriter().println(
  60 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  61 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  62 |
  63 |  (Exception e) {
  64 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  65 | ponse.getWriter().println(
  66 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
   46 |     param = values[0];
   47 |   else param = """";
   48 |
   49 |   String bar = new Test().doSomething(request, param);
   50 |
   51 |         String fileName = null;
   52 |         java.io.FileInputStream fis = null;
   53 |
   54 |         try {
   55 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  56 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   57 |           byte[] b = new byte[1000];
   58 |           int size = fis.read(b);
   59 |           response.getWriter().println(
   60 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   61 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   62 |           );
   63 |         } catch (Exception e) {
   64 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   65 |             response.getWriter().println(
   66 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
   46 | ues[0];
   47 | """";
   48 |
   49 | new Test().doSomething(request, param);
   50 |
   51 | fileName = null;
   52 | .FileInputStream fis = null;
   53 |
   54 |
   55 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  56 |  new java.io.FileInputStream(new java.io.File(fileName));
   57 | ] b = new byte[1000];
   58 | ize = fis.read(b);
   59 | nse.getWriter().println(
   60 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   61 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   62 |
   63 |  (Exception e) {
   64 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   65 | ponse.getWriter().println(
   66 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01574.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,57,"
  47 |   else param = """";
  48 |
  49 |   String bar = new Test().doSomething(request, param);
  50 |
  51 |   String fileName = null;
  52 |   java.io.FileOutputStream fos = null;
  53 |
  54 |   try {
  55 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  56 |
> 57 |    fos = new java.io.FileOutputStream(fileName, false);
  58 |          response.getWriter().println(
  59 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  60 | );
  61 |
  62 |   } catch (Exception e) {
  63 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  64 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  65 |   } finally {
  66 |    if (fos != null) {
  67 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |   // Mac requires an extra slash for some reason.
   64 |   String startURIslashes = """";
   65 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   66 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   67 |           startURIslashes = ""/"";
   68 |          else startURIslashes = ""//"";
   69 |
   70 |   try {
   71 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   72 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  73 |    java.io.File fileTarget = new java.io.File(fileURI);
   74 |    response.getWriter().println(
   75 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   76 | );
   77 |    if (fileTarget.exists()) {
   78 |     response.getWriter().println(
   79 | "" And file already exists.""
   80 | );
   81 |    } else { response.getWriter().println(
   82 | "" But file doesn't exist yet.""
   83 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01644.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |         String fileName = null;
   63 |         java.io.FileInputStream fis = null;
   64 |
   65 |         try {
   66 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   68 |           byte[] b = new byte[1000];
   69 |           int size = fis.read(b);
   70 |           response.getWriter().println(
   71 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |           );
   74 |         } catch (Exception e) {
   75 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 |             response.getWriter().println(
   77 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01644.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |
   58 | net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileInputStream fis = null;
   64 |
   65 |
   66 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |  new java.io.FileInputStream(new java.io.File(fileName));
   68 | ] b = new byte[1000];
   69 | ize = fis.read(b);
   70 | nse.getWriter().println(
   71 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |
   74 |  (Exception e) {
   75 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 | ponse.getWriter().println(
   77 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01646.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |  java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | bar = new Test().doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName));
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = new Test().doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName, false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |   // Mac requires an extra slash for some reason.
   67 |   String startURIslashes = """";
   68 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   69 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   70 |           startURIslashes = ""/"";
   71 |          else startURIslashes = ""//"";
   72 |
   73 |   try {
   74 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
   75 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
>  76 |    java.io.File fileTarget = new java.io.File(fileURI);
   77 |    response.getWriter().println(
   78 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   79 | );
   80 |    if (fileTarget.exists()) {
   81 |     response.getWriter().println(
   82 | "" And file already exists.""
   83 | );
   84 |    } else { response.getWriter().println(
   85 | "" But file doesn't exist yet.""
   86 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01837.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |   // Mac requires an extra slash for some reason.
   67 |   String startURIslashes = """";
   68 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   69 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   70 |           startURIslashes = ""/"";
   71 |          else startURIslashes = ""//"";
   72 |
   73 |   try {
   74 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   75 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  76 |    java.io.File fileTarget = new java.io.File(fileURI);
   77 |             response.getWriter().println(
   78 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   79 | );
   80 |             if (fileTarget.exists()) {
   81 |             response.getWriter().println(
   82 | "" And file already exists.""
   83 | );
   84 |             } else { response.getWriter().println(
   85 | "" But file doesn't exist yet.""
   86 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,70,"
   60 |    }
   61 |   }
   62 |
   63 |   String bar = doSomething(request, param);
   64 |
   65 |         String fileName = null;
   66 |         java.io.FileInputStream fis = null;
   67 |
   68 |         try {
   69 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  70 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   71 |           byte[] b = new byte[1000];
   72 |           int size = fis.read(b);
   73 |           response.getWriter().println(
   74 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   75 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   76 |           );
   77 |         } catch (Exception e) {
   78 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   79 |             response.getWriter().println(
   80 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01838.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,70,"
   60 |
   61 |
   62 |
   63 | doSomething(request, param);
   64 |
   65 | fileName = null;
   66 | .FileInputStream fis = null;
   67 |
   68 |
   69 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  70 |  new java.io.FileInputStream(new java.io.File(fileName));
   71 | ] b = new byte[1000];
   72 | ize = fis.read(b);
   73 | nse.getWriter().println(
   74 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   75 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   76 |
   77 |  (Exception e) {
   78 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   79 | ponse.getWriter().println(
   80 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
   61 |   }
   62 |
   63 |   String bar = doSomething(request, param);
   64 |
   65 |   String fileName = null;
   66 |   java.io.FileOutputStream fos = null;
   67 |
   68 |   try {
   69 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   70 |
>  71 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   72 |          response.getWriter().println(
   73 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   74 | );
   75 |
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   78 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   79 |   } finally {
   80 |    if (fos != null) {
   81 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
   61 |
   62 |
   63 | bar = doSomething(request, param);
   64 |
   65 | fileName = null;
   66 | .FileOutputStream fos = null;
   67 |
   68 |
   69 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   70 |
>  71 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   72 | response.getWriter().println(
   73 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   74 |
   75 |
   76 |  (Exception e) {
   77 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   78 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   79 | ly {
   80 | s != null) {
   81 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |   }
  62 |
  63 |   String bar = doSomething(request, param);
  64 |
  65 |   String fileName = null;
  66 |   java.io.FileOutputStream fos = null;
  67 |
  68 |   try {
  69 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  70 |
> 71 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  72 |          response.getWriter().println(
  73 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  74 | );
  75 |
  76 |   } catch (Exception e) {
  77 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  78 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  79 |   } finally {
  80 |    if (fos != null) {
  81 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,71,"
  61 |
  62 |
  63 | bar = doSomething(request, param);
  64 |
  65 | fileName = null;
  66 | .FileOutputStream fos = null;
  67 |
  68 |
  69 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  70 |
> 71 | new java.io.FileOutputStream(new java.io.File(fileName));
  72 | response.getWriter().println(
  73 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  74 |
  75 |
  76 |  (Exception e) {
  77 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  78 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  79 | ly {
  80 | s != null) {
  81 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,75,"
   65 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   66 |
   67 |
   68 | e the file first so the test won't throw an exception if it doesn't exist.
   69 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 | vuln, rather than the File signature we are trying to actually test.
   71 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
>  75 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   76 |   new java.io.FileInputStream(fileName).getFD());
   77 |
   78 | sponse.getWriter().println(
   79 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 |
   81 |
   82 | Exception e) {
   83 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |
   85 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01841.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,76,"
   66 |
   67 |   try (
   68 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   69 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   70 |    // as a vuln, rather than the File signature we are trying to actually test.
   71 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   72 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   73 |
   74 |
   75 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  76 |              new java.io.FileInputStream(fileName).getFD());
   77 |      ) {
   78 |          response.getWriter().println(
   79 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   80 | );
   81 |
   82 |   } catch (Exception e) {
   83 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   84 |   }
   85 |  }  // end doPost
   86 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,53,"
  43 |   String param = """";
  44 |   if (request.getHeader(""BenchmarkTest01904"") != null) {
  45 |    param = request.getHeader(""BenchmarkTest01904"");
  46 |   }
  47 |
  48 |   // URL Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
> 53 |   java.io.File fileTarget = new java.io.File(bar);
  54 |   response.getWriter().println(
  55 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  56 | );
  57 |   if (fileTarget.exists()) {
  58 |    response.getWriter().println(
  59 | "" And file already exists.""
  60 | );
  61 |   } else { response.getWriter().println(
  62 | "" But file doesn't exist yet.""
  63 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01905.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
  48 |   // URL Decode the header value since req.getHeader() doesn't. Unlike req.getParameter().
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileInputStream fis = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 58 |    fis = new java.io.FileInputStream(fileName);
  59 |    byte[] b = new byte[1000];
  60 |    int size = fis.read(b);
  61 |    response.getWriter().println(
  62 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  63 | );
  64 |    response.getWriter().println(
  65 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  66 | );
  67 |   } catch (Exception e) {
  68 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |  java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 | bar = doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName));
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |  java.net.URLDecoder.decode(param, ""UTF-8"");
  50 |
  51 | bar = doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName));
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |    java.util.Enumeration<String> values = request.getHeaders(name);
  53 |    if (values != null && values.hasMoreElements()) {
  54 |     param = name;
  55 |     break;
  56 |    }
  57 |   }
  58 |   // Note: We don't URL decode header names because people don't normally do that
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01986.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |   // Mac requires an extra slash for some reason.
   64 |   String startURIslashes = """";
   65 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   66 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   67 |           startURIslashes = ""/"";
   68 |          else startURIslashes = ""//"";
   69 |
   70 |   try {
   71 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   72 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  73 |    java.io.File fileTarget = new java.io.File(fileURI);
   74 |             response.getWriter().println(
   75 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   76 | );
   77 |             if (fileTarget.exists()) {
   78 |             response.getWriter().println(
   79 | "" And file already exists.""
   80 | );
   81 |             } else { response.getWriter().println(
   82 | "" But file doesn't exist yet.""
   83 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |   // Mac requires an extra slash for some reason.
   64 |   String startURIslashes = """";
   65 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   66 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   67 |           startURIslashes = ""/"";
   68 |          else startURIslashes = ""//"";
   69 |
   70 |   try {
   71 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   72 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  73 |    java.io.File fileTarget = new java.io.File(fileURI);
   74 |             response.getWriter().println(
   75 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   76 | );
   77 |             if (fileTarget.exists()) {
   78 |             response.getWriter().println(
   79 | "" And file already exists.""
   80 | );
   81 |             } else { response.getWriter().println(
   82 | "" But file doesn't exist yet.""
   83 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |         String fileName = null;
   63 |         java.io.FileInputStream fis = null;
   64 |
   65 |         try {
   66 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   68 |           byte[] b = new byte[1000];
   69 |           int size = fis.read(b);
   70 |           response.getWriter().println(
   71 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |           );
   74 |         } catch (Exception e) {
   75 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 |             response.getWriter().println(
   77 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |
   58 | on't URL decode header names because people don't normally do that
   59 |
   60 | doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileInputStream fis = null;
   64 |
   65 |
   66 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |  new java.io.FileInputStream(new java.io.File(fileName));
   68 | ] b = new byte[1000];
   69 | ize = fis.read(b);
   70 | nse.getWriter().println(
   71 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |
   74 |  (Exception e) {
   75 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 | ponse.getWriter().println(
   77 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName, false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01990.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   // Note: We don't URL decode header names because people don't normally do that
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |      } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02029.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,55,"
  45 |
  46 |   if (headers != null && headers.hasMoreElements()) {
  47 |    param = headers.nextElement(); // just grab first element
  48 |   }
  49 |
  50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |   String bar = doSomething(request, param);
  54 |
> 55 |   java.io.File fileTarget = new java.io.File(bar);
  56 |   response.getWriter().println(
  57 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  58 | );
  59 |   if (fileTarget.exists()) {
  60 |    response.getWriter().println(
  61 | "" And file already exists.""
  62 | );
  63 |   } else { response.getWriter().println(
  64 | "" But file doesn't exist yet.""
  65 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02030.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
   56 |   // Mac requires an extra slash for some reason.
   57 |   String startURIslashes = """";
   58 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   59 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
   60 |           startURIslashes = ""/"";
   61 |          else startURIslashes = ""//"";
   62 |
   63 |   try {
   64 |    java.net.URI fileURI = new java.net.URI(""file"", null, startURIslashes
   65 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', java.io.File.separatorChar).replace(' ', '_') + bar,
>  66 |    java.io.File fileTarget = new java.io.File(fileURI);
   67 |             response.getWriter().println(
   68 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
   69 | );
   70 |             if (fileTarget.exists()) {
   71 |             response.getWriter().println(
   72 | "" And file already exists.""
   73 | );
   74 |             } else { response.getWriter().println(
   75 | "" But file doesn't exist yet.""
   76 | ); }
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02031.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
  50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |   String bar = doSomething(request, param);
  54 |
  55 |         String fileName = null;
  56 |         java.io.FileInputStream fis = null;
  57 |
  58 |         try {
  59 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 60 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  61 |           byte[] b = new byte[1000];
  62 |           int size = fis.read(b);
  63 |           response.getWriter().println(
  64 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  65 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  66 |           );
  67 |         } catch (Exception e) {
  68 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  69 |             response.getWriter().println(
  70 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02031.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
  50 |  the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  51 | net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 | doSomething(request, param);
  54 |
  55 | fileName = null;
  56 | .FileInputStream fis = null;
  57 |
  58 |
  59 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 60 |  new java.io.FileInputStream(new java.io.File(fileName));
  61 | ] b = new byte[1000];
  62 | ize = fis.read(b);
  63 | nse.getWriter().println(
  64 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  65 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  66 |
  67 |  (Exception e) {
  68 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  69 | ponse.getWriter().println(
  70 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,60,"
  50 |   // URL Decode the header value since req.getHeaders() doesn't. Unlike req.getParameters().
  51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  52 |
  53 |   String bar = doSomething(request, param);
  54 |
  55 |   String fileName = null;
  56 |   java.io.FileInputStream fis = null;
  57 |
  58 |   try {
  59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 60 |    fis = new java.io.FileInputStream(fileName);
  61 |    byte[] b = new byte[1000];
  62 |    int size = fis.read(b);
  63 |    response.getWriter().println(
  64 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
  65 | );
  66 |    response.getWriter().println(
  67 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  68 | );
  69 |   } catch (Exception e) {
  70 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
   51 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 |   String bar = doSomething(request, param);
   54 |
   55 |   String fileName = null;
   56 |   java.io.FileOutputStream fos = null;
   57 |
   58 |   try {
   59 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   60 |
>  61 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   62 |          response.getWriter().println(
   63 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   64 | );
   65 |
   66 |   } catch (Exception e) {
   67 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   68 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   69 |   } finally {
   70 |    if (fos != null) {
   71 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02033.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
   51 |  java.net.URLDecoder.decode(param, ""UTF-8"");
   52 |
   53 | bar = doSomething(request, param);
   54 |
   55 | fileName = null;
   56 | .FileOutputStream fos = null;
   57 |
   58 |
   59 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   60 |
>  61 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   62 | response.getWriter().println(
   63 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   64 |
   65 |
   66 |  (Exception e) {
   67 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   68 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   69 | ly {
   70 | s != null) {
   71 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,65,"
  55 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  56 |
  57 |
  58 | e the file first so the test won't throw an exception if it doesn't exist.
  59 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  60 | vuln, rather than the File signature we are trying to actually test.
  61 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  62 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  63 |
  64 |
> 65 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  66 |   new java.io.FileInputStream(fileName).getFD());
  67 |
  68 | sponse.getWriter().println(
  69 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  70 |
  71 |
  72 | Exception e) {
  73 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  74 |
  75 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,66,"
  56 |
  57 |   try (
  58 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  59 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  60 |    // as a vuln, rather than the File signature we are trying to actually test.
  61 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  62 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  63 |
  64 |
  65 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 66 |              new java.io.FileInputStream(fileName).getFD());
  67 |      ) {
  68 |          response.getWriter().println(
  69 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  70 | );
  71 |
  72 |   } catch (Exception e) {
  73 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  74 |   }
  75 |  }  // end doPost
  76 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,48,"
  38 |
  39 |  @Override
  40 |  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
  41 |   response.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 |   String param = request.getParameter(""BenchmarkTest02106"");
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = doSomething(request, param);
  47 |
> 48 |   java.io.File fileTarget = new java.io.File(bar);
  49 |   response.getWriter().println(
  50 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  51 | );
  52 |   if (fileTarget.exists()) {
  53 |    response.getWriter().println(
  54 | "" And file already exists.""
  55 | );
  56 |   } else { response.getWriter().println(
  57 | "" But file doesn't exist yet.""
  58 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02107.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,48,"
  38 |
  39 |  @Override
  40 |  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
  41 |   response.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 |   String param = request.getParameter(""BenchmarkTest02107"");
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = doSomething(request, param);
  47 |
> 48 |   java.io.File fileTarget = new java.io.File(bar);
  49 |   response.getWriter().println(
  50 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  51 | );
  52 |   if (fileTarget.exists()) {
  53 |    response.getWriter().println(
  54 | "" And file already exists.""
  55 | );
  56 |   } else { response.getWriter().println(
  57 | "" But file doesn't exist yet.""
  58 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = doSomething(request, param);
  47 |
  48 |   String fileName = null;
  49 |   java.io.FileOutputStream fos = null;
  50 |
  51 |   try {
  52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
  55 |          response.getWriter().println(
  56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 | );
  58 |
  59 |   } catch (Exception e) {
  60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 |   } finally {
  63 |    if (fos != null) {
  64 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02108.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 | am == null) param = """";
  45 |
  46 | bar = doSomething(request, param);
  47 |
  48 | fileName = null;
  49 | .FileOutputStream fos = null;
  50 |
  51 |
  52 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 | new java.io.FileOutputStream(new java.io.File(fileName),false);
  55 | response.getWriter().println(
  56 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 |
  58 |
  59 |  (Exception e) {
  60 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 | ly {
  63 | s != null) {
  64 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = doSomething(request, param);
  47 |
  48 |   String fileName = null;
  49 |   java.io.FileOutputStream fos = null;
  50 |
  51 |   try {
  52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  55 |          response.getWriter().println(
  56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 | );
  58 |
  59 |   } catch (Exception e) {
  60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 |   } finally {
  63 |    if (fos != null) {
  64 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 | am == null) param = """";
  45 |
  46 | bar = doSomething(request, param);
  47 |
  48 | fileName = null;
  49 | .FileOutputStream fos = null;
  50 |
  51 |
  52 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 | new java.io.FileOutputStream(new java.io.File(fileName));
  55 | response.getWriter().println(
  56 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 |
  58 |
  59 |  (Exception e) {
  60 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 | ly {
  63 | s != null) {
  64 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 |   if (param == null) param = """";
  45 |
  46 |   String bar = doSomething(request, param);
  47 |
  48 |   String fileName = null;
  49 |   java.io.FileOutputStream fos = null;
  50 |
  51 |   try {
  52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
  55 |          response.getWriter().println(
  56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 | );
  58 |
  59 |   } catch (Exception e) {
  60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 |   } finally {
  63 |    if (fos != null) {
  64 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
  44 | am == null) param = """";
  45 |
  46 | bar = doSomething(request, param);
  47 |
  48 | fileName = null;
  49 | .FileOutputStream fos = null;
  50 |
  51 |
  52 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  53 |
> 54 | new java.io.FileOutputStream(new java.io.File(fileName));
  55 | response.getWriter().println(
  56 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  57 |
  58 |
  59 |  (Exception e) {
  60 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  61 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  62 | ly {
  63 | s != null) {
  64 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
  48 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  49 |
  50 |
  51 | e the file first so the test won't throw an exception if it doesn't exist.
  52 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  53 | vuln, rather than the File signature we are trying to actually test.
  54 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  55 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  56 |
  57 |
> 58 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  59 |   new java.io.FileInputStream(fileName).getFD());
  60 |
  61 | sponse.getWriter().println(
  62 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  63 |
  64 |
  65 | Exception e) {
  66 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  67 |
  68 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |   try (
  51 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  52 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  53 |    // as a vuln, rather than the File signature we are trying to actually test.
  54 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  55 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  56 |
  57 |
  58 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 59 |              new java.io.FileInputStream(fileName).getFD());
  60 |      ) {
  61 |          response.getWriter().println(
  62 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  63 | );
  64 |
  65 |   } catch (Exception e) {
  66 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  67 |   }
  68 |  }  // end doPost
  69 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,54,"
   44 |   if (param == null) param = """";
   45 |
   46 |   String bar = doSomething(request, param);
   47 |
   48 |   String fileName = null;
   49 |   java.io.FileOutputStream fos = null;
   50 |
   51 |   try {
   52 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   53 |
>  54 |    fos = new java.io.FileOutputStream(fileName, false);
   55 |          response.getWriter().println(
   56 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   57 | );
   58 |
   59 |   } catch (Exception e) {
   60 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   61 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   62 |   } finally {
   63 |    if (fos != null) {
   64 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,53,"
  43 |   java.util.Map<String,String[]> map = request.getParameterMap();
  44 |   String param = """";
  45 |   if (!map.isEmpty()) {
  46 |    String[] values = map.get(""BenchmarkTest02199"");
  47 |    if (values != null) param = values[0];
  48 |   }
  49 |
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
> 53 |   java.io.File fileTarget = new java.io.File(bar);
  54 |   response.getWriter().println(
  55 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  56 | );
  57 |   if (fileTarget.exists()) {
  58 |    response.getWriter().println(
  59 | "" And file already exists.""
  60 | );
  61 |   } else { response.getWriter().println(
  62 | "" But file doesn't exist yet.""
  63 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02200.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,53,"
  43 |   java.util.Map<String,String[]> map = request.getParameterMap();
  44 |   String param = """";
  45 |   if (!map.isEmpty()) {
  46 |    String[] values = map.get(""BenchmarkTest02200"");
  47 |    if (values != null) param = values[0];
  48 |   }
  49 |
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
> 53 |   java.io.File fileTarget = new java.io.File(bar);
  54 |   response.getWriter().println(
  55 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  56 | );
  57 |   if (fileTarget.exists()) {
  58 |    response.getWriter().println(
  59 | "" And file already exists.""
  60 | );
  61 |   } else { response.getWriter().println(
  62 | "" But file doesn't exist yet.""
  63 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02201.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
   48 |   }
   49 |
   50 |
   51 |   String bar = doSomething(request, param);
   52 |
   53 |         String fileName = null;
   54 |         java.io.FileInputStream fis = null;
   55 |
   56 |         try {
   57 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  58 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   59 |           byte[] b = new byte[1000];
   60 |           int size = fis.read(b);
   61 |           response.getWriter().println(
   62 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   63 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   64 |           );
   65 |         } catch (Exception e) {
   66 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   67 |             response.getWriter().println(
   68 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02201.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,58,"
   48 |
   49 |
   50 |
   51 | doSomething(request, param);
   52 |
   53 | fileName = null;
   54 | .FileInputStream fis = null;
   55 |
   56 |
   57 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  58 |  new java.io.FileInputStream(new java.io.File(fileName));
   59 | ] b = new byte[1000];
   60 | ize = fis.read(b);
   61 | nse.getWriter().println(
   62 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   63 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   64 |
   65 |  (Exception e) {
   66 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   67 | ponse.getWriter().println(
   68 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |   } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02202.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |
  51 | bar = doSomething(request, param);
  52 |
  53 | fileName = null;
  54 | .FileOutputStream fos = null;
  55 |
  56 |
  57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 | new java.io.FileOutputStream(new java.io.File(fileName),false);
  60 | response.getWriter().println(
  61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 |
  63 |
  64 |  (Exception e) {
  65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 | ly {
  68 | s != null) {
  69 |
     ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
   49 |
   50 |
   51 |   String bar = doSomething(request, param);
   52 |
   53 |   String fileName = null;
   54 |   java.io.FileOutputStream fos = null;
   55 |
   56 |   try {
   57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   58 |
>  59 |    fos = new java.io.FileOutputStream(new java.io.File(fileName));
   60 |          response.getWriter().println(
   61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   62 | );
   63 |
   64 |   } catch (Exception e) {
   65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   67 |   } finally {
   68 |    if (fos != null) {
   69 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02203.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
   49 |
   50 |
   51 | bar = doSomething(request, param);
   52 |
   53 | fileName = null;
   54 | .FileOutputStream fos = null;
   55 |
   56 |
   57 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   58 |
>  59 | new java.io.FileOutputStream(new java.io.File(fileName));
   60 | response.getWriter().println(
   61 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   62 |
   63 |
   64 |  (Exception e) {
   65 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   66 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   67 | ly {
   68 | s != null) {
   69 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,63,"
  53 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  54 |
  55 |
  56 | e the file first so the test won't throw an exception if it doesn't exist.
  57 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  58 | vuln, rather than the File signature we are trying to actually test.
  59 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  60 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  61 |
  62 |
> 63 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  64 |   new java.io.FileInputStream(fileName).getFD());
  65 |
  66 | sponse.getWriter().println(
  67 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  68 |
  69 |
  70 | Exception e) {
  71 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  72 |
  73 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,64,"
  54 |
  55 |   try (
  56 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  57 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  58 |    // as a vuln, rather than the File signature we are trying to actually test.
  59 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  60 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  61 |
  62 |
  63 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 64 |              new java.io.FileInputStream(fileName).getFD());
  65 |      ) {
  66 |          response.getWriter().println(
  67 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  68 | );
  69 |
  70 |   } catch (Exception e) {
  71 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  72 |   }
  73 |  }  // end doPost
  74 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,59,"
  49 |
  50 |
  51 |   String bar = doSomething(request, param);
  52 |
  53 |   String fileName = null;
  54 |   java.io.FileOutputStream fos = null;
  55 |
  56 |   try {
  57 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  58 |
> 59 |    fos = new java.io.FileOutputStream(fileName);
  60 |          response.getWriter().println(
  61 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  62 | );
  63 |
  64 |      } catch (Exception e) {
  65 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  66 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  67 |   } finally {
  68 |    if (fos != null) {
  69 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |      if (value.equals(""BenchmarkTest02301"")) {
  53 |       param = name;
  54 |          flag = false;
  55 |      }
  56 |     }
  57 |    }
  58 |   }
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar);
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |      if (value.equals(""BenchmarkTest02302"")) {
  53 |       param = name;
  54 |          flag = false;
  55 |      }
  56 |     }
  57 |    }
  58 |   }
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |    }
   58 |   }
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |         String fileName = null;
   63 |         java.io.FileInputStream fis = null;
   64 |
   65 |         try {
   66 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   68 |           byte[] b = new byte[1000];
   69 |           int size = fis.read(b);
   70 |           response.getWriter().println(
   71 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |           );
   74 |         } catch (Exception e) {
   75 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 |             response.getWriter().println(
   77 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |
   58 |
   59 |
   60 | doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileInputStream fis = null;
   64 |
   65 |
   66 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |  new java.io.FileInputStream(new java.io.File(fileName));
   68 | ] b = new byte[1000];
   69 | ize = fis.read(b);
   70 | nse.getWriter().println(
   71 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |
   74 |  (Exception e) {
   75 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 | ponse.getWriter().println(
   77 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |    }
   58 |   }
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02464.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,51,"
  41 |   response.setContentType(""text/html;charset=UTF-8"");
  42 |
  43 |   String[] values = request.getParameterValues(""BenchmarkTest02464"");
  44 |   String param;
  45 |   if (values != null && values.length > 0)
  46 |     param = values[0];
  47 |   else param = """";
  48 |
  49 |   String bar = doSomething(request, param);
  50 |
> 51 |   java.io.File fileTarget = new java.io.File(bar);
  52 |   response.getWriter().println(
  53 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  54 | );
  55 |   if (fileTarget.exists()) {
  56 |    response.getWriter().println(
  57 | "" And file already exists.""
  58 | );
  59 |   } else { response.getWriter().println(
  60 | "" But file doesn't exist yet.""
  61 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 |     param = values[0];
  47 |   else param = """";
  48 |
  49 |   String bar = doSomething(request, param);
  50 |
  51 |         String fileName = null;
  52 |         java.io.FileInputStream fis = null;
  53 |
  54 |         try {
  55 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 56 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
  57 |           byte[] b = new byte[1000];
  58 |           int size = fis.read(b);
  59 |           response.getWriter().println(
  60 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  61 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  62 |           );
  63 |         } catch (Exception e) {
  64 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  65 |             response.getWriter().println(
  66 |               ""Problem getting FileInputStream: ""
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
  46 | ues[0];
  47 | """";
  48 |
  49 | doSomething(request, param);
  50 |
  51 | fileName = null;
  52 | .FileInputStream fis = null;
  53 |
  54 |
  55 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
> 56 |  new java.io.FileInputStream(new java.io.File(fileName));
  57 | ] b = new byte[1000];
  58 | ize = fis.read(b);
  59 | nse.getWriter().println(
  60 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  61 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
  62 |
  63 |  (Exception e) {
  64 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
  65 | ponse.getWriter().println(
  66 | Problem getting FileInputStream: ""
     ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
   46 |     param = values[0];
   47 |   else param = """";
   48 |
   49 |   String bar = doSomething(request, param);
   50 |
   51 |         String fileName = null;
   52 |         java.io.FileInputStream fis = null;
   53 |
   54 |         try {
   55 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  56 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   57 |           byte[] b = new byte[1000];
   58 |           int size = fis.read(b);
   59 |           response.getWriter().println(
   60 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   61 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   62 |           );
   63 |         } catch (Exception e) {
   64 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   65 |             response.getWriter().println(
   66 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
   46 | ues[0];
   47 | """";
   48 |
   49 | doSomething(request, param);
   50 |
   51 | fileName = null;
   52 | .FileInputStream fis = null;
   53 |
   54 |
   55 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  56 |  new java.io.FileInputStream(new java.io.File(fileName));
   57 | ] b = new byte[1000];
   58 | ize = fis.read(b);
   59 | nse.getWriter().println(
   60 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   61 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   62 |
   63 |  (Exception e) {
   64 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   65 | ponse.getWriter().println(
   66 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02467.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,56,"
   46 |     param = values[0];
   47 |   else param = """";
   48 |
   49 |   String bar = doSomething(request, param);
   50 |
   51 |   String fileName = null;
   52 |   java.io.FileInputStream fis = null;
   53 |
   54 |   try {
   55 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  56 |    fis = new java.io.FileInputStream(fileName);
   57 |    byte[] b = new byte[1000];
   58 |    int size = fis.read(b);
   59 |    response.getWriter().println(
   60 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   61 | );
   62 |    response.getWriter().println(
   63 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   64 | );
   65 |   } catch (Exception e) {
   66 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,61,"
  51 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  52 |
  53 |
  54 | e the file first so the test won't throw an exception if it doesn't exist.
  55 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  56 | vuln, rather than the File signature we are trying to actually test.
  57 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  58 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  59 |
  60 |
> 61 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  62 |   new java.io.FileInputStream(fileName).getFD());
  63 |
  64 | sponse.getWriter().println(
  65 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  66 |
  67 |
  68 | Exception e) {
  69 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  70 |
  71 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |
  53 |   try (
  54 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  55 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  56 |    // as a vuln, rather than the File signature we are trying to actually test.
  57 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  58 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  59 |
  60 |
  61 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 62 |              new java.io.FileInputStream(fileName).getFD());
  63 |      ) {
  64 |          response.getWriter().println(
  65 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  66 | );
  67 |
  68 |   } catch (Exception e) {
  69 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  70 |   }
  71 |  }  // end doPost
  72 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,57,"
  47 |   else param = """";
  48 |
  49 |   String bar = doSomething(request, param);
  50 |
  51 |   String fileName = null;
  52 |   java.io.FileOutputStream fos = null;
  53 |
  54 |   try {
  55 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  56 |
> 57 |    fos = new java.io.FileOutputStream(fileName, false);
  58 |          response.getWriter().println(
  59 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  60 | );
  61 |
  62 |   } catch (Exception e) {
  63 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  64 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  65 |   } finally {
  66 |    if (fos != null) {
  67 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02470.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,57,"
  47 |   else param = """";
  48 |
  49 |   String bar = doSomething(request, param);
  50 |
  51 |   String fileName = null;
  52 |   java.io.FileOutputStream fos = null;
  53 |
  54 |   try {
  55 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  56 |
> 57 |    fos = new java.io.FileOutputStream(fileName, false);
  58 |          response.getWriter().println(
  59 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  60 | );
  61 |
  62 |   } catch (Exception e) {
  63 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  64 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  65 |   } finally {
  66 |    if (fos != null) {
  67 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |   String param = queryString.substring(paramLoc + paramval.length()); // 1st assume ""BenchmarkTest02555"" param is last pa
  53 |   // And then check to see if its in the middle of the query string and if so, trim off what comes after.
  54 |   int ampersandLoc = queryString.indexOf(""&"", paramLoc);
  55 |   if (ampersandLoc != -1) {
  56 |    param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
  57 |   }
  58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar);
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |   String param = queryString.substring(paramLoc + paramval.length()); // 1st assume ""BenchmarkTest02556"" param is last pa
  53 |   // And then check to see if its in the middle of the query string and if so, trim off what comes after.
  54 |   int ampersandLoc = queryString.indexOf(""&"", paramLoc);
  55 |   if (ampersandLoc != -1) {
  56 |    param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
  57 |   }
  58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar);
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |   String param = queryString.substring(paramLoc + paramval.length()); // 1st assume ""BenchmarkTest02557"" param is last pa
  53 |   // And then check to see if its in the middle of the query string and if so, trim off what comes after.
  54 |   int ampersandLoc = queryString.indexOf(""&"", paramLoc);
  55 |   if (ampersandLoc != -1) {
  56 |    param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
  57 |   }
  58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02558.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,62,"
  52 |   String param = queryString.substring(paramLoc + paramval.length()); // 1st assume ""BenchmarkTest02558"" param is last pa
  53 |   // And then check to see if its in the middle of the query string and if so, trim off what comes after.
  54 |   int ampersandLoc = queryString.indexOf(""&"", paramLoc);
  55 |   if (ampersandLoc != -1) {
  56 |    param = queryString.substring(paramLoc + paramval.length(), ampersandLoc);
  57 |   }
  58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
> 62 |   java.io.File fileTarget = new java.io.File(bar, ""/Test.txt"");
  63 |   response.getWriter().println(
  64 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  65 | );
  66 |   if (fileTarget.exists()) {
  67 |    response.getWriter().println(
  68 | "" And file already exists.""
  69 | );
  70 |   } else { response.getWriter().println(
  71 | "" But file doesn't exist yet.""
  72 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
  63 |   // Mac requires an extra slash for some reason.
  64 |   String startURIslashes = """";
  65 |         if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  66 |          if (System.getProperty(""os.name"").indexOf(""Windows"") != -1)
  67 |           startURIslashes = ""/"";
  68 |          else startURIslashes = ""//"";
  69 |
  70 |   try {
  71 |    java.net.URI fileURI = new java.net.URI(""file:"" + startURIslashes
  72 |     + org.owasp.benchmark.helpers.Utils.TESTFILES_DIR.replace('\\', '/').replace(' ', '_') + bar);
> 73 |    java.io.File fileTarget = new java.io.File(fileURI);
  74 |    response.getWriter().println(
  75 | ""Access to file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileTarget.toString()) + ""' created.""
  76 | );
  77 |    if (fileTarget.exists()) {
  78 |     response.getWriter().println(
  79 | "" And file already exists.""
  80 | );
  81 |    } else { response.getWriter().println(
  82 | "" But file doesn't exist yet.""
  83 | ); }
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |         String fileName = null;
   63 |         java.io.FileInputStream fis = null;
   64 |
   65 |         try {
   66 |           fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |           fis = new java.io.FileInputStream(new java.io.File(fileName));
   68 |           byte[] b = new byte[1000];
   69 |           int size = fis.read(b);
   70 |           response.getWriter().println(
   71 |             ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |               + ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |           );
   74 |         } catch (Exception e) {
   75 |             System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 |             response.getWriter().println(
   77 |               ""Problem getting FileInputStream: ""
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |
   58 | net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileInputStream fis = null;
   64 |
   65 |
   66 | ame = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |  new java.io.FileInputStream(new java.io.File(fileName));
   68 | ] b = new byte[1000];
   69 | ize = fis.read(b);
   70 | nse.getWriter().println(
   71 | e beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   72 |  ""' is:\n\n"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   73 |
   74 |  (Exception e) {
   75 | tem.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
   76 | ponse.getWriter().println(
   77 | Problem getting FileInputStream: ""
      ^ Col 15
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,67,"
   57 |   }
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileInputStream fis = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
>  67 |    fis = new java.io.FileInputStream(fileName);
   68 |    byte[] b = new byte[1000];
   69 |    int size = fis.read(b);
   70 |    response.getWriter().println(
   71 | ""The beginning of file: '"" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName) + ""' is:\n\n""
   72 | );
   73 |    response.getWriter().println(
   74 | org.owasp.esapi.ESAPI.encoder().encodeForHTML(new String(b,0,size))
   75 | );
   76 |   } catch (Exception e) {
   77 |    System.out.println(""Couldn't open FileInputStream on file: '"" + fileName + ""'"");
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02563.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |  java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | bar = doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |   } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |  java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 | bar = doSomething(request, param);
   61 |
   62 | fileName = null;
   63 | .FileOutputStream fos = null;
   64 |
   65 |
   66 | me = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 | new java.io.FileOutputStream(new java.io.File(fileName),false);
   69 | response.getWriter().println(
   70 | eady to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 |
   72 |
   73 |  (Exception e) {
   74 | .out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | em.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 | ly {
   77 | s != null) {
   78 |
      ^ Col 9
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
  62 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  63 |
  64 |
  65 | e the file first so the test won't throw an exception if it doesn't exist.
  66 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
  67 | vuln, rather than the File signature we are trying to actually test.
  68 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
  69 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  70 |
  71 |
> 72 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
  73 |   new java.io.FileInputStream(fileName).getFD());
  74 |
  75 | sponse.getWriter().println(
  76 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  77 |
  78 |
  79 | Exception e) {
  80 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  81 |
  82 | doPost
     ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
  63 |
  64 |   try (
  65 |    // Create the file first so the test won't throw an exception if it doesn't exist.
  66 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
  67 |    // as a vuln, rather than the File signature we are trying to actually test.
  68 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
  69 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
  70 |
  71 |
  72 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
> 73 |              new java.io.FileInputStream(fileName).getFD());
  74 |      ) {
  75 |          response.getWriter().println(
  76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  77 | );
  78 |
  79 |   } catch (Exception e) {
  80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  81 |   }
  82 |  }  // end doPost
  83 |
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,72,"
   62 | leName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   63 |
   64 |
   65 | e the file first so the test won't throw an exception if it doesn't exist.
   66 |  Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 | vuln, rather than the File signature we are trying to actually test.
   68 | cessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 | va.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
>  72 | va.io.FileOutputStream fos = new java.io.FileOutputStream(
   73 |   new java.io.FileInputStream(fileName).getFD());
   74 |
   75 | sponse.getWriter().println(
   76 | dy to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 |
   78 |
   79 | Exception e) {
   80 | ut.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |
   82 | doPost
      ^ Col 11
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02566.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,73,"
   63 |
   64 |   try (
   65 |    // Create the file first so the test won't throw an exception if it doesn't exist.
   66 |    // Note: Don't actually do this because this method signature could cause a tool to find THIS file constructor
   67 |    // as a vuln, rather than the File signature we are trying to actually test.
   68 |    // If necessary, just run the benchmark twice. The 1st run should create all the necessary files.
   69 |    //new java.io.File(org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar).createNewFile();
   70 |
   71 |
   72 |          java.io.FileOutputStream fos = new java.io.FileOutputStream(
>  73 |              new java.io.FileInputStream(fileName).getFD());
   74 |      ) {
   75 |          response.getWriter().println(
   76 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   77 | );
   78 |
   79 |   } catch (Exception e) {
   80 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   81 |   }
   82 |  }  // end doPost
   83 |
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
  58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
  59 |
  60 |   String bar = doSomething(request, param);
  61 |
  62 |   String fileName = null;
  63 |   java.io.FileOutputStream fos = null;
  64 |
  65 |   try {
  66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
  67 |
> 68 |    fos = new java.io.FileOutputStream(fileName, false);
  69 |          response.getWriter().println(
  70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
  71 | );
  72 |
  73 |   } catch (Exception e) {
  74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
  75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
  76 |   } finally {
  77 |    if (fos != null) {
  78 |     try {
     ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02568.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |      } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,The application has functionality vulnerable to path traversal in OWASP/src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,68,"
   58 |   param = java.net.URLDecoder.decode(param, ""UTF-8"");
   59 |
   60 |   String bar = doSomething(request, param);
   61 |
   62 |   String fileName = null;
   63 |   java.io.FileOutputStream fos = null;
   64 |
   65 |   try {
   66 |    fileName = org.owasp.benchmark.helpers.Utils.TESTFILES_DIR + bar;
   67 |
>  68 |    fos = new java.io.FileOutputStream(fileName);
   69 |          response.getWriter().println(
   70 |    ""Now ready to write to file: "" + org.owasp.esapi.ESAPI.encoder().encodeForHTML(fileName)
   71 | );
   72 |
   73 |      } catch (Exception e) {
   74 |    System.out.println(""Couldn't open FileOutputStream on file: '"" + fileName + ""'"");
   75 | //   System.out.println(""File exception caught and swallowed: "" + e.getMessage());
   76 |   } finally {
   77 |    if (fos != null) {
   78 |     try {
      ^ Col 0
",java.java_unsafe_path_traversal
Summary: 232 vulnerabilities were found in your targets.