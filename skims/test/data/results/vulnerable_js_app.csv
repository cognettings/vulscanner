title,cwe,description,cvss,finding,stream,kind,where,snippet,method
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test019.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | import { readFile } from ""fs"";
   4 |
   5 | router.get(""/test019/:user/:fileName"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var fileName = req.params[""fileName""];
   8 |   var filePath = ""target/user_files/"" + user + ""/"" + fileName;
>  9 |   readFile(filePath, ""utf-8"", (err, data) => {
  10 |     if (err) {
  11 |       res.status(""404"").json({
  12 |         error: ""file does not exists "",
  13 |       });
  14 |     }
  15 |     res.send(data);
  16 |   });
  17 | });
  18 |
  19 | export default router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test020.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,9,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 |
   5 | router.get(""/test020/:user/:fileName"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var fileName = req.params[""fileName""];
   8 |   var filePath = `target/user_files/${user}/${fileName}`;
>  9 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  10 |     if (err) {
  11 |       res.status(""404"").json({
  12 |         error: ""file does not exists "",
  13 |       });
  14 |     }
  15 |     res.send(data);
  16 |   });
  17 | });
  18 |
  19 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test021.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,9,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 |
   5 | router.get(""/test021/"", function (req, res) {
   6 |   var user = req.query[""user""];
   7 |   var fileName = req.query[""fileName""];
   8 |   var filePath = `target/user_files/${user}/${fileName}`;
>  9 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  10 |     if (err) {
  11 |       res.status(""404"").json({
  12 |         error: ""file does not exists "",
  13 |       });
  14 |     }
  15 |     res.send(data);
  16 |   });
  17 | });
  18 |
  19 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test022.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,9,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 |
   5 | router.get(""/test022/"", function (req, res) {
   6 |   var user = req.query[""user""];
   7 |   var fileName = req.query[""fileName""];
   8 |   var filePath = `target/user_files/${user}/${fileName}.yaml`;
>  9 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  10 |     if (err) {
  11 |       res.status(""404"").json({
  12 |         error: ""file does not exists "",
  13 |       });
  14 |     }
  15 |     res.send(data);
  16 |   });
  17 | });
  18 |
  19 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test023.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,9,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 |
   5 | router.get(""/test023/"", function (req, res) {
   6 |   var user = req.query[""user""];
   7 |   var fileName = req.query[""fileName""];
   8 |   var filePath = ""target/user_files/"" + user + ""/"" + fileName + "".yaml"";
>  9 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  10 |     if (err) {
  11 |       res.status(""404"").json({
  12 |         error: ""file does not exists "",
  13 |       });
  14 |     }
  15 |     res.send(data);
  16 |   });
  17 | });
  18 |
  19 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test024.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 |
   5 | router.get(""/test024/"", function (req, res) {
   6 |   var user = req.query[""user""];
   7 |   var fileName = req.query[""fileName""];
   8 |   if (fileName.includes("".."")) {
   9 |     res.status(403).json({
  10 |       error: ""unauthorized user"",
  11 |     });
  12 |   }
  13 |   var filePath = ""target/user_files/"" + user + ""/"" + fileName + "".yaml"";
> 14 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  15 |     if (err) {
  16 |       res.status(""404"").json({
  17 |         error: ""file does not exists "",
  18 |       });
  19 |     }
  20 |     res.send(data);
  21 |   });
  22 | });
  23 |
  24 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test025.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | import { readFile } from ""fs"";
   4 | import { join } from ""path"";
   5 |
   6 | router.get(""/test025/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target"", ""user_files"", user, fileName);
> 10 |   readFile(filePath, ""utf-8"", (err, data) => {
  11 |     if (err) {
  12 |       res.status(""404"").json({
  13 |         error: ""file does not exists "",
  14 |       });
  15 |     }
  16 |     res.send(data);
  17 |   });
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test026.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,10,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 | const path = require(""path"");
   5 |
   6 | router.get(""/test026/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = path.join(""target/user_files"", user, fileName);
> 10 |   fs.readFile(filePath, ""utf-8"", (err, data) => {
  11 |     if (err) {
  12 |       res.status(""404"").json({
  13 |         error: ""file does not exists "",
  14 |       });
  15 |     }
  16 |     res.send(data);
  17 |   });
  18 | });
  19 |
  20 | module.exports = router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test027.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | import { readFile } from ""fs"";
   4 | import { join } from ""path"";
   5 |
   6 | router.get(""/test027/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, `${fileName}.yaml`);
> 10 |   readFile(filePath, ""utf-8"", (err, data) => {
  11 |     if (err) {
  12 |       res.status(""404"").json({
  13 |         error: ""file does not exists "",
  14 |       });
  15 |     }
  16 |     res.send(data);
  17 |   });
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test029.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test029/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = path.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test030.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test030/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test031.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test031/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, fileName + "".yaml"");
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test032.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,16,"
   6 | router.delete(""/test032/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
  15 |     if (2 > -4) {
> 16 |       fs.unlinkSync(filePath);
  17 |     }
  18 |     result.ok = true;
  19 |   } catch (error) {
  20 |     result[""ok""] = false;
  21 |     result[""errors""] = [
  22 |       {
  23 |         message: error,
  24 |       },
  25 |     ];
  26 |   }
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test033.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test033/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = path.join(""target/user_files"", user, `${fileName}`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test034.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test034/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test035.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test035/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test036.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test036/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test037.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,16,"
   6 | router.delete(""/test037/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
  15 |     if (2 > -4) {
> 16 |       fs.unlinkSync(filePath);
  17 |     }
  18 |     result.ok = true;
  19 |   } catch (error) {
  20 |     result[""ok""] = false;
  21 |     result[""errors""] = [
  22 |       {
  23 |         message: error,
  24 |       },
  25 |     ];
  26 |   }
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test038.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,16,"
   6 | router.get(""/test038"", function (req, res) {
   7 |   let body = req.body;
   8 |   var user = body[""user""];
   9 |   var fileName = body[""fileName""];
  10 |   var filePath = join(""target/user_files"", user, fileName);
  11 |
  12 |   let result = {
  13 |     ok: false,
  14 |   };
  15 |   try {
> 16 |     unlinkSync(filePath);
  17 |     result.ok = true;
  18 |   } catch (error) {
  19 |     result[""ok""] = false;
  20 |     result[""errors""] = [
  21 |       {
  22 |         message: error,
  23 |       },
  24 |     ];
  25 |   }
  26 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test039.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 |
   5 | router.delete(""/test039/:user/:fileName"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var fileName = req.params[""fileName""];
   8 |   var filePath = ""target/user_files/"" + user + `/${fileName}.yaml`;
   9 |
  10 |   let result = {
  11 |     ok: false,
  12 |   };
  13 |   try {
> 14 |     fs.unlinkSync(filePath);
  15 |     result.ok = true;
  16 |   } catch (error) {
  17 |     result[""ok""] = false;
  18 |     result[""errors""] = [
  19 |       {
  20 |         message: error,
  21 |       },
  22 |     ];
  23 |   }
  24 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test040.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,13,"
   3 | const fs = require(""fs"");
   4 |
   5 | router.delete(""/test040/:user/:fileName"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var fileName = req.params[""fileName""];
   8 |
   9 |   let result = {
  10 |     ok: false,
  11 |   };
  12 |   try {
> 13 |     fs.unlinkSync(""target/user_files/"" + user + `/${fileName}.yaml`);
  14 |     result.ok = true;
  15 |   } catch (error) {
  16 |     result[""ok""] = false;
  17 |     result[""errors""] = [
  18 |       {
  19 |         message: error,
  20 |       },
  21 |     ];
  22 |   }
  23 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test041.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test041/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = ""target/user_files/"" + user + ""/"" + fileName + "".yaml"";
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   try {
> 15 |     fs.unlinkSync(filePath);
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
  25 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test042.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 |
   5 | router.delete(""/test042/:user/:fileName"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var fileName = req.params[""fileName""];
   8 |
   9 |   let result = {
  10 |     ok: false,
  11 |   };
  12 |   try {
  13 |     if (2 > -4) {
> 14 |       fs.unlinkSync(""target/user_files/"" + user + `/${fileName}.yaml`);
  15 |     }
  16 |     result.ok = true;
  17 |   } catch (error) {
  18 |     result[""ok""] = false;
  19 |     result[""errors""] = [
  20 |       {
  21 |         message: error,
  22 |       },
  23 |     ];
  24 |   }
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test043.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 | const path = require(""path"");
   5 |
   6 | router.delete(""/test043/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |
  10 |   let result = {
  11 |     ok: false,
  12 |   };
  13 |   try {
> 14 |     fs.unlinkSync(""target/user_files/"" + user + `/${fileName}`);
  15 |     result.ok = true;
  16 |   } catch (error) {
  17 |     result[""ok""] = false;
  18 |     result[""errors""] = [
  19 |       {
  20 |         message: error,
  21 |       },
  22 |     ];
  23 |   }
  24 |   res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test044.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test044/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   if (2 > -4) {
> 15 |     fs.unlink(filePath, (err) => {
  16 |       result.ok = true;
  17 |       if (err) {
  18 |         result[""ok""] = false;
  19 |         result[""errors""] = [
  20 |           {
  21 |             message: err,
  22 |           },
  23 |         ];
  24 |       }
  25 |       res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test045.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 | const path = require(""path"");
   5 |
   6 | router.delete(""/test045/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = path.join(""target/user_files"", user, `${fileName}`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
> 14 |   fs.unlink(filePath, (error) => {
  15 |     result.ok = true;
  16 |     if (error) {
  17 |       result[""ok""] = false;
  18 |       result[""errors""] = [
  19 |         {
  20 |           message: error,
  21 |         },
  22 |       ];
  23 |     }
  24 |     res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test046.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 | var router = Router();
   5 |
   6 | router.delete(""/test046/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
> 14 |   unlink(filePath, (error) => {
  15 |     result.ok = true;
  16 |     if (error) {
  17 |       result[""ok""] = false;
  18 |       result[""errors""] = [
  19 |         {
  20 |           message: error,
  21 |         },
  22 |       ];
  23 |     }
  24 |     res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test047.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 | var router = Router();
   5 |
   6 | router.delete(""/test047/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
> 14 |   unlink(filePath, (error) => {
  15 |     result.ok = true;
  16 |     if (error) {
  17 |       result[""ok""] = false;
  18 |       result[""errors""] = [
  19 |         {
  20 |           message: error,
  21 |         },
  22 |       ];
  23 |     }
  24 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test048.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,14,"
   4 | var router = Router();
   5 |
   6 | router.delete(""/test048/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = join(""target/user_files"", user, fileName);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
> 14 |   fs.unlink(filePath, (error) => {
  15 |     result.ok = true;
  16 |     if (error) {
  17 |       result[""ok""] = false;
  18 |       result[""errors""] = [
  19 |         {
  20 |           message: error,
  21 |         },
  22 |       ];
  23 |     }
  24 |     res.send(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test049.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,15,"
   5 |
   6 | router.delete(""/test049/:user/:fileName"", function (req, res) {
   7 |   var user = req.params[""user""];
   8 |   var fileName = req.params[""fileName""];
   9 |   var filePath = pathh.join(""target/user_files"", user, `${fileName}.yaml`);
  10 |
  11 |   let result = {
  12 |     ok: false,
  13 |   };
  14 |   if (2 > -4) {
> 15 |     fs.unlink(filePath, (error) => {
  16 |       result.ok = true;
  17 |       if (error) {
  18 |         result[""ok""] = false;
  19 |         result[""errors""] = [
  20 |           {
  21 |             message: error,
  22 |           },
  23 |         ];
  24 |       }
  25 |       res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test050.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,18,"
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |   var filePath = join(""target/user_files"", user, file);
  13 |
  14 |   let result = {
  15 |     ok: false,
  16 |   };
  17 |   try {
> 18 |     writeFileSync(filePath, payload, ""utf8"");
  19 |     result.ok = true;
  20 |   } catch (error) {
  21 |     result.ok = false;
  22 |     result[""errors""] = [
  23 |       {
  24 |         message: error,
  25 |       },
  26 |     ];
  27 |   }
  28 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test051.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   let body = req.body;
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   try {
> 17 |     fileSystem.writeFileSync(
  18 |       `target/user_files/${user}/${file}`,
  19 |       payload,
  20 |       ""utf8""
  21 |     );
  22 |     result.ok = true;
  23 |   } catch (error) {
  24 |     result.ok = false;
  25 |     result[""errors""] = [
  26 |       {
  27 |         message: error,
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test052.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,21,"
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let data = {
  17 |     write: false,
  18 |   };
  19 |   if (data.write) {
  20 |     try {
> 21 |       fileSystem.writeFileSync(
  22 |         `target/user_files/${user}/${file}`,
  23 |         payload,
  24 |         ""utf8""
  25 |       );
  26 |       result.ok = true;
  27 |     } catch (error) {
  28 |       result.ok = false;
  29 |       result[""errors""] = [
  30 |         {
  31 |           message: error,
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test053.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,19,"
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, `${file}` + "".yaml"");
  17 |   if (53 > 43) {
  18 |     try {
> 19 |       fileSystem.writeFileSync(filePath, payload, ""utf8"");
  20 |       result.ok = true;
  21 |     } catch (error) {
  22 |       result.ok = false;
  23 |       result[""errors""] = [
  24 |         {
  25 |           message: error,
  26 |         },
  27 |       ];
  28 |     }
  29 |   }
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test054.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,19,"
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
  17 |   console.log(filePath);
  18 |   try {
> 19 |     fileSystem.writeFileSync(filePath, payload, ""utf8"");
  20 |     result.ok = true;
  21 |   } catch (error) {
  22 |     result.ok = false;
  23 |     result[""errors""] = [
  24 |       {
  25 |         message: error,
  26 |       },
  27 |     ];
  28 |   }
  29 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test055.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,18,"
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
  17 |   try {
> 18 |     fileSystem.writeFileSync(filePath, payload, ""utf8"");
  19 |     result.ok = true;
  20 |   } catch (error) {
  21 |     result.ok = false;
  22 |     result[""errors""] = [
  23 |       {
  24 |         message: error,
  25 |       },
  26 |     ];
  27 |   }
  28 |   res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test056.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   let body = req.body;
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |   var filePath = join(""target/user_files"", user, file);
  13 |
  14 |   let result = {
  15 |     ok: false,
  16 |   };
> 17 |   writeFile(filePath, payload, ""utf8"", (error) => {
  18 |     result.ok = true;
  19 |     if (error) {
  20 |       result.ok = false;
  21 |       result[""errors""] = [
  22 |         {
  23 |           message: error,
  24 |         },
  25 |       ];
  26 |     }
  27 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test057.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   let body = req.body;
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |
> 17 |   fileSystem.writeFile(
  18 |     `target/user_files/${user}/${file}`,
  19 |     payload,
  20 |     ""utf8"",
  21 |     (error) => {
  22 |       result.ok = true;
  23 |       if (error) {
  24 |         result.ok = false;
  25 |         result[""errors""] = [
  26 |           {
  27 |             message: error,
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test058.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,20,"
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let data = {
  17 |     write: false,
  18 |   };
  19 |   if (data.write) {
> 20 |     fileSystem.writeFile(
  21 |       `target/user_files/${user}/${file}`,
  22 |       payload,
  23 |       ""utf8"",
  24 |       function (error) {
  25 |         result.ok = true;
  26 |         if (errors) {
  27 |           result.ok = false;
  28 |           result[""errors""] = [
  29 |             {
  30 |               message: error,
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test059.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,18,"
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, `${file}` + "".yaml"");
  17 |   if (53 > 43) {
> 18 |     fileSystem.writeFile(filePath, payload, ""utf8"", function (error) {
  19 |       result.ok = true;
  20 |       if (error) {
  21 |         result.ok = false;
  22 |         result[""errors""] = [
  23 |           {
  24 |             message: error,
  25 |           },
  26 |         ];
  27 |       }
  28 |       res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test060.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   let body = req.body;
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
> 17 |   fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  18 |     result.ok = true;
  19 |     if (errors) {
  20 |       result.ok = false;
  21 |       result[""errors""] = [
  22 |         {
  23 |           message: error,
  24 |         },
  25 |       ];
  26 |     }
  27 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test061.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   let body = req.body;
   8 |
   9 |   let user = body.user;
  10 |   let file = body.fileName;
  11 |   let payload = body.payload;
  12 |
  13 |   let result = {
  14 |     ok: false,
  15 |   };
  16 |   let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
> 17 |   fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  18 |     result.ok = true;
  19 |     if (error) {
  20 |       result.ok = false;
  21 |       result[""errors""] = [
  22 |         {
  23 |           message: error,
  24 |         },
  25 |       ];
  26 |     }
  27 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test062.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,21,"
  11 |
  12 |   let userFiles = ""./target/user_files/"";
  13 |   const testFolder = ""./target/user_files/"";
  14 |
  15 |   let result = {
  16 |     ok: false,
  17 |   };
  18 |   let users = Array.from(fileSystem.readdirSync(userFiles).values());
  19 |   if (users.includes(user)) {
  20 |     let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
> 21 |     fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  22 |       result.ok = true;
  23 |       if (error) {
  24 |         result.ok = false;
  25 |         result[""errors""] = [
  26 |           {
  27 |             message: error,
  28 |           },
  29 |         ];
  30 |       }
  31 |       res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test063.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,20,"
  10 |   let payload = body.payload;
  11 |
  12 |   let usersFiles = ""./target/user_files"";
  13 |
  14 |   let result = {
  15 |     ok: false,
  16 |   };
  17 |   let users = Array.from(fileSystem.readdirSync(usersFiles).values());
  18 |   if (users.includes(user)) {
  19 |     let userFiles = Array.from(
> 20 |       fileSystem.readdirSync(`${usersFiles}/${user}/`).values()
  21 |     );
  22 |     if (userFiles.includes(file)) {
  23 |       let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
  24 |       fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  25 |         result.ok = true;
  26 |         if (error) {
  27 |           result.ok = false;
  28 |           result[""errors""] = [
  29 |             {
  30 |               message: error,
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test063.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,24,"
  14 |   let result = {
  15 |     ok: false,
  16 |   };
  17 |   let users = Array.from(fileSystem.readdirSync(usersFiles).values());
  18 |   if (users.includes(user)) {
  19 |     let userFiles = Array.from(
  20 |       fileSystem.readdirSync(`${usersFiles}/${user}/`).values()
  21 |     );
  22 |     if (userFiles.includes(file)) {
  23 |       let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
> 24 |       fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  25 |         result.ok = true;
  26 |         if (error) {
  27 |           result.ok = false;
  28 |           result[""errors""] = [
  29 |             {
  30 |               message: error,
  31 |             },
  32 |           ];
  33 |         } else {
  34 |           res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test069.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,17,"
   7 |   var bar = ""alsosafe"";
   8 |   var valuesList = [];
   9 |   valuesList.push(""safe"");
  10 |   valuesList.push(user);
  11 |   valuesList.push(""moresafe"");
  12 |   valuesList.shift();
  13 |   bar = valuesList[1];
  14 |
  15 |   let userFiles = ""./target/user_files/"";
  16 |   var filePath = userFiles + bar;
> 17 |   fs.readdir(filePath, (error, files) => {
  18 |     if (error) {
  19 |       res.status(""404"").json({
  20 |         error: `the file ${filePath} does no exist`,
  21 |       });
  22 |     } else {
  23 |       res.json({ user_files: files });
  24 |     }
  25 |   });
  26 | });
  27 |
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test070.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,10,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 | const fs = require(""fs"");
   4 |
   5 | router.get(""/test070/"", function (req, res) {
   6 |   var user = req.query[""user""];
   7 |   var fileName = req.query[""fileName""];
   8 |   var filePath = `target/user_files/${user}/${fileName}.yaml`;
   9 |   if (user && fileName) {
> 10 |     fs.readFile(filePath, ""utf-8"", (err, data) => {
  11 |       if (err) {
  12 |         res.status(""404"").json({
  13 |           error: ""file does not exists "",
  14 |         });
  15 |       }
  16 |       res.send(data);
  17 |     });
  18 |   } else {
  19 |     res.status(""404"").json({
  20 |       error: ""file does not exists "",
  21 |     });
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test072.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,20,"
  10 |   let payload = body.payload;
  11 |
  12 |   let usersFiles = ""./target/user_files"";
  13 |
  14 |   let result = {
  15 |     ok: false,
  16 |   };
  17 |   let users = Array.from(fileSystem.readdirSync(usersFiles).values());
  18 |   if (users.includes(user)) {
  19 |     let filePath = join(`target/user_files/${user}/`, file + "".yaml"");
> 20 |     fileSystem.writeFile(filePath, payload, ""utf8"", (error) => {
  21 |       result.ok = true;
  22 |       if (error) {
  23 |         result.ok = false;
  24 |         result[""errors""] = [
  25 |           {
  26 |             message: error,
  27 |           },
  28 |         ];
  29 |       } else {
  30 |         res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test073.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,16,"
   6 |   var user = req.params[""user""];
   7 |   var bar = ""alsosafe"";
   8 |   var valuesList = [];
   9 |   valuesList.push(""safe"");
  10 |   valuesList.push(user);
  11 |   valuesList.push(""moresafe"");
  12 |   bar = valuesList[1];
  13 |
  14 |   let userFiles = ""./target/user_files/"";
  15 |   var filePath = userFiles + bar;
> 16 |   fs.readdir(filePath, (error, files) => {
  17 |     if (error) {
  18 |       res.status(""404"").json({
  19 |         error: `the file ${filePath} does no exist`,
  20 |       });
  21 |     } else {
  22 |       res.json({ user_files: files });
  23 |     }
  24 |   });
  25 | });
  26 |
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test075.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,20,"
  10 |   let list75 = [""safe"", ""safe"", _user, _fileName];
  11 |   list75.shift();
  12 |   list75.push(""safe"");
  13 |   var fileName = list75[2];
  14 |   var user = list75[1];
  15 |   var filePath = pathh.join(""target/user_files"", user, fileName);
  16 |
  17 |   let result = {
  18 |     ok: false,
  19 |   };
> 20 |   unlink(filePath, (error) => {
  21 |     result.ok = true;
  22 |     if (error) {
  23 |       result[""ok""] = false;
  24 |       result[""errors""] = [
  25 |         {
  26 |           message: error,
  27 |         },
  28 |       ];
  29 |     }
  30 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
063. Lack of data validation - Path Traversal,CWE-22,"User provided data is not correctly sanitized, neutralize or validated for special elements within the pathname. in VULNERABLE_JS_APP/server/routes/testcases/test076.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:P/RL:U/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/063,skims,SAST,23,"
  13 |   list76A.push(""safe"");
  14 |   list76B.pop();
  15 |   let list76C = list76A.concat(list76B);
  16 |   var fileName = list76C[2];
  17 |   var user = list76C[0];
  18 |   var filePath = pathh.join(""target/user_files"", user, fileName);
  19 |
  20 |   let result = {
  21 |     ok: false,
  22 |   };
> 23 |   unlink(filePath, (error) => {
  24 |     result.ok = true;
  25 |     if (error) {
  26 |       result[""ok""] = false;
  27 |       result[""errors""] = [
  28 |         {
  29 |           message: error,
  30 |         },
  31 |       ];
  32 |     }
  33 |     res.json(result);
     ^ Col 0
",javascript.js_insecure_path_traversal
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test104.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test104/:target"", function (req, res) {
   6 |   const algorithm = ""des-ecb"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = Buffer.from(keyString.substring(0, 8), ""utf8"");
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test105.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test105/:target"", function (req, res) {
   6 |   const algorithm = ""des-cbc"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const iv = Buffer.alloc(8);
   9 |   const key = Buffer.from(keyString.substring(0, 8), ""utf8"");
> 10 |   const cipher = crypto.createCipheriv(algorithm, key, iv);
  11 |
  12 |   let parameters = req.params;
  13 |   let target = parameters[""target""];
  14 |
  15 |   let encrypted = """";
  16 |   cipher.on(""readable"", () => {
  17 |     let chunk;
  18 |     while (null !== (chunk = cipher.read())) {
  19 |       encrypted += chunk.toString(""hex"");
  20 |     }
  21 |   });
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test106.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test106/:target"", function (req, res) {
   6 |   const algorithm = ""aes-192-cbc"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const iv = Buffer.alloc(16);
   9 |   const key = crypto.scryptSync(keyString, ""salt"", 24);
> 10 |   const cipher = crypto.createCipheriv(algorithm, key, iv);
  11 |
  12 |   let parameters = req.params;
  13 |   let target = parameters[""target""];
  14 |
  15 |   let encrypted = """";
  16 |   cipher.on(""readable"", () => {
  17 |     let chunk;
  18 |     while (null !== (chunk = cipher.read())) {
  19 |       encrypted += chunk.toString(""hex"");
  20 |     }
  21 |   });
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test107.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test107/:target"", function (req, res) {
   6 |   const algorithm = ""aes-192-ecb"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = crypto.scryptSync(keyString, ""salt"", 24);
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test108.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test108/:target"", function (req, res) {
   6 |   const algorithm = ""rc2-ecb"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = crypto.scryptSync(keyString, ""salt"", 24);
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test109.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test109/:target"", function (req, res) {
   6 |   const algorithm = ""rc2-ecb"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = Buffer.from(keyString.substring(0, 8));
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test110.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,8,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test110/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |   const key = Buffer.from(keyString.substring(0, 8));
>  8 |   const cipher = crypto.createCipheriv(""rc4"", key, """");
   9 |
  10 |   let parameters = req.params;
  11 |   let target = parameters[""target""];
  12 |
  13 |   let encrypted = """";
  14 |   cipher.on(""readable"", () => {
  15 |     let chunk;
  16 |     while (null !== (chunk = cipher.read())) {
  17 |       encrypted += chunk.toString(""hex"");
  18 |     }
  19 |   });
  20 |   cipher.on(""end"", () => {
  21 |     res.json({ encrypted: encrypted });
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test111.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test111/:target"", function (req, res) {
   6 |   const algorithm = ""rc4"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = Buffer.from(keyString.substring(0, 8));
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test112.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test112/:target"", function (req, res) {
   6 |   const algorithm = ""aes-256-ecb"";
   7 |   const keyString = ""*wC!*f--xCFwUaUpLT%eSu2wnJ+ms%aZc"";
   8 |   const key = Buffer.alloc(32, keyString);
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test115.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test115/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.DES.encrypt(target, keyString).toString();
  12 |   res.json({ encrypted: encrypted });
  13 | });
  14 |
  15 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test116.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test116/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.RC4.encrypt(target, keyString).toString();
  12 |   res.json({ encrypted: encrypted });
  13 | });
  14 |
  15 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test117.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test117/:target"", function (req, res) {
   6 |   const algorithm = ""bf-ecb"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const key = Buffer.from(keyString.substring(0, 8), ""utf8"");
>  9 |   const cipher = crypto.createCipheriv(algorithm, key, """");
  10 |
  11 |   let parameters = req.params;
  12 |   let target = parameters[""target""];
  13 |
  14 |   let encrypted = """";
  15 |   cipher.on(""readable"", () => {
  16 |     let chunk;
  17 |     while (null !== (chunk = cipher.read())) {
  18 |       encrypted += chunk.toString(""hex"");
  19 |     }
  20 |   });
  21 |   cipher.on(""end"", () => {
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test118.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test118/:target"", function (req, res) {
   6 |   const algorithm = ""bf-cbc"";
   7 |   const keyString = ""*4wQZgn+U2RW_mb="";
   8 |   const iv = Buffer.alloc(8);
   9 |   const key = Buffer.from(keyString.substring(0, 8), ""utf8"");
> 10 |   const cipher = crypto.createCipheriv(algorithm, key, iv);
  11 |
  12 |   let parameters = req.params;
  13 |   let target = parameters[""target""];
  14 |
  15 |   let encrypted = """";
  16 |   cipher.on(""readable"", () => {
  17 |     let chunk;
  18 |     while (null !== (chunk = cipher.read())) {
  19 |       encrypted += chunk.toString(""hex"");
  20 |     }
  21 |   });
     ^ Col 0
",javascript.javascript_insecure_create_cipher
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test119.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test119/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.AES.encrypt(target, keyString, {
  12 |     mode: CryptoJS.mode.ECB,
  13 |     padding: CryptoJS.pad.NoPadding,
  14 |   }).toString();
  15 |   res.json({ encrypted: encrypted });
  16 | });
  17 |
  18 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test120.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test120/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.AES.encrypt(target, keyString, {
  12 |     mode: CryptoJS.mode.CBC,
  13 |     padding: CryptoJS.pad.Pkcs7,
  14 |   }).toString();
  15 |   res.json({ encrypted: encrypted });
  16 | });
  17 |
  18 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test122.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test120/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.AES.encrypt(target, keyString, {
  12 |     mode: CryptoJS.mode.CBC,
  13 |     padding: CryptoJS.pad.NoPadding,
  14 |   }).toString();
  15 |   res.json({ encrypted: encrypted });
  16 | });
  17 |
  18 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test136.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,11,"
   1 | import { Router } from ""express"";
   2 | var CryptoJS = require(""crypto-js"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test136/:target"", function (req, res) {
   6 |   const keyString = ""*4wQZgn+U2RW_mb="";
   7 |
   8 |   let parameters = req.params;
   9 |   let target = parameters[""target""];
  10 |
> 11 |   let encrypted = CryptoJS.RSA.encrypt(target, keyString, {
  12 |     mode: CryptoJS.mode.ECB,
  13 |     padding: CryptoJS.pad.Pkcs7,
  14 |   }).toString();
  15 |   res.json({ encrypted: encrypted });
  16 | });
  17 |
  18 | export default router;
     ^ Col 0
",javascript.javascript_insecure_encrypt
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test137.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,7,"
   1 | import { Router } from ""express"";
   2 | const { createHash } = require(""crypto"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test137/:target"", function (req, res) {
   6 |   let target = req.params[""target""];
>  7 |   const hash = createHash(""md5-sha1"");
   8 |
   9 |   hash.on(""readable"", () => {
  10 |     const data = hash.read();
  11 |     if (data) {
  12 |       res.json({ hash: data.toString(""hex"") });
  13 |     }
  14 |   });
  15 |   hash.write(target);
  16 |   hash.end();
  17 | });
  18 |
  19 | export default router;
     ^ Col 0
",javascript.javascript_insecure_hash
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test138.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,7,"
   1 | import { Router } from ""express"";
   2 | const crypto = require(""crypto"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test138/:target"", function (req, res) {
   6 |   let target = req.params[""target""];
>  7 |   const hash = crypto.createHash(""sha1"");
   8 |
   9 |   hash.on(""readable"", () => {
  10 |     const data = hash.read();
  11 |     if (data) {
  12 |       res.json({ hash: data.toString(""hex"") });
  13 |     }
  14 |   });
  15 |   hash.write(target);
  16 |   hash.end();
  17 | });
  18 |
  19 | export default router;
     ^ Col 0
",javascript.javascript_insecure_hash
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test139.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,7,"
   1 | import { Router } from ""express"";
   2 | const crypto = require(""crypto"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test139/:target"", function (req, res) {
   6 |   let target = req.params[""target""];
>  7 |   const hash = crypto.createHash(""RSA-MD4"");
   8 |
   9 |   hash.on(""readable"", () => {
  10 |     const data = hash.read();
  11 |     if (data) {
  12 |       res.json({ hash: data.toString(""hex"") });
  13 |     }
  14 |   });
  15 |   hash.write(target);
  16 |   hash.end();
  17 | });
  18 |
  19 | export default router;
     ^ Col 0
",javascript.javascript_insecure_hash
052. Insecure encryption algorithm,CWE-310,Use of insecure encryption algorithm in VULNERABLE_JS_APP/server/routes/testcases/test140.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,7,"
   1 | import { Router } from ""express"";
   2 | const crypto = require(""crypto"");
   3 | var router = Router();
   4 |
   5 | router.get(""/test140/:target"", function (req, res) {
   6 |   let target = req.params[""target""];
>  7 |   const hash = crypto.createHash(""md5"");
   8 |
   9 |   hash.on(""readable"", () => {
  10 |     const data = hash.read();
  11 |     if (data) {
  12 |       res.json({ hash: data.toString(""hex"") });
  13 |     }
  14 |   });
  15 |   hash.write(target);
  16 |   hash.end();
  17 | });
  18 |
  19 | export default router;
     ^ Col 0
",javascript.javascript_insecure_hash
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test121.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | const { generateKeyPair } = require(""crypto"");
   4 |
   5 | router.get(""/test121"", function (req, res) {
>  6 |   generateKeyPair(
   7 |     ""rsa"",
   8 |     {
   9 |       modulusLength: 1024,
  10 |       publicKeyEncoding: {
  11 |         type: ""pkcs1"",
  12 |         format: ""pem"",
  13 |       },
  14 |       privateKeyEncoding: {
  15 |         type: ""pkcs1"",
  16 |         format: ""pem"",
  17 |         //cipher: ""aes-256-cbc"", //Optional
  18 |         //passphrase: """", //Optional
  19 |       },
  20 |     },
  21 |     (err, publicKey, privateKey) => {
     ^ Col 0
",javascript.javascript_insecure_rsa_keypair
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test125.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test125"", function (req, res) {
>  6 |   const bob = crypto.createECDH(""c2pnb163v2"");
   7 |   const bobKey = bob.generateKeys();
   8 |   res.send(bobKey.toString(""hex""));
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ecdh_key
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test126.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test126"", function (req, res) {
>  6 |   const bob = crypto.createECDH(""secp112r2"");
   7 |   const bobKey = bob.generateKeys();
   8 |   res.send(bobKey.toString(""hex""));
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ecdh_key
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test127.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test127"", function (req, res) {
>  6 |   const bob = crypto.createECDH(""c2pnb163v2"");
   7 |   const bobKey = bob.generateKeys();
   8 |   res.send(bobKey.toString(""hex""));
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ecdh_key
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test128.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test128"", function (req, res) {
>  6 |   const bob = crypto.createECDH(""sect193r1"");
   7 |   const bobKey = bob.generateKeys();
   8 |   res.send(bobKey.toString(""hex""));
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ecdh_key
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test129.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | import * as crypto from ""crypto"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test129"", function (req, res) {
>  6 |   const bob = crypto.createECDH(""c2pnb163v2"");
   7 |   const bobKey = bob.generateKeys();
   8 |   res.send(bobKey.toString(""hex""));
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ecdh_key
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test130.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,19,"
   5 | router.get(""/test130"", function (req, res) {
   6 |   let key_options = {
   7 |     modulusLength: 1024,
   8 |     publicKeyEncoding: {
   9 |       type: ""pkcs1"",
  10 |       format: ""pem"",
  11 |     },
  12 |     privateKeyEncoding: {
  13 |       type: ""pkcs1"",
  14 |       format: ""pem"",
  15 |       //cipher: ""aes-256-cbc"", //Optional
  16 |       //passphrase: """", //Optional
  17 |     },
  18 |   };
> 19 |   generateKeyPair(""rsa"", key_options, (err, publicKey, privateKey) => {
  20 |     if (err) console.log(""Error!"", err);
  21 |     res.send(publicKey);
  22 |   });
  23 | });
  24 |
  25 | export default router;
     ^ Col 0
",javascript.javascript_insecure_rsa_keypair
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test131.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,19,"
   5 | router.get(""/test131"", function (req, res) {
   6 |   let key_options = {
   7 |     modulusLength: 512,
   8 |     publicKeyEncoding: {
   9 |       type: ""pkcs1"",
  10 |       format: ""pem"",
  11 |     },
  12 |     privateKeyEncoding: {
  13 |       type: ""pkcs1"",
  14 |       format: ""pem"",
  15 |       //cipher: ""aes-256-cbc"", //Optional
  16 |       //passphrase: """", //Optional
  17 |     },
  18 |   };
> 19 |   generateKeyPair(""rsa"", key_options, (err, publicKey, privateKey) => {
  20 |     if (err) console.log(""Error!"", err);
  21 |     res.send(publicKey);
  22 |   });
  23 | });
  24 |
  25 | export default router;
     ^ Col 0
",javascript.javascript_insecure_rsa_keypair
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test132.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,17,"
   3 | const { generateKeyPair } = require(""crypto"");
   4 |
   5 | router.get(""/test132"", function (req, res) {
   6 |   let key_options = {
   7 |     namedCurve: ""secp192k1"",
   8 |     publicKeyEncoding: {
   9 |       type: ""spki"",
  10 |       format: ""pem"",
  11 |     },
  12 |     privateKeyEncoding: {
  13 |       type: ""pkcs8"",
  14 |       format: ""pem"",
  15 |     },
  16 |   };
> 17 |   generateKeyPair(""ec"", key_options, (err, publicKey, privateKey) => {
  18 |     if (err) console.log(""Error!"", err);
  19 |     res.send(publicKey);
  20 |   });
  21 | });
  22 |
  23 | export default router;
     ^ Col 0
",javascript.javascript_insecure_ec_keypair
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test133.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | const { generateKeyPair } = require(""crypto"");
   4 |
   5 | router.get(""/test133"", function (req, res) {
>  6 |   generateKeyPair(
   7 |     ""ec"",
   8 |     {
   9 |       namedCurve: ""secp192k1"",
  10 |       publicKeyEncoding: {
  11 |         type: ""spki"",
  12 |         format: ""pem"",
  13 |       },
  14 |       privateKeyEncoding: {
  15 |         type: ""pkcs8"",
  16 |         format: ""pem"",
  17 |       },
  18 |     },
  19 |     (err, publicKey, privateKey) => {
  20 |       if (err) console.log(""Error!"", err);
  21 |       res.send(publicKey);
     ^ Col 0
",javascript.javascript_insecure_ec_keypair
052. Insecure encryption algorithm,CWE-310,Use of insecure parameters in VULNERABLE_JS_APP/server/routes/testcases/test134.js,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F/RL:O/RC:C,https://docs.fluidattacks.com/criteria/vulnerabilities/052,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | const { generateKeyPair } = require(""crypto"");
   4 |
   5 | router.get(""/test134"", function (req, res) {
>  6 |   generateKeyPair(
   7 |     ""ec"",
   8 |     {
   9 |       namedCurve: ""secp192k1"",
  10 |       publicKeyEncoding: {
  11 |         type: ""spki"",
  12 |         format: ""pem"",
  13 |       },
  14 |       privateKeyEncoding: {
  15 |         type: ""pkcs8"",
  16 |         format: ""pem"",
  17 |       },
  18 |     },
  19 |     (err, publicKey, privateKey) => {
  20 |       if (err) console.log(""Error!"", err);
  21 |       res.send(publicKey);
     ^ Col 0
",javascript.javascript_insecure_ec_keypair
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test148.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test148"", function (req, res) {
   5 |   let key = Math.random().toString();
>  6 |   res.cookie(""rememberKey"", key);
   7 |   res.json({ ok: true });
   8 | });
   9 |
  10 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test149.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,12,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test149"", function (req, res) {
   5 |   let a = true;
   6 |   let key = """";
   7 |   if (a) {
   8 |     key = ""secureValue"";
   9 |   } else {
  10 |     key = Math.random().toString();
  11 |   }
> 12 |   res.cookie(""rememberKey"", key);
  13 |   res.json({ ok: true });
  14 | });
  15 |
  16 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test150.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,13,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | import { randomInt } from ""crypto"";
   4 |
   5 | router.get(""/test150"", function (req, res) {
   6 |   let a = true;
   7 |   let key = """";
   8 |   if (a) {
   9 |     key = randomInt(0, 10000000).toString();
  10 |   } else {
  11 |     key = Math.random().toString();
  12 |   }
> 13 |   res.cookie(""rememberKey"", key);
  14 |   res.json({ ok: true });
  15 | });
  16 |
  17 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test151.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,13,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 | import { randomInt } from ""crypto"";
   4 |
   5 | router.get(""/test151"", function (req, res) {
   6 |   let a = false;
   7 |   let key = """";
   8 |   if (a) {
   9 |     key = randomInt(0, 10000000).toString();
  10 |   } else {
  11 |     key = (Math.random() * 100).toString();
  12 |   }
> 13 |   res.cookie(""rememberKey"", key);
  14 |   res.json({ ok: true });
  15 | });
  16 |
  17 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test152.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,13,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test152"", function (req, res) {
   5 |   let key = """";
   6 |   var map64 = {
   7 |     keyA: ""a_Value"",
   8 |     keyB: ""safe"",
   9 |     keyC: ""c_value"",
  10 |   };
  11 |   map64[""keyB""] = Math.random().toString();
  12 |   key = map64.keyB;
> 13 |   res.cookie(""rememberKey"", key);
  14 |   res.json({ ok: true });
  15 | });
  16 |
  17 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test153.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,17,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test153"", function (req, res) {
   5 |   let key = """";
   6 |   var data = [""safe""];
   7 |   data.push(""safe"");
   8 |   data.push(Math.random().toString());
   9 |   data[3] = ""safe"";
  10 |   data.pop();
  11 |   data.pop();
  12 |
  13 |   for (var currentKey of data) {
  14 |     key = key.concat(currentKey);
  15 |   }
  16 |
> 17 |   res.cookie(""rememberKey"", key);
  18 |   res.json({ ok: true });
  19 | });
  20 |
  21 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test154.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,16,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test154"", function (req, res) {
   5 |   let key = """";
   6 |   var data = [""safe""];
   7 |   data.push(""safe"");
   8 |   data.push(Math.random().toString());
   9 |   data[3] = ""safe"";
  10 |   data.pop();
  11 |
  12 |   for (var currentKey of data) {
  13 |     key = key.concat(currentKey);
  14 |   }
  15 |
> 16 |   res.cookie(""rememberKey"", key);
  17 |   res.json({ ok: true });
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
034. Insecure generation of random numbers,CWE-330,The application uses insecure methods to generate random numbers and assigns them to sensitive parameters in VULNERABLE_JS_APP/server/routes/testcases/test155.js,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N/E:U/RL:O/RC:U,https://docs.fluidattacks.com/criteria/vulnerabilities/034,skims,SAST,7,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test155"", function (req, res) {
   5 |   var data = [""safe"", Math.random().toString()];
   6 |
>  7 |   res.cookie(""rememberKey"", data[1]);
   8 |   res.json({ ok: true });
   9 | });
  10 |
  11 | export default router;
     ^ Col 0
",javascript.javascript_weak_random
042. Insecurely generated cookies,CWE-614,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in VULNERABLE_JS_APP/server/routes/testcases/test097.js",CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O,https://docs.fluidattacks.com/criteria/vulnerabilities/042,skims,SAST,6,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test097/"", function (req, res) {
   5 |   var secure = false;
>  6 |   res.cookie(""SomeCookie"", ""Some Value"", { secure: secure, httpOnly: true });
   7 |   res.setHeader(""Content-Type"", ""text/html"");
   8 |   res.send(
   9 |     `
  10 |     <!DOCTYPE html>
  11 |     <html>
  12 |       <body>
  13 |         <h1>Hello Jane Doe</h1>
  14 |       </body>
  15 |     </html>
  16 | `
  17 |   );
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.js_insecurely_generated_cookies
042. Insecurely generated cookies,CWE-614,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in VULNERABLE_JS_APP/server/routes/testcases/test098.js",CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O,https://docs.fluidattacks.com/criteria/vulnerabilities/042,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test098/"", function (req, res) {
   5 |   var map98 = {
   6 |     keyA: ""some value"",
   7 |     keyB: false,
   8 |     keyC: ""safe"",
   9 |   };
> 10 |   res.cookie(""SomeCookie"", ""Some Value"", {
  11 |     secure: map98.keyB,
  12 |     httpOnly: true,
  13 |   });
  14 |   res.setHeader(""Content-Type"", ""text/html"");
  15 |   res.send(
  16 |     `
  17 |     <!DOCTYPE html>
  18 |     <html>
  19 |       <body>
  20 |         <h1>Hello Jane Doe</h1>
  21 |       </body>
     ^ Col 0
",javascript.js_insecurely_generated_cookies
042. Insecurely generated cookies,CWE-614,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in VULNERABLE_JS_APP/server/routes/testcases/test100.js",CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O,https://docs.fluidattacks.com/criteria/vulnerabilities/042,skims,SAST,9,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test100/"", function (req, res) {
   5 |   let list100 = [""safe"", ""safe"", false, ""safe""];
   6 |   list100.shift();
   7 |   list100.push(""safe"");
   8 |   var _secure = list100[1];
>  9 |   res.cookie(""SomeCookie"", ""Some Value"", { secure: _secure, httpOnly: true });
  10 |   res.setHeader(""Content-Type"", ""text/html"");
  11 |   res.send(
  12 |     `
  13 |     <!DOCTYPE html>
  14 |     <html>
  15 |       <body>
  16 |         <h1>Hello Jane Doe</h1>
  17 |       </body>
  18 |     </html>
  19 | `
  20 |   );
  21 | });
     ^ Col 0
",javascript.js_insecurely_generated_cookies
042. Insecurely generated cookies,CWE-614,"The application does not set security attributes for sensitive cookies, which could cause them to be sent in plain text or disclosed by unauthorized users on the client side.
 in VULNERABLE_JS_APP/server/routes/testcases/test102.js",CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O,https://docs.fluidattacks.com/criteria/vulnerabilities/042,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test102/"", function (req, res) {
   5 |   var _secure = false;
   6 |
   7 |   if (32 > 44) {
   8 |     _secure = true;
   9 |   }
> 10 |   res.cookie(""SomeCookie"", ""Some Value"", { secure: _secure, httpOnly: true });
  11 |   res.setHeader(""Content-Type"", ""text/html"");
  12 |   res.send(
  13 |     `
  14 |     <!DOCTYPE html>
  15 |     <html>
  16 |       <body>
  17 |         <h1>Hello Jane Doe</h1>
  18 |       </body>
  19 |     </html>
  20 | `
  21 |   );
     ^ Col 0
",javascript.js_insecurely_generated_cookies
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test142.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,20,"
   8 |   let userData = req.body;
   9 |
  10 |   let userName = userData.username;
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
  19 |
> 20 |     let result = xpath.select(findUserXPath, doc);
  21 |     if (result.length > 0) {
  22 |       authenticated = true;
  23 |     }
  24 |     res.json({ ok: authenticated });
  25 |   });
  26 | });
  27 |
  28 | export default router;
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test143.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,19,"
   9 |
  10 |   let userName = userData.username;
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
> 19 |     let badXPathExpr = xpath.parse(findUserXPath);
  20 |
  21 |     let result = badXPathExpr.select({ node: doc });
  22 |     if (result.length > 0) {
  23 |       authenticated = true;
  24 |     }
  25 |     res.json({ ok: authenticated });
  26 |   });
  27 | });
  28 |
  29 | export default router;
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test144.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,21,"
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()=$userName and Password/text()=$password]`;
  19 |     let badXPathExpr = xpath.parse(findUserXPath);
  20 |
> 21 |     let result = badXPathExpr.select({
  22 |       node: doc,
  23 |       variables: { userName: userName, password: password },
  24 |     });
  25 |     if (result.length > 0) {
  26 |       authenticated = true;
  27 |     }
  28 |     res.json({
  29 |       ok: authenticated,
  30 |     });
  31 |   });
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test145.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,20,"
   8 |   let userData = req.body;
   9 |
  10 |   let userName = userData.username;
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new dom.DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
  19 |
> 20 |     let result = xpath.select(findUserXPath, doc);
  21 |     if (result.length > 0) {
  22 |       authenticated = true;
  23 |     }
  24 |     res.json({ ok: authenticated });
  25 |   });
  26 | });
  27 |
  28 | export default router;
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test146.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,19,"
   9 |
  10 |   let userName = userData.username;
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()=$password]`;
> 19 |     let badXPathExpr = xpath.parse(findUserXPath);
  20 |
  21 |     let result = badXPathExpr.select({
  22 |       node: doc,
  23 |       variables: { password: password },
  24 |     });
  25 |     if (result.length > 0) {
  26 |       authenticated = true;
  27 |     }
  28 |     res.json({ ok: authenticated });
  29 |   });
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test146.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,21,"
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()=$password]`;
  19 |     let badXPathExpr = xpath.parse(findUserXPath);
  20 |
> 21 |     let result = badXPathExpr.select({
  22 |       node: doc,
  23 |       variables: { password: password },
  24 |     });
  25 |     if (result.length > 0) {
  26 |       authenticated = true;
  27 |     }
  28 |     res.json({ ok: authenticated });
  29 |   });
  30 | });
  31 |
     ^ Col 0
",javascript.javascript_dynamic_xpath
021. XPath injection,CWE-643,Dynamic XPath statements are generated without the required data validation. in VULNERABLE_JS_APP/server/routes/testcases/test147.js,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/021,skims,SAST,20,"
   8 |   let userData = req.body;
   9 |
  10 |   let userName = userData.username;
  11 |   let password = userData.password;
  12 |
  13 |   fs.readFile(""target/peopleDB.xml"", (error, data) => {
  14 |     let authenticated = false;
  15 |
  16 |     var doc = new DOMParser().parseFromString(data.toString());
  17 |     let select = xpath.useNamespaces({ bookml: ""http://example.com/book"" });
  18 |     var findUserXPath = `//Employee[UserName/text()='${userName}' and Password/text()='${password}']`;
  19 |
> 20 |     let result = select(findUserXPath, doc);
  21 |     if (result.length > 0) {
  22 |       authenticated = true;
  23 |     }
  24 |     res.json({ ok: authenticated });
  25 |   });
  26 | });
  27 |
  28 | export default router;
     ^ Col 0
",javascript.javascript_dynamic_xpath
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test001.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,7,"
   1 | import { exec } from ""child_process"";
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test001/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
>  7 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
   8 |     var user_files = [];
   9 |     for (var file of stdout.split(""\n"")) {
  10 |       if (file) {
  11 |         user_files.push(file);
  12 |       }
  13 |     }
  14 |
  15 |     var data = {
  16 |       user_files: user_files,
  17 |     };
  18 |     res.json(data);
  19 |   });
  20 | });
  21 |
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test003.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,7,"
   1 | const { exec } = require(""child_process"");
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test003/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
>  7 |   exec(`ls target/user_files/${user}/`, (error, stdout, stderr) => {
   8 |     var user_files = [];
   9 |     for (var file of stdout.split(""\n"")) {
  10 |       if (file) {
  11 |         user_files.push(file);
  12 |       }
  13 |     }
  14 |
  15 |     var data = {
  16 |       user_files: user_files,
  17 |     };
  18 |     res.json(data);
  19 |   });
  20 | });
  21 |
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test004.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,7,"
   1 | import { exec } from ""child_process"";
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test004/"", function (req, res) {
   6 |   var user = req.query.user;
>  7 |   exec(`ls target/user_files/${user}/`, (error, stdout, stderr) => {
   8 |     var user_files = [];
   9 |     for (var file of stdout.split(""\n"")) {
  10 |       if (file) {
  11 |         user_files.push(file);
  12 |       }
  13 |     }
  14 |
  15 |     var data = {
  16 |       user_files: user_files,
  17 |     };
  18 |     res.json(data);
  19 |   });
  20 | });
  21 |
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test005.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,8,"
   1 | const process = require(""child_process"");
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test005/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   process.exec(
>  8 |     ""ls target/user_files/"" + user + ""/"",
   9 |     (error, stdout, stderr) => {
  10 |       var user_files = [];
  11 |       for (var file of stdout.split(""\n"")) {
  12 |         if (file) {
  13 |           user_files.push(file);
  14 |         }
  15 |       }
  16 |
  17 |       var data = {
  18 |         user_files: user_files,
  19 |       };
  20 |       res.json(data);
  21 |     }
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test007.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,9,"
   1 | const process = require(""child_process"");
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test007"", function (req, res) {
   6 |   let body = req.body;
   7 |
   8 |   process.exec(
>  9 |     ""ls target/user_files/"" + body[""user""] + ""/"",
  10 |     (error, stdout, stderr) => {
  11 |       var user_files = [];
  12 |       for (var file of stdout.split(""\n"")) {
  13 |         if (file) {
  14 |           user_files.push(file);
  15 |         }
  16 |       }
  17 |
  18 |       var data = {
  19 |         user_files: user_files,
  20 |       };
  21 |       res.json(data);
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test008.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,12,"
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test008/:user"", function (req, res) {
   6 |   if (3 > 1) {
   7 |     var user = ""mary"";
   8 |   } else {
   9 |     var user = req.params[""user""];
  10 |   }
  11 |
> 12 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  13 |     var user_files = [];
  14 |     for (var file of stdout.split(""\n"")) {
  15 |       if (file) {
  16 |         user_files.push(file);
  17 |       }
  18 |     }
  19 |
  20 |     var data = {
  21 |       user_files: user_files,
  22 |       user: user,
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test010.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,12,"
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test010/:user"", function (req, res) {
   6 |   var user = """";
   7 |   var parameters = req.params;
   8 |   if (req.params[""user""] != undefined) {
   9 |     user = parameters[""user""];
  10 |   }
  11 |   user = decodeURI(user);
> 12 |   exec(`ls target/user_files/${user}/`, (error, stdout, stderr) => {
  13 |     var user_files = [];
  14 |     for (var file of stdout.split(""\n"")) {
  15 |       if (file) {
  16 |         user_files.push(file);
  17 |       }
  18 |     }
  19 |
  20 |     var data = {
  21 |       user_files: user_files,
  22 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test011.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,13,"
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test011/:user"", function (req, res) {
   6 |   var user = """";
   7 |   for (var key of Object.keys(req.params)) {
   8 |     if (key == ""user"") {
   9 |       user = req.params[key];
  10 |       break;
  11 |     }
  12 |   }
> 13 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  14 |     var user_files = [];
  15 |     for (var file of stdout.split(""\n"")) {
  16 |       if (file) {
  17 |         user_files.push(file);
  18 |       }
  19 |     }
  20 |
  21 |     var data = {
  22 |       user_files: user_files,
  23 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test012.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,9,"
   1 | const { exec } = require(""child_process"");
   2 | var express = require(""express"");
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test012/:user"", function (req, res) {
   6 |   var user_files = [];
   7 |   var user = """";
   8 |   for (var user of Object.values(req.params)) {
>  9 |     exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  10 |       for (var file of stdout.split(""\n"")) {
  11 |         if (file) {
  12 |           user_files.push(file);
  13 |         }
  14 |       }
  15 |
  16 |       var data = {
  17 |         user_files: user_files,
  18 |       };
  19 |       res.json(data);
  20 |     });
  21 |   }
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test013.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,13,"
   3 | var router = express.Router();
   4 |
   5 | router.get(""/test013/:user"", function (req, res) {
   6 |   var user_files = [];
   7 |   var user = """";
   8 |   var paramValues = Object.values(req.params);
   9 |   if (paramValues.length > 0) {
  10 |     user = paramValues[0];
  11 |   }
  12 |   if (user) {
> 13 |     exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  14 |       for (var file of stdout.split(""\n"")) {
  15 |         if (file) {
  16 |           user_files.push(file);
  17 |         }
  18 |       }
  19 |
  20 |       var data = {
  21 |         user_files: user_files,
  22 |       };
  23 |       res.json(data);
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test014.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,29,"
  19 |       break;
  20 |     case ""C"":
  21 |     case ""D"":
  22 |       user = param;
  23 |       break;
  24 |     default:
  25 |       uer = ""bobs_your_uncle"";
  26 |       break;
  27 |   }
  28 |
> 29 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  30 |     for (var file of stdout.split(""\n"")) {
  31 |       if (file) {
  32 |         user_files.push(file);
  33 |       }
  34 |     }
  35 |
  36 |     var data = {
  37 |       user_files: user_files,
  38 |     };
  39 |     res.json(data);
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test015.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,7,"
   1 | import { execSync } from ""child_process"";
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test015/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
>  7 |   var stdout = execSync(""ls target/user_files/"" + user + ""/"").toString();
   8 |
   9 |   var user_files = [];
  10 |   for (var file of stdout.split(""\n"")) {
  11 |     if (file) {
  12 |       user_files.push(file);
  13 |     }
  14 |   }
  15 |
  16 |   var data = {
  17 |     user_files: user_files,
  18 |   };
  19 |   res.json(data);
  20 | });
  21 |
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test016.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,28,"
  18 |       break;
  19 |     case ""C"":
  20 |     case ""D"":
  21 |       user = param;
  22 |       break;
  23 |     default:
  24 |       uer = ""bobs_your_uncle"";
  25 |       break;
  26 |   }
  27 |
> 28 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  29 |     for (var file of stdout.split(""\n"")) {
  30 |       if (file) {
  31 |         user_files.push(file);
  32 |       }
  33 |     }
  34 |
  35 |     var data = {
  36 |       user_files: user_files,
  37 |     };
  38 |     res.json(data);
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test017.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,11,"
   1 | import { exec } from ""child_process"";
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test017/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   const data = {
   8 |     keyA: user,
   9 |     keyB: ""safe"",
  10 |   };
> 11 |   exec(""ls target/user_files/"" + data.keyA + ""/"", (error, stdout, stderr) => {
  12 |     var user_files = [];
  13 |     for (var file of stdout.split(""\n"")) {
  14 |       if (file) {
  15 |         user_files.push(file);
  16 |       }
  17 |     }
  18 |
  19 |     var data = {
  20 |       user_files: user_files,
  21 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test018.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,12,"
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test018/:user"", function (req, res) {
   6 |   var user = """";
   7 |   if (3 > 5) {
   8 |     user = req.params[""user""];
   9 |   } else {
  10 |     user = ""jane"";
  11 |   }
> 12 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  13 |     var user_files = [];
  14 |     for (var file of stdout.split(""\n"")) {
  15 |       if (file) {
  16 |         user_files.push(file);
  17 |       }
  18 |     }
  19 |
  20 |     var data = {
  21 |       user_files: user_files,
  22 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test064.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,13,"
   3 | var router = Router();
   4 |
   5 | router.get(""/test064/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var map64 = {
   8 |     keyA: ""a_Value"",
   9 |     keyB: user,
  10 |     keyC: ""c_value"",
  11 |   };
  12 |   map64[""keyB""] = ""safe"";
> 13 |   exec(""ls target/user_files/"" + map64.keyB + ""/"", (error, stdout, stderr) => {
  14 |     var user_files = [];
  15 |     for (var file of stdout.split(""\n"")) {
  16 |       if (file) {
  17 |         user_files.push(file);
  18 |       }
  19 |     }
  20 |
  21 |     var data = {
  22 |       user_files: user_files,
  23 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test065.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,17,"
   7 |   var parameters = req.params;
   8 |   if (req.params[""user""] != undefined) {
   9 |     user = parameters[""user""];
  10 |   }
  11 |   let allowed = [""a"", user];
  12 |   allowed.pop();
  13 |   allowed[1] = ""safe"";
  14 |   allowed.pop();
  15 |   allowed[1] = user;
  16 |   var param = decodeURI(allowed[1]);
> 17 |   exec(`ls target/user_files/${param}/`, (error, stdout, stderr) => {
  18 |     var user_files = [];
  19 |     for (var file of stdout.split(""\n"")) {
  20 |       if (file) {
  21 |         user_files.push(file);
  22 |       }
  23 |     }
  24 |
  25 |     var data = {
  26 |       user_files: user_files,
  27 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test066.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,16,"
   6 |   var user = req.params[""user""];
   7 |   console.log(req.params);
   8 |   var map64 = {
   9 |     keyA: ""a_Value"",
  10 |     keyB: ""safe"",
  11 |     keyC: ""c_value"",
  12 |   };
  13 |   var param = user;
  14 |   map64[""keyB""] = param;
  15 |   user = map64.keyB;
> 16 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  17 |     var user_files = [];
  18 |     for (var file of stdout.split(""\n"")) {
  19 |       if (file) {
  20 |         user_files.push(file);
  21 |       }
  22 |     }
  23 |
  24 |     var data = {
  25 |       user_files: user_files,
  26 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test068.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,10,"
   1 | import { exec } from ""child_process"";
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test068/:user"", function (req, res) {
   6 |   var param = req.params[""user""];
   7 |
   8 |   var num = 196;
   9 |   var user = 500 / 42 + num > 200 ? param : ""safe"";
> 10 |   exec(""ls target/user_files/"" + user + ""/"", (error, stdout, stderr) => {
  11 |     var user_files = [];
  12 |     for (var file of stdout.split(""\n"")) {
  13 |       if (file) {
  14 |         user_files.push(file);
  15 |       }
  16 |     }
  17 |
  18 |     var data = {
  19 |       user_files: user_files,
  20 |     };
  21 |     res.json(data);
     ^ Col 0
",javascript.javascript_remote_command_execution
004. Remote command execution,CWE-78,"The system builds system commands using inputs that can be manipulated externally, it does not properly override special elements that could modify the system command.
 in VULNERABLE_JS_APP/server/routes/testcases/test071.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:P/RL:T/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/004,skims,SAST,12,"
   2 | import { Router } from ""express"";
   3 | var router = Router();
   4 |
   5 | router.get(""/test071/:user"", function (req, res) {
   6 |   var user = req.params[""user""];
   7 |   var map64 = {
   8 |     keyA: ""a_Value"",
   9 |     keyB: user,
  10 |     keyC: ""c_value"",
  11 |   };
> 12 |   exec(""ls target/user_files/"" + map64.keyB + ""/"", (error, stdout, stderr) => {
  13 |     var user_files = [];
  14 |     for (var file of stdout.split(""\n"")) {
  15 |       if (file) {
  16 |         user_files.push(file);
  17 |       }
  18 |     }
  19 |
  20 |     var data = {
  21 |       user_files: user_files,
  22 |     };
     ^ Col 0
",javascript.javascript_remote_command_execution
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test077.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,8,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test077/:user"", function (req, res) {
   5 |   var user = req.params[""user""];
   6 |   res.setHeader(""Content-Type"", ""text/html"");
   7 |   res.setHeader(""X-XSS-Protection"", ""0"");
>  8 |   res.send(
   9 |     `
  10 |     <!DOCTYPE html>
  11 |     <html>
  12 |       <body>
  13 |         <h1>Hello ${user}</h1>
  14 |       </body>
  15 |     </html>
  16 | `
  17 |   );
  18 | });
  19 |
  20 | export default router;
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test078.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,13,"
   3 |
   4 | router.get(""/test078/:user"", function (req, res) {
   5 |   var param = req.params[""user""];
   6 |
   7 |   var user = ""Jane Doe"";
   8 |   if (32 > 31) {
   9 |     user = param;
  10 |   }
  11 |   res.setHeader(""Content-Type"", ""text/html"");
  12 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 13 |   res.send(
  14 |     `
  15 |     <!DOCTYPE html>
  16 |     <html>
  17 |       <body>
  18 |         <h1>Hello ${user}</h1>
  19 |       </body>
  20 |     </html>
  21 | `
  22 |   );
  23 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test079.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,18,"
   8 |   var string_name = """";
   9 |   data.push(""safe"");
  10 |   data.push(param);
  11 |
  12 |   for (var user of data) {
  13 |     string_name = string_name.concat(user);
  14 |   }
  15 |
  16 |   res.setHeader(""Content-Type"", ""text/html"");
  17 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 18 |   res.send(
  19 |     `
  20 |     <!DOCTYPE html>
  21 |     <html>
  22 |       <body>
  23 |         <h1>Hello ${string_name}</h1>
  24 |       </body>
  25 |     </html>
  26 | `
  27 |   );
  28 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test080.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,9,"
   1 | var express = require(""express"");
   2 | var router = express.Router();
   3 |
   4 | router.get(""/test080/:user"", function (req, res) {
   5 |   var user = """";
   6 |   user = req.params[""user""];
   7 |   res.setHeader(""Content-Type"", ""text/html"");
   8 |   res.setHeader(""X-XSS-Protection"", ""0"");
>  9 |   res.send(
  10 |     `
  11 |     <!DOCTYPE html>
  12 |     <html>
  13 |       <body>
  14 |         <h1>Hello ${user}</h1>
  15 |       </body>
  16 |     </html>
  17 | `
  18 |   );
  19 | });
  20 |
  21 | export default router;
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test081.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,29,"
  19 |     case ""D"":
  20 |       user = param;
  21 |       break;
  22 |     default:
  23 |       uer = ""bobs_your_uncle"";
  24 |       break;
  25 |   }
  26 |
  27 |   res.setHeader(""Content-Type"", ""text/html"");
  28 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 29 |   res.send(
  30 |     `
  31 |     <!DOCTYPE html>
  32 |     <html>
  33 |       <body>
  34 |         <h1>Hello ${user}</h1>
  35 |       </body>
  36 |     </html>
  37 | `
  38 |   );
  39 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test082.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,13,"
   3 |
   4 | router.get(""/test082/:user"", function (req, res) {
   5 |   var param = req.params[""user""];
   6 |
   7 |   var user = ""Jane Doe"";
   8 |   if (32 > 33) {
   9 |     user = param;
  10 |   }
  11 |   res.setHeader(""Content-Type"", ""text/html"");
  12 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 13 |   res.send(
  14 |     `
  15 |     <!DOCTYPE html>
  16 |     <html>
  17 |       <body>
  18 |         <h1>Hello ${user}</h1>
  19 |       </body>
  20 |     </html>
  21 | `
  22 |   );
  23 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test083.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,18,"
   8 |   var map64 = {
   9 |     keyA: ""a_Value"",
  10 |     keyB: param,
  11 |     keyC: ""c_value"",
  12 |   };
  13 |
  14 |   var user = map64.keyB;
  15 |
  16 |   res.setHeader(""Content-Type"", ""text/html"");
  17 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 18 |   res.send(
  19 |     `
  20 |     <!DOCTYPE html>
  21 |     <html>
  22 |       <body>
  23 |         <h1>Hello ${user}</h1>
  24 |       </body>
  25 |     </html>
  26 | `
  27 |   );
  28 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test084.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,20,"
  10 |     keyB: param,
  11 |     keyC: ""c_value"",
  12 |   };
  13 |   if (3 > -2) {
  14 |     map64.keyB = ""safe"";
  15 |   }
  16 |   var user = map64.keyB;
  17 |
  18 |   res.setHeader(""Content-Type"", ""text/html"");
  19 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 20 |   res.send(
  21 |     `
  22 |     <!DOCTYPE html>
  23 |     <html>
  24 |       <body>
  25 |         <h1>Hello ${user}</h1>
  26 |       </body>
  27 |     </html>
  28 | `
  29 |   );
  30 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test085.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,20,"
  10 |   let allowed = [""a"", user];
  11 |   allowed.pop();
  12 |   allowed[1] = ""safe"";
  13 |   allowed.pop();
  14 |   allowed[1] = user;
  15 |   user = decodeURI(allowed[1]);
  16 |
  17 |   var user = req.params[""user""];
  18 |   res.setHeader(""Content-Type"", ""text/html"");
  19 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 20 |   res.send(
  21 |     `
  22 |     <!DOCTYPE html>
  23 |     <html>
  24 |       <body>
  25 |         <h1>Hello ${user}</h1>
  26 |       </body>
  27 |     </html>
  28 | `
  29 |   );
  30 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test086.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,21,"
  11 |   allowed.pop();
  12 |   allowed[1] = ""safe"";
  13 |   allowed[1] = user;
  14 |   allowed.pop();
  15 |   allowed.push = ""safe"";
  16 |   user = decodeURI(allowed[1]);
  17 |
  18 |   var user = req.params[""user""];
  19 |   res.setHeader(""Content-Type"", ""text/html"");
  20 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 21 |   res.send(
  22 |     `
  23 |     <!DOCTYPE html>
  24 |     <html>
  25 |       <body>
  26 |         <h1>Hello ${user}</h1>
  27 |       </body>
  28 |     </html>
  29 | `
  30 |   );
  31 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test087.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,12,"
   2 | var router = Router();
   3 |
   4 | router.get(""/test087/:user"", function (req, res) {
   5 |   var param = req.params[""user""];
   6 |   let list75 = [""safe"", ""safe"", param];
   7 |   list75.shift();
   8 |   list75.push(""safe"");
   9 |   var user = list75[1];
  10 |   res.setHeader(""Content-Type"", ""text/html"");
  11 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 12 |   res.send(
  13 |     `
  14 |     <!DOCTYPE html>
  15 |     <html>
  16 |       <body>
  17 |         <h1>Hello ${user}</h1>
  18 |       </body>
  19 |     </html>
  20 | `
  21 |   );
  22 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test088.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,31,"
  14 |     <!DOCTYPE html>
  15 |     <html>
  16 |       <body>
  17 |         <h1>Hello ${user}</h1>
  18 |       </body>
  19 |     </html>
  20 | `;
  21 |   } else {
  22 |     var temple = `
  23 |   <!DOCTYPE html>
  24 |   <html>
  25 |     <body>
  26 |       <h1>Hello Jane Doe</h1>
  27 |     </body>
  28 |   </html>
  29 | `;
  30 |   }
> 31 |   res.send(temple);
  32 | });
  33 |
  34 | export default router;
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test089.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,21,"
  11 |   data[3] = ""safe"";
  12 |   data.pop();
  13 |   data.pop();
  14 |
  15 |   for (var user of data) {
  16 |     string_name = string_name.concat(user);
  17 |   }
  18 |
  19 |   res.setHeader(""Content-Type"", ""text/html"");
  20 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 21 |   res.send(
  22 |     `
  23 |     <!DOCTYPE html>
  24 |     <html>
  25 |       <body>
  26 |         <h1>Hello ${string_name}</h1>
  27 |       </body>
  28 |     </html>
  29 | `
  30 |   );
  31 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test090.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,19,"
   9 |   }
  10 |   let allowed = [""a"", user];
  11 |   allowed.pop();
  12 |   allowed[1] = ""safe"";
  13 |   allowed.pop();
  14 |   allowed[1] = user;
  15 |   var user = decodeURI(allowed[1]);
  16 |
  17 |   res.setHeader(""Content-Type"", ""text/html"");
  18 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 19 |   res.send(
  20 |     `
  21 |     <!DOCTYPE html>
  22 |     <html>
  23 |       <body>
  24 |         <h1>Hello ${user}</h1>
  25 |       </body>
  26 |     </html>
  27 | `
  28 |   );
  29 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test091.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,13,"
   3 |
   4 | router.get(""/test091/:user"", function (req, res) {
   5 |   var params = req.params;
   6 |   let param = params[""user""];
   7 |   var user = """";
   8 |   if (param != undefined) {
   9 |     user = param;
  10 |   }
  11 |   res.setHeader(""Content-Type"", ""text/html"");
  12 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 13 |   res.send(
  14 |     `
  15 |     <!DOCTYPE html>
  16 |     <html>
  17 |       <body>
  18 |         <h1>Hello ${user}</h1>
  19 |       </body>
  20 |     </html>
  21 | `
  22 |   );
  23 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test092.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,10,"
   1 | import { Router } from ""express"";
   2 | var router = Router();
   3 |
   4 | router.get(""/test092/:user"", function (req, res) {
   5 |   var param = req.params[""user""];
   6 |
   7 |   var user = param ? param : ""Jane Doe"";
   8 |   res.setHeader(""Content-Type"", ""text/html"");
   9 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 10 |   res.send(
  11 |     `
  12 |     <!DOCTYPE html>
  13 |     <html>
  14 |       <body>
  15 |         <h1>Hello ${user}</h1>
  16 |       </body>
  17 |     </html>
  18 | `
  19 |   );
  20 | });
  21 |
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test093.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,12,"
   2 | var router = Router();
   3 |
   4 | router.get(""/test093/:user"", function (req, res) {
   5 |   var param = req.params[""user""];
   6 |   var user = ""Mr"";
   7 |   if (param) {
   8 |     user = user + param;
   9 |   }
  10 |   res.setHeader(""Content-Type"", ""text/html"");
  11 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 12 |   res.send(
  13 |     `
  14 |     <!DOCTYPE html>
  15 |     <html>
  16 |       <body>
  17 |         <h1>Hello ${user}</h1>
  18 |       </body>
  19 |     </html>
  20 | `
  21 |   );
  22 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test095.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,30,"
  20 |     case ""D"":
  21 |       user = param;
  22 |       break;
  23 |     default:
  24 |       uer = ""Danny"";
  25 |       break;
  26 |   }
  27 |
  28 |   res.setHeader(""Content-Type"", ""text/html"");
  29 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 30 |   res.send(
  31 |     `
  32 |     <!DOCTYPE html>
  33 |     <html>
  34 |       <body>
  35 |         <h1>Hello ${user}</h1>
  36 |       </body>
  37 |     </html>
  38 | `
  39 |   );
  40 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
008. Reflected cross-site scripting (XSS),CWE-79,"The web application dynamically generates web content without validating the source of the potentially untrusted data
 in VULNERABLE_JS_APP/server/routes/testcases/test096.js",CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N/E:P/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/008,skims,SAST,17,"
   7 |   let allowed = [""a"", param];
   8 |   allowed.pop();
   9 |   allowed[1] = ""safe"";
  10 |   allowed.pop();
  11 |   allowed[1] = user;
  12 |   allowed.shift();
  13 |   allowed.push(""Jane Doe"");
  14 |   user = allowed[1];
  15 |   res.setHeader(""Content-Type"", ""text/html"");
  16 |   res.setHeader(""X-XSS-Protection"", ""0"");
> 17 |   res.send(
  18 |     `
  19 |     <!DOCTYPE html>
  20 |     <html>
  21 |       <body>
  22 |         <h1>Hello ${user}</h1>
  23 |       </body>
  24 |     </html>
  25 | `
  26 |   );
  27 | });
     ^ Col 0
",javascript.javascript_unsafe_xss_content
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test156.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  25 |     function (error, results, fields) {
  26 |       connection.pause();
  27 |       if (error) {
  28 |         res.status(500).json({ error: error });
  29 |       }
  30 |       res.json({ ok: results.length > 0 });
  31 |     }
  32 |   );
  33 | });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test157.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     ""SELECT * FROM users WHERE user_name='"" +
  25 |       userName +
  26 |       ""' AND password='"" +
  27 |       password +
  28 |       ""'"",
  29 |     function (error, results, fields) {
  30 |       connection.pause();
  31 |       if (error) {
  32 |         res.status(500).json({ error: error });
  33 |       }
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test158.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,29,"
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
  23 |   let quey =
  24 |     ""SELECT * FROM users WHERE user_name='"" +
  25 |     userName +
  26 |     ""' AND password='"" +
  27 |     password +
  28 |     ""'"";
> 29 |   connection.query(quey, function (error, results, fields) {
  30 |     connection.pause();
  31 |     if (error) {
  32 |       res.status(500).json({ error: error });
  33 |     }
  34 |     res.json({ ok: results.length > 0 });
  35 |   });
  36 | });
  37 |
  38 | export default router;
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test159.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  25 |     function (error, results, fields) {
  26 |       connection.pause();
  27 |       if (error) {
  28 |         res.status(500).json({ error: error });
  29 |       }
  30 |       res.json({ ok: results.length > 0 });
  31 |     }
  32 |   );
  33 | });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test160.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  25 |     function (error, results, fields) {
  26 |       connection.pause();
  27 |       if (error) {
  28 |         res.status(500).json({ error: error });
  29 |       }
  30 |       res.json({ ok: results.length > 0 });
  31 |     }
  32 |   );
  33 | });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test161.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  25 |     function (error, results, fields) {
  26 |       connection.pause();
  27 |       if (error) {
  28 |         res.status(500).json({ error: error });
  29 |       }
  30 |       res.json({ ok: results.length > 0 });
  31 |     }
  32 |   );
  33 | });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test162.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  25 |     function (error, results, fields) {
  26 |       connection.pause();
  27 |       if (error) {
  28 |         res.status(500).json({ error: error });
  29 |       }
  30 |       res.json({ ok: results.length > 0 });
  31 |     }
  32 |   );
  33 | });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test163.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,21,"
  11 |
  12 | router.get(""/test163/"", function (req, res) {
  13 |   connection_pool.getConnection((error, connection) => {
  14 |     connection.resume();
  15 |
  16 |     let userData = req.body;
  17 |
  18 |     let userName = userData.username;
  19 |     let password = userData.password;
  20 |
> 21 |     connection.query(
  22 |       `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  23 |       function (error, results, fields) {
  24 |         connection.pause();
  25 |         if (error) {
  26 |           res.status(500).json({ error: error });
  27 |         }
  28 |         res.json({ ok: results.length > 0 });
  29 |       }
  30 |     );
  31 |   });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test164.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,25,"
  15 |
  16 | router.get(""/test164/"", function (req, res) {
  17 |   cluster.getConnection((error, connection) => {
  18 |     connection.resume();
  19 |
  20 |     let userData = req.body;
  21 |
  22 |     let userName = userData.username;
  23 |     let password = userData.password;
  24 |
> 25 |     connection.query(
  26 |       `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  27 |       function (error, results, fields) {
  28 |         connection.pause();
  29 |         if (error) {
  30 |           res.status(500).json({ error: error });
  31 |         }
  32 |         res.json({ ok: results.length > 0 });
  33 |       }
  34 |     );
  35 |   });
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test165.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,24,"
  14 | cluster.add(pool_config);
  15 |
  16 | router.get(""/test165/"", function (req, res) {
  17 |   let userData = req.body;
  18 |
  19 |   let userName = userData.username;
  20 |   let password = userData.password;
  21 |   let query = `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`;
  22 |   cluster.getConnection((error, connection) => {
  23 |     connection.resume();
> 24 |     connection.query(query, function (error, results, fields) {
  25 |       connection.pause();
  26 |       if (error) {
  27 |         res.status(500).json({ error: error });
  28 |       }
  29 |       res.json({ ok: results.length > 0 });
  30 |     });
  31 |   });
  32 | });
  33 |
  34 | export default router;
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test166.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |
> 23 |   connection.query(
  24 |     {
  25 |       sql: `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`,
  26 |     },
  27 |     function (error, results, fields) {
  28 |       connection.pause();
  29 |       if (error) {
  30 |         res.status(500).json({ error: error });
  31 |       }
  32 |       res.json({ ok: results.length > 0 });
  33 |     }
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test167.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |   let statement = `SELECT * FROM users WHERE user_name='${userName}' AND password='${password}'`;
> 23 |   connection.query(
  24 |     {
  25 |       sql: statement,
  26 |     },
  27 |     function (error, results, fields) {
  28 |       connection.pause();
  29 |       if (error) {
  30 |         res.status(500).json({ error: error });
  31 |       }
  32 |       res.json({ ok: results.length > 0 });
  33 |     }
     ^ Col 0
",javascript.javascript_sql_api_injection
112. SQL injection - Java SQL API,CWE-89,Use of attacker controlled parameters for querying the data base in VULNERABLE_JS_APP/server/routes/testcases/test168.js,CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:L/E:U/RL:X/RC:R,https://docs.fluidattacks.com/criteria/vulnerabilities/112,skims,SAST,23,"
  13 |   if (connection.state != ""connected"" && connection.state != ""authenticated"") {
  14 |     connection.connect();
  15 |   }
  16 |   connection.resume();
  17 |
  18 |   let userData = req.body;
  19 |
  20 |   let userName = userData.username;
  21 |   let password = userData.password;
  22 |   let statement = `SELECT * FROM users WHERE user_name=? AND password=?`;
> 23 |   connection.query(
  24 |     {
  25 |       sql: statement,
  26 |       values: [userName, password],
  27 |     },
  28 |     function (error, results, fields) {
  29 |       connection.pause();
  30 |       if (error) {
  31 |         res.status(500).json({ error: error });
  32 |       }
  33 |       res.json({ ok: results.length > 0 });
     ^ Col 0
",javascript.javascript_sql_api_injection
Summary: 154 vulnerabilities were found in your targets.