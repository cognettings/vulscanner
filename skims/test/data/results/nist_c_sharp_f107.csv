title,cwe,description,cvss,finding,stream,kind,where,snippet,method
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,65,"
  55 |   }
  56 |
  57 | ing (DirectoryEntry de = new DirectoryEntry())
  58 |
  59 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  60 |   using (DirectorySearcher search = new DirectorySearcher(de))
  61 |   {
  62 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  63 |       search.PropertiesToLoad.Add(""mail"");
  64 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 65 |       SearchResult sresult = search.FindOne();
  66 |   }
  67 |
  68 |
  69 | mitbad
  70 | GOOD)
  71 |  override void Good()
  72 |
  73 | odG2B();
  74 |
  75 |
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing true to false */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,81,"
   71 |   data = null;
   72 |
   73 | ing (DirectoryEntry de = new DirectoryEntry())
   74 |
   75 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   76 |   using (DirectorySearcher search = new DirectorySearcher(de))
   77 |   {
   78 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   79 |       search.PropertiesToLoad.Add(""mail"");
   80 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  81 |       SearchResult sresult = search.FindOne();
   82 |   }
   83 |
   84 |
   85 | mitbad
   86 | GOOD)
   87 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   88 | e void GoodG2B1()
   89 |
   90 | ring data;
   91 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,81,"
   71 |   data = null;
   72 |
   73 | ing (DirectoryEntry de = new DirectoryEntry())
   74 |
   75 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   76 |   using (DirectorySearcher search = new DirectorySearcher(de))
   77 |   {
   78 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   79 |       search.PropertiesToLoad.Add(""mail"");
   80 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  81 |       SearchResult sresult = search.FindOne();
   82 |   }
   83 |
   84 |
   85 | mitbad
   86 | GOOD)
   87 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   88 | e void GoodG2B1()
   89 |
   90 | ring data;
   91 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,80,"
   70 |   data = null;
   71 |
   72 | ing (DirectoryEntry de = new DirectoryEntry())
   73 |
   74 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   75 |   using (DirectorySearcher search = new DirectorySearcher(de))
   76 |   {
   77 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   78 |       search.PropertiesToLoad.Add(""mail"");
   79 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  80 |       SearchResult sresult = search.FindOne();
   81 |   }
   82 |
   83 |
   84 | mitbad
   85 | GOOD)
   86 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   87 | e void GoodG2B1()
   88 |
   89 | ring data;
   90 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,80,"
   70 |   data = null;
   71 |
   72 | ing (DirectoryEntry de = new DirectoryEntry())
   73 |
   74 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   75 |   using (DirectorySearcher search = new DirectorySearcher(de))
   76 |   {
   77 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   78 |       search.PropertiesToLoad.Add(""mail"");
   79 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  80 |       SearchResult sresult = search.FindOne();
   81 |   }
   82 |
   83 |
   84 | mitbad
   85 | GOOD)
   86 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   87 | e void GoodG2B1()
   88 |
   89 | ring data;
   90 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,88,"
   78 |   data = null;
   79 |
   80 | ing (DirectoryEntry de = new DirectoryEntry())
   81 |
   82 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   83 |   using (DirectorySearcher search = new DirectorySearcher(de))
   84 |   {
   85 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   86 |       search.PropertiesToLoad.Add(""mail"");
   87 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  88 |       SearchResult sresult = search.FindOne();
   89 |   }
   90 |
   91 |
   92 | mitbad
   93 | GOOD)
   94 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
   95 | e void GoodG2B1()
   96 |
   97 | ring data;
   98 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,73,"
   63 |   data = ""foo"";
   64 |
   65 | ing (DirectoryEntry de = new DirectoryEntry())
   66 |
   67 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   68 |   using (DirectorySearcher search = new DirectorySearcher(de))
   69 |   {
   70 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   71 |       search.PropertiesToLoad.Add(""mail"");
   72 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  73 |       SearchResult sresult = search.FindOne();
   74 |   }
   75 |
   76 |
   77 | mitbad
   78 | GOOD)
   79 | dG2B() - use goodsource and badsink by changing the ""if"" so that
   80 | h branches use the GoodSource */
   81 | e void GoodG2B()
   82 |
   83 | ring data;
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,75,"
   65 |   break;
   66 |
   67 | ing (DirectoryEntry de = new DirectoryEntry())
   68 |
   69 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   70 |   using (DirectorySearcher search = new DirectorySearcher(de))
   71 |   {
   72 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   73 |       search.PropertiesToLoad.Add(""mail"");
   74 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  75 |       SearchResult sresult = search.FindOne();
   76 |   }
   77 |
   78 |
   79 | mitbad
   80 | GOOD)
   81 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   82 | e void GoodG2B1()
   83 |
   84 | ring data = null;
   85 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,69,"
   59 |   break;
   60 |
   61 | ing (DirectoryEntry de = new DirectoryEntry())
   62 |
   63 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   64 |   using (DirectorySearcher search = new DirectorySearcher(de))
   65 |   {
   66 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   67 |       search.PropertiesToLoad.Add(""mail"");
   68 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  69 |       SearchResult sresult = search.FindOne();
   70 |   }
   71 |
   72 |
   73 | mitbad
   74 | GOOD)
   75 | dG2B() - use goodsource and badsink */
   76 | e void GoodG2B()
   77 |
   78 | ring data;
   79 | ile (true)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,67,"
   57 | nt i = 0; i < 1; i++)
   58 |
   59 | ing (DirectoryEntry de = new DirectoryEntry())
   60 |
   61 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   62 |   using (DirectorySearcher search = new DirectorySearcher(de))
   63 |   {
   64 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   65 |       search.PropertiesToLoad.Add(""mail"");
   66 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  67 |       SearchResult sresult = search.FindOne();
   68 |   }
   69 |
   70 |
   71 |
   72 | ad
   73 | )
   74 | () - use goodsource and badsink by reversing the block outside the
   75 | tement with the one in the for statement */
   76 | id GoodG2B()
   77 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,49,"
   39 | dPrivate = true;
   40 | ta = Bad_source();
   41 | ing (DirectoryEntry de = new DirectoryEntry())
   42 |
   43 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   44 |   using (DirectorySearcher search = new DirectorySearcher(de))
   45 |   {
   46 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   47 |       search.PropertiesToLoad.Add(""mail"");
   48 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  49 |       SearchResult sresult = search.FindOne();
   50 |   }
   51 |
   52 |
   53 |
   54 | e string Bad_source()
   55 |
   56 | ring data;
   57 |  (badPrivate)
   58 |
   59 |   data = """"; /* Initialize data */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,72,"
   62 |
   63 | ring data = dataCopy;
   64 | ing (DirectoryEntry de = new DirectoryEntry())
   65 |
   66 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   67 |   using (DirectorySearcher search = new DirectorySearcher(de))
   68 |   {
   69 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   70 |       search.PropertiesToLoad.Add(""mail"");
   71 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  72 |       SearchResult sresult = search.FindOne();
   73 |   }
   74 |
   75 |
   76 |
   77 | ad
   78 | )
   79 | rride void Good()
   80 |
   81 | B();
   82 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Connect_tcp_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,71,"
   61 |
   62 | ring data = BadSource();
   63 | ing (DirectoryEntry de = new DirectoryEntry())
   64 |
   65 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   66 |   using (DirectorySearcher search = new DirectorySearcher(de))
   67 |   {
   68 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   69 |       search.PropertiesToLoad.Add(""mail"");
   70 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  71 |       SearchResult sresult = search.FindOne();
   72 |   }
   73 |
   74 |
   75 | mitbad
   76 | GOOD)
   77 | e static string GoodG2BSource()
   78 |
   79 | ring data;
   80 |  FIX: Use a hardcoded string */
   81 | ta = ""foo"";
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,70,"
   60 |   }
   61 |
   62 | ing (DirectoryEntry de = new DirectoryEntry())
   63 |
   64 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   65 |   using (DirectorySearcher search = new DirectorySearcher(de))
   66 |   {
   67 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   68 |       search.PropertiesToLoad.Add(""mail"");
   69 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  70 |       SearchResult sresult = search.FindOne();
   71 |   }
   72 |
   73 |
   74 | mitbad
   75 | GOOD)
   76 |  override void Good()
   77 |
   78 | odG2B();
   79 |
   80 |
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing true to false */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,86,"
   76 |   data = null;
   77 |
   78 | ing (DirectoryEntry de = new DirectoryEntry())
   79 |
   80 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   81 |   using (DirectorySearcher search = new DirectorySearcher(de))
   82 |   {
   83 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   84 |       search.PropertiesToLoad.Add(""mail"");
   85 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  86 |       SearchResult sresult = search.FindOne();
   87 |   }
   88 |
   89 |
   90 | mitbad
   91 | GOOD)
   92 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   93 | e void GoodG2B1()
   94 |
   95 | ring data;
   96 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,86,"
   76 |   data = null;
   77 |
   78 | ing (DirectoryEntry de = new DirectoryEntry())
   79 |
   80 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   81 |   using (DirectorySearcher search = new DirectorySearcher(de))
   82 |   {
   83 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   84 |       search.PropertiesToLoad.Add(""mail"");
   85 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  86 |       SearchResult sresult = search.FindOne();
   87 |   }
   88 |
   89 |
   90 | mitbad
   91 | GOOD)
   92 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   93 | e void GoodG2B1()
   94 |
   95 | ring data;
   96 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,85,"
   75 |   data = null;
   76 |
   77 | ing (DirectoryEntry de = new DirectoryEntry())
   78 |
   79 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   80 |   using (DirectorySearcher search = new DirectorySearcher(de))
   81 |   {
   82 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   83 |       search.PropertiesToLoad.Add(""mail"");
   84 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  85 |       SearchResult sresult = search.FindOne();
   86 |   }
   87 |
   88 |
   89 | mitbad
   90 | GOOD)
   91 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   92 | e void GoodG2B1()
   93 |
   94 | ring data;
   95 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,85,"
   75 |   data = null;
   76 |
   77 | ing (DirectoryEntry de = new DirectoryEntry())
   78 |
   79 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   80 |   using (DirectorySearcher search = new DirectorySearcher(de))
   81 |   {
   82 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   83 |       search.PropertiesToLoad.Add(""mail"");
   84 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  85 |       SearchResult sresult = search.FindOne();
   86 |   }
   87 |
   88 |
   89 | mitbad
   90 | GOOD)
   91 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   92 | e void GoodG2B1()
   93 |
   94 | ring data;
   95 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,93,"
   83 |   data = null;
   84 |
   85 | ing (DirectoryEntry de = new DirectoryEntry())
   86 |
   87 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   88 |   using (DirectorySearcher search = new DirectorySearcher(de))
   89 |   {
   90 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   91 |       search.PropertiesToLoad.Add(""mail"");
   92 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  93 |       SearchResult sresult = search.FindOne();
   94 |   }
   95 |
   96 |
   97 | mitbad
   98 | GOOD)
   99 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
  100 | e void GoodG2B1()
  101 |
  102 | ring data;
  103 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,78,"
   68 |   data = ""foo"";
   69 |
   70 | ing (DirectoryEntry de = new DirectoryEntry())
   71 |
   72 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   73 |   using (DirectorySearcher search = new DirectorySearcher(de))
   74 |   {
   75 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   76 |       search.PropertiesToLoad.Add(""mail"");
   77 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  78 |       SearchResult sresult = search.FindOne();
   79 |   }
   80 |
   81 |
   82 | mitbad
   83 | GOOD)
   84 | dG2B() - use goodsource and badsink by changing the ""if"" so that
   85 | h branches use the GoodSource */
   86 | e void GoodG2B()
   87 |
   88 | ring data;
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,79,"
   69 |   data = null;
   70 |
   71 | ing (DirectoryEntry de = new DirectoryEntry())
   72 |
   73 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   74 |   using (DirectorySearcher search = new DirectorySearcher(de))
   75 |   {
   76 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   77 |       search.PropertiesToLoad.Add(""mail"");
   78 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  79 |       SearchResult sresult = search.FindOne();
   80 |   }
   81 |
   82 |
   83 | mitbad
   84 | GOOD)
   85 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   86 | e void GoodG2B1()
   87 |
   88 | ring data;
   89 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,80,"
   70 |   break;
   71 |
   72 | ing (DirectoryEntry de = new DirectoryEntry())
   73 |
   74 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   75 |   using (DirectorySearcher search = new DirectorySearcher(de))
   76 |   {
   77 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   78 |       search.PropertiesToLoad.Add(""mail"");
   79 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  80 |       SearchResult sresult = search.FindOne();
   81 |   }
   82 |
   83 |
   84 | mitbad
   85 | GOOD)
   86 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   87 | e void GoodG2B1()
   88 |
   89 | ring data = null;
   90 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   break;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B() - use goodsource and badsink */
   81 | e void GoodG2B()
   82 |
   83 | ring data;
   84 | ile (true)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,72,"
   62 | nt i = 0; i < 1; i++)
   63 |
   64 | ing (DirectoryEntry de = new DirectoryEntry())
   65 |
   66 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   67 |   using (DirectorySearcher search = new DirectorySearcher(de))
   68 |   {
   69 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   70 |       search.PropertiesToLoad.Add(""mail"");
   71 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  72 |       SearchResult sresult = search.FindOne();
   73 |   }
   74 |
   75 |
   76 |
   77 | ad
   78 | )
   79 | () - use goodsource and badsink by reversing the block outside the
   80 | tement with the one in the for statement */
   81 | id GoodG2B()
   82 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,48,"
   38 | dPrivate = true;
   39 | ta = Bad_source();
   40 | ing (DirectoryEntry de = new DirectoryEntry())
   41 |
   42 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   43 |   using (DirectorySearcher search = new DirectorySearcher(de))
   44 |   {
   45 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   46 |       search.PropertiesToLoad.Add(""mail"");
   47 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  48 |       SearchResult sresult = search.FindOne();
   49 |   }
   50 |
   51 |
   52 |
   53 | e string Bad_source()
   54 |
   55 | ring data;
   56 |  (badPrivate)
   57 |
   58 |   data = """"; /* Initialize data */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,77,"
   67 |
   68 | ring data = dataCopy;
   69 | ing (DirectoryEntry de = new DirectoryEntry())
   70 |
   71 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   72 |   using (DirectorySearcher search = new DirectorySearcher(de))
   73 |   {
   74 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   75 |       search.PropertiesToLoad.Add(""mail"");
   76 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  77 |       SearchResult sresult = search.FindOne();
   78 |   }
   79 |
   80 |
   81 |
   82 | ad
   83 | )
   84 | rride void Good()
   85 |
   86 | B();
   87 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Database_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,76,"
   66 |
   67 | ring data = BadSource();
   68 | ing (DirectoryEntry de = new DirectoryEntry())
   69 |
   70 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   71 |   using (DirectorySearcher search = new DirectorySearcher(de))
   72 |   {
   73 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   74 |       search.PropertiesToLoad.Add(""mail"");
   75 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  76 |       SearchResult sresult = search.FindOne();
   77 |   }
   78 |
   79 |
   80 | mitbad
   81 | GOOD)
   82 | e static string GoodG2BSource()
   83 |
   84 | ring data;
   85 |  FIX: Use a hardcoded string */
   86 | ta = ""foo"";
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,52,"
  42 |   }
  43 |
  44 | ing (DirectoryEntry de = new DirectoryEntry())
  45 |
  46 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  47 |   using (DirectorySearcher search = new DirectorySearcher(de))
  48 |   {
  49 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  50 |       search.PropertiesToLoad.Add(""mail"");
  51 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 52 |       SearchResult sresult = search.FindOne();
  53 |   }
  54 |
  55 |
  56 | mitbad
  57 | GOOD)
  58 |  override void Good(HttpRequest req, HttpResponse resp)
  59 |
  60 | odG2B(req, resp);
  61 |
  62 |
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing true to false */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,68,"
   58 |   data = null;
   59 |
   60 | ing (DirectoryEntry de = new DirectoryEntry())
   61 |
   62 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   63 |   using (DirectorySearcher search = new DirectorySearcher(de))
   64 |   {
   65 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   66 |       search.PropertiesToLoad.Add(""mail"");
   67 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  68 |       SearchResult sresult = search.FindOne();
   69 |   }
   70 |
   71 |
   72 | mitbad
   73 | GOOD)
   74 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   75 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   76 |
   77 | ring data;
   78 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,68,"
   58 |   data = null;
   59 |
   60 | ing (DirectoryEntry de = new DirectoryEntry())
   61 |
   62 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   63 |   using (DirectorySearcher search = new DirectorySearcher(de))
   64 |   {
   65 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   66 |       search.PropertiesToLoad.Add(""mail"");
   67 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  68 |       SearchResult sresult = search.FindOne();
   69 |   }
   70 |
   71 |
   72 | mitbad
   73 | GOOD)
   74 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   75 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   76 |
   77 | ring data;
   78 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,67,"
   57 |   data = null;
   58 |
   59 | ing (DirectoryEntry de = new DirectoryEntry())
   60 |
   61 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   62 |   using (DirectorySearcher search = new DirectorySearcher(de))
   63 |   {
   64 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   65 |       search.PropertiesToLoad.Add(""mail"");
   66 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  67 |       SearchResult sresult = search.FindOne();
   68 |   }
   69 |
   70 |
   71 | mitbad
   72 | GOOD)
   73 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   74 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   75 |
   76 | ring data;
   77 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,67,"
   57 |   data = null;
   58 |
   59 | ing (DirectoryEntry de = new DirectoryEntry())
   60 |
   61 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   62 |   using (DirectorySearcher search = new DirectorySearcher(de))
   63 |   {
   64 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   65 |       search.PropertiesToLoad.Add(""mail"");
   66 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  67 |       SearchResult sresult = search.FindOne();
   68 |   }
   69 |
   70 |
   71 | mitbad
   72 | GOOD)
   73 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   74 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   75 |
   76 | ring data;
   77 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,75,"
   65 |   data = null;
   66 |
   67 | ing (DirectoryEntry de = new DirectoryEntry())
   68 |
   69 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   70 |   using (DirectorySearcher search = new DirectorySearcher(de))
   71 |   {
   72 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   73 |       search.PropertiesToLoad.Add(""mail"");
   74 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  75 |       SearchResult sresult = search.FindOne();
   76 |   }
   77 |
   78 |
   79 | mitbad
   80 | GOOD)
   81 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
   82 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   83 |
   84 | ring data;
   85 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,60,"
   50 |   data = ""foo"";
   51 |
   52 | ing (DirectoryEntry de = new DirectoryEntry())
   53 |
   54 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   55 |   using (DirectorySearcher search = new DirectorySearcher(de))
   56 |   {
   57 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   58 |       search.PropertiesToLoad.Add(""mail"");
   59 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  60 |       SearchResult sresult = search.FindOne();
   61 |   }
   62 |
   63 |
   64 | mitbad
   65 | GOOD)
   66 | dG2B() - use goodsource and badsink by changing the ""if"" so that
   67 | h branches use the GoodSource */
   68 | e void GoodG2B(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,61,"
   51 |   data = null;
   52 |
   53 | ing (DirectoryEntry de = new DirectoryEntry())
   54 |
   55 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   56 |   using (DirectorySearcher search = new DirectorySearcher(de))
   57 |   {
   58 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   59 |       search.PropertiesToLoad.Add(""mail"");
   60 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  61 |       SearchResult sresult = search.FindOne();
   62 |   }
   63 |
   64 |
   65 | mitbad
   66 | GOOD)
   67 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   68 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   69 |
   70 | ring data;
   71 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,62,"
   52 |   break;
   53 |
   54 | ing (DirectoryEntry de = new DirectoryEntry())
   55 |
   56 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   57 |   using (DirectorySearcher search = new DirectorySearcher(de))
   58 |   {
   59 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   60 |       search.PropertiesToLoad.Add(""mail"");
   61 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  62 |       SearchResult sresult = search.FindOne();
   63 |   }
   64 |
   65 |
   66 | mitbad
   67 | GOOD)
   68 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   69 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   70 |
   71 | ring data = null;
   72 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,56,"
  46 |   break;
  47 |
  48 | ing (DirectoryEntry de = new DirectoryEntry())
  49 |
  50 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  51 |   using (DirectorySearcher search = new DirectorySearcher(de))
  52 |   {
  53 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  54 |       search.PropertiesToLoad.Add(""mail"");
  55 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 56 |       SearchResult sresult = search.FindOne();
  57 |   }
  58 |
  59 |
  60 | mitbad
  61 | GOOD)
  62 | dG2B() - use goodsource and badsink */
  63 | e void GoodG2B(HttpRequest req, HttpResponse resp)
  64 |
  65 | ring data;
  66 | ile (true)
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,54,"
  44 | nt i = 0; i < 1; i++)
  45 |
  46 | ing (DirectoryEntry de = new DirectoryEntry())
  47 |
  48 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  49 |   using (DirectorySearcher search = new DirectorySearcher(de))
  50 |   {
  51 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  52 |       search.PropertiesToLoad.Add(""mail"");
  53 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 54 |       SearchResult sresult = search.FindOne();
  55 |   }
  56 |
  57 |
  58 |
  59 | ad
  60 | )
  61 | () - use goodsource and badsink by reversing the block outside the
  62 | tement with the one in the for statement */
  63 | id GoodG2B(HttpRequest req, HttpResponse resp)
  64 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,47,"
   37 | dPrivate = true;
   38 | ta = Bad_source(req, resp);
   39 | ing (DirectoryEntry de = new DirectoryEntry())
   40 |
   41 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   42 |   using (DirectorySearcher search = new DirectorySearcher(de))
   43 |   {
   44 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   45 |       search.PropertiesToLoad.Add(""mail"");
   46 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  47 |       SearchResult sresult = search.FindOne();
   48 |   }
   49 |
   50 |
   51 |
   52 | e string Bad_source(HttpRequest req, HttpResponse resp)
   53 |
   54 | ring data;
   55 |  (badPrivate)
   56 |
   57 |   data = """"; /* initialize data in case there are no cookies */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
  49 |
  50 | ring data = dataCopy;
  51 | ing (DirectoryEntry de = new DirectoryEntry())
  52 |
  53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  54 |   using (DirectorySearcher search = new DirectorySearcher(de))
  55 |   {
  56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  57 |       search.PropertiesToLoad.Add(""mail"");
  58 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 59 |       SearchResult sresult = search.FindOne();
  60 |   }
  61 |
  62 |
  63 |
  64 | ad
  65 | )
  66 | rride void Good(HttpRequest req, HttpResponse resp)
  67 |
  68 | B(req, resp);
  69 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Get_Cookies_Web_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,58,"
  48 |
  49 | ring data = BadSource(req, resp);
  50 | ing (DirectoryEntry de = new DirectoryEntry())
  51 |
  52 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  53 |   using (DirectorySearcher search = new DirectorySearcher(de))
  54 |   {
  55 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  56 |       search.PropertiesToLoad.Add(""mail"");
  57 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 58 |       SearchResult sresult = search.FindOne();
  59 |   }
  60 |
  61 |
  62 | mitbad
  63 | GOOD)
  64 | e static string GoodG2BSource(HttpRequest req, HttpResponse resp)
  65 |
  66 | ring data;
  67 |  FIX: Use a hardcoded string */
  68 | ta = ""foo"";
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,82,"
   72 |   }
   73 |
   74 | ing (DirectoryEntry de = new DirectoryEntry())
   75 |
   76 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   77 |   using (DirectorySearcher search = new DirectorySearcher(de))
   78 |   {
   79 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   80 |       search.PropertiesToLoad.Add(""mail"");
   81 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  82 |       SearchResult sresult = search.FindOne();
   83 |   }
   84 |
   85 |
   86 | mitbad
   87 | GOOD)
   88 |  override void Good()
   89 |
   90 | odG2B();
   91 |
   92 |
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing true to false */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,98,"
   88 |   data = null;
   89 |
   90 | ing (DirectoryEntry de = new DirectoryEntry())
   91 |
   92 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   93 |   using (DirectorySearcher search = new DirectorySearcher(de))
   94 |   {
   95 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   96 |       search.PropertiesToLoad.Add(""mail"");
   97 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  98 |       SearchResult sresult = search.FindOne();
   99 |   }
  100 |
  101 |
  102 | mitbad
  103 | GOOD)
  104 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
  105 | e void GoodG2B1()
  106 |
  107 | ring data;
  108 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,98,"
   88 |   data = null;
   89 |
   90 | ing (DirectoryEntry de = new DirectoryEntry())
   91 |
   92 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   93 |   using (DirectorySearcher search = new DirectorySearcher(de))
   94 |   {
   95 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   96 |       search.PropertiesToLoad.Add(""mail"");
   97 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  98 |       SearchResult sresult = search.FindOne();
   99 |   }
  100 |
  101 |
  102 | mitbad
  103 | GOOD)
  104 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
  105 | e void GoodG2B1()
  106 |
  107 | ring data;
  108 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,97,"
   87 |   data = null;
   88 |
   89 | ing (DirectoryEntry de = new DirectoryEntry())
   90 |
   91 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   92 |   using (DirectorySearcher search = new DirectorySearcher(de))
   93 |   {
   94 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   95 |       search.PropertiesToLoad.Add(""mail"");
   96 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  97 |       SearchResult sresult = search.FindOne();
   98 |   }
   99 |
  100 |
  101 | mitbad
  102 | GOOD)
  103 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
  104 | e void GoodG2B1()
  105 |
  106 | ring data;
  107 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,97,"
   87 |   data = null;
   88 |
   89 | ing (DirectoryEntry de = new DirectoryEntry())
   90 |
   91 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   92 |   using (DirectorySearcher search = new DirectorySearcher(de))
   93 |   {
   94 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   95 |       search.PropertiesToLoad.Add(""mail"");
   96 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  97 |       SearchResult sresult = search.FindOne();
   98 |   }
   99 |
  100 |
  101 | mitbad
  102 | GOOD)
  103 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
  104 | e void GoodG2B1()
  105 |
  106 | ring data;
  107 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,105,"
   95 |   data = null;
   96 |
   97 | ing (DirectoryEntry de = new DirectoryEntry())
   98 |
   99 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  100 |   using (DirectorySearcher search = new DirectorySearcher(de))
  101 |   {
  102 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  103 |       search.PropertiesToLoad.Add(""mail"");
  104 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 105 |       SearchResult sresult = search.FindOne();
  106 |   }
  107 |
  108 |
  109 | mitbad
  110 | GOOD)
  111 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
  112 | e void GoodG2B1()
  113 |
  114 | ring data;
  115 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,90,"
   80 |   data = ""foo"";
   81 |
   82 | ing (DirectoryEntry de = new DirectoryEntry())
   83 |
   84 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   85 |   using (DirectorySearcher search = new DirectorySearcher(de))
   86 |   {
   87 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   88 |       search.PropertiesToLoad.Add(""mail"");
   89 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  90 |       SearchResult sresult = search.FindOne();
   91 |   }
   92 |
   93 |
   94 | mitbad
   95 | GOOD)
   96 | dG2B() - use goodsource and badsink by changing the ""if"" so that
   97 | h branches use the GoodSource */
   98 | e void GoodG2B()
   99 |
  100 | ring data;
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,91,"
   81 |   data = null;
   82 |
   83 | ing (DirectoryEntry de = new DirectoryEntry())
   84 |
   85 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   86 |   using (DirectorySearcher search = new DirectorySearcher(de))
   87 |   {
   88 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   89 |       search.PropertiesToLoad.Add(""mail"");
   90 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  91 |       SearchResult sresult = search.FindOne();
   92 |   }
   93 |
   94 |
   95 | mitbad
   96 | GOOD)
   97 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   98 | e void GoodG2B1()
   99 |
  100 | ring data;
  101 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,92,"
   82 |   break;
   83 |
   84 | ing (DirectoryEntry de = new DirectoryEntry())
   85 |
   86 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   87 |   using (DirectorySearcher search = new DirectorySearcher(de))
   88 |   {
   89 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   90 |       search.PropertiesToLoad.Add(""mail"");
   91 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  92 |       SearchResult sresult = search.FindOne();
   93 |   }
   94 |
   95 |
   96 | mitbad
   97 | GOOD)
   98 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   99 | e void GoodG2B1()
  100 |
  101 | ring data = null;
  102 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,86,"
   76 |   break;
   77 |
   78 | ing (DirectoryEntry de = new DirectoryEntry())
   79 |
   80 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   81 |   using (DirectorySearcher search = new DirectorySearcher(de))
   82 |   {
   83 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   84 |       search.PropertiesToLoad.Add(""mail"");
   85 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  86 |       SearchResult sresult = search.FindOne();
   87 |   }
   88 |
   89 |
   90 | mitbad
   91 | GOOD)
   92 | dG2B() - use goodsource and badsink */
   93 | e void GoodG2B()
   94 |
   95 | ring data;
   96 | ile (true)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,84,"
   74 | nt i = 0; i < 1; i++)
   75 |
   76 | ing (DirectoryEntry de = new DirectoryEntry())
   77 |
   78 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   79 |   using (DirectorySearcher search = new DirectorySearcher(de))
   80 |   {
   81 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   82 |       search.PropertiesToLoad.Add(""mail"");
   83 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  84 |       SearchResult sresult = search.FindOne();
   85 |   }
   86 |
   87 |
   88 |
   89 | ad
   90 | )
   91 | () - use goodsource and badsink by reversing the block outside the
   92 | tement with the one in the for statement */
   93 | id GoodG2B()
   94 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,50,"
   40 | dPrivate = true;
   41 | ta = Bad_source();
   42 | ing (DirectoryEntry de = new DirectoryEntry())
   43 |
   44 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   45 |   using (DirectorySearcher search = new DirectorySearcher(de))
   46 |   {
   47 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   48 |       search.PropertiesToLoad.Add(""mail"");
   49 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  50 |       SearchResult sresult = search.FindOne();
   51 |   }
   52 |
   53 |
   54 |
   55 | e string Bad_source()
   56 |
   57 | ring data;
   58 |  (badPrivate)
   59 |
   60 |   data = """"; /* Initialize data */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,89,"
   79 |
   80 | ring data = dataCopy;
   81 | ing (DirectoryEntry de = new DirectoryEntry())
   82 |
   83 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   84 |   using (DirectorySearcher search = new DirectorySearcher(de))
   85 |   {
   86 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   87 |       search.PropertiesToLoad.Add(""mail"");
   88 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  89 |       SearchResult sresult = search.FindOne();
   90 |   }
   91 |
   92 |
   93 |
   94 | ad
   95 | )
   96 | rride void Good()
   97 |
   98 | B();
   99 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Listen_tcp_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,88,"
   78 |
   79 | ring data = BadSource();
   80 | ing (DirectoryEntry de = new DirectoryEntry())
   81 |
   82 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   83 |   using (DirectorySearcher search = new DirectorySearcher(de))
   84 |   {
   85 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   86 |       search.PropertiesToLoad.Add(""mail"");
   87 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  88 |       SearchResult sresult = search.FindOne();
   89 |   }
   90 |
   91 |
   92 | mitbad
   93 | GOOD)
   94 | e static string GoodG2BSource()
   95 |
   96 | ring data;
   97 |  FIX: Use a hardcoded string */
   98 | ta = ""foo"";
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,65,"
  55 |   }
  56 |
  57 | ing (DirectoryEntry de = new DirectoryEntry())
  58 |
  59 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  60 |   using (DirectorySearcher search = new DirectorySearcher(de))
  61 |   {
  62 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  63 |       search.PropertiesToLoad.Add(""mail"");
  64 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 65 |       SearchResult sresult = search.FindOne();
  66 |   }
  67 |
  68 |
  69 | mitbad
  70 | GOOD)
  71 |  override void Good()
  72 |
  73 | odG2B();
  74 |
  75 |
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing true to false */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,81,"
   71 |   data = null;
   72 |
   73 | ing (DirectoryEntry de = new DirectoryEntry())
   74 |
   75 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   76 |   using (DirectorySearcher search = new DirectorySearcher(de))
   77 |   {
   78 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   79 |       search.PropertiesToLoad.Add(""mail"");
   80 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  81 |       SearchResult sresult = search.FindOne();
   82 |   }
   83 |
   84 |
   85 | mitbad
   86 | GOOD)
   87 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   88 | e void GoodG2B1()
   89 |
   90 | ring data;
   91 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,81,"
   71 |   data = null;
   72 |
   73 | ing (DirectoryEntry de = new DirectoryEntry())
   74 |
   75 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   76 |   using (DirectorySearcher search = new DirectorySearcher(de))
   77 |   {
   78 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   79 |       search.PropertiesToLoad.Add(""mail"");
   80 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  81 |       SearchResult sresult = search.FindOne();
   82 |   }
   83 |
   84 |
   85 | mitbad
   86 | GOOD)
   87 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   88 | e void GoodG2B1()
   89 |
   90 | ring data;
   91 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,80,"
   70 |   data = null;
   71 |
   72 | ing (DirectoryEntry de = new DirectoryEntry())
   73 |
   74 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   75 |   using (DirectorySearcher search = new DirectorySearcher(de))
   76 |   {
   77 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   78 |       search.PropertiesToLoad.Add(""mail"");
   79 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  80 |       SearchResult sresult = search.FindOne();
   81 |   }
   82 |
   83 |
   84 | mitbad
   85 | GOOD)
   86 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   87 | e void GoodG2B1()
   88 |
   89 | ring data;
   90 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,80,"
   70 |   data = null;
   71 |
   72 | ing (DirectoryEntry de = new DirectoryEntry())
   73 |
   74 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   75 |   using (DirectorySearcher search = new DirectorySearcher(de))
   76 |   {
   77 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   78 |       search.PropertiesToLoad.Add(""mail"");
   79 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  80 |       SearchResult sresult = search.FindOne();
   81 |   }
   82 |
   83 |
   84 | mitbad
   85 | GOOD)
   86 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   87 | e void GoodG2B1()
   88 |
   89 | ring data;
   90 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,88,"
   78 |   data = null;
   79 |
   80 | ing (DirectoryEntry de = new DirectoryEntry())
   81 |
   82 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   83 |   using (DirectorySearcher search = new DirectorySearcher(de))
   84 |   {
   85 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   86 |       search.PropertiesToLoad.Add(""mail"");
   87 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  88 |       SearchResult sresult = search.FindOne();
   89 |   }
   90 |
   91 |
   92 | mitbad
   93 | GOOD)
   94 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
   95 | e void GoodG2B1()
   96 |
   97 | ring data;
   98 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,73,"
   63 |   data = ""foo"";
   64 |
   65 | ing (DirectoryEntry de = new DirectoryEntry())
   66 |
   67 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   68 |   using (DirectorySearcher search = new DirectorySearcher(de))
   69 |   {
   70 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   71 |       search.PropertiesToLoad.Add(""mail"");
   72 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  73 |       SearchResult sresult = search.FindOne();
   74 |   }
   75 |
   76 |
   77 | mitbad
   78 | GOOD)
   79 | dG2B() - use goodsource and badsink by changing the ""if"" so that
   80 | h branches use the GoodSource */
   81 | e void GoodG2B()
   82 |
   83 | ring data;
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,74,"
   64 |   data = null;
   65 |
   66 | ing (DirectoryEntry de = new DirectoryEntry())
   67 |
   68 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   69 |   using (DirectorySearcher search = new DirectorySearcher(de))
   70 |   {
   71 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   72 |       search.PropertiesToLoad.Add(""mail"");
   73 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  74 |       SearchResult sresult = search.FindOne();
   75 |   }
   76 |
   77 |
   78 | mitbad
   79 | GOOD)
   80 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   81 | e void GoodG2B1()
   82 |
   83 | ring data;
   84 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,75,"
   65 |   break;
   66 |
   67 | ing (DirectoryEntry de = new DirectoryEntry())
   68 |
   69 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   70 |   using (DirectorySearcher search = new DirectorySearcher(de))
   71 |   {
   72 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   73 |       search.PropertiesToLoad.Add(""mail"");
   74 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  75 |       SearchResult sresult = search.FindOne();
   76 |   }
   77 |
   78 |
   79 | mitbad
   80 | GOOD)
   81 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   82 | e void GoodG2B1()
   83 |
   84 | ring data = null;
   85 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,69,"
   59 |   break;
   60 |
   61 | ing (DirectoryEntry de = new DirectoryEntry())
   62 |
   63 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   64 |   using (DirectorySearcher search = new DirectorySearcher(de))
   65 |   {
   66 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   67 |       search.PropertiesToLoad.Add(""mail"");
   68 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  69 |       SearchResult sresult = search.FindOne();
   70 |   }
   71 |
   72 |
   73 | mitbad
   74 | GOOD)
   75 | dG2B() - use goodsource and badsink */
   76 | e void GoodG2B()
   77 |
   78 | ring data;
   79 | ile (true)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,67,"
   57 | nt i = 0; i < 1; i++)
   58 |
   59 | ing (DirectoryEntry de = new DirectoryEntry())
   60 |
   61 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   62 |   using (DirectorySearcher search = new DirectorySearcher(de))
   63 |   {
   64 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   65 |       search.PropertiesToLoad.Add(""mail"");
   66 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  67 |       SearchResult sresult = search.FindOne();
   68 |   }
   69 |
   70 |
   71 |
   72 | ad
   73 | )
   74 | () - use goodsource and badsink by reversing the block outside the
   75 | tement with the one in the for statement */
   76 | id GoodG2B()
   77 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,49,"
   39 | dPrivate = true;
   40 | ta = Bad_source();
   41 | ing (DirectoryEntry de = new DirectoryEntry())
   42 |
   43 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   44 |   using (DirectorySearcher search = new DirectorySearcher(de))
   45 |   {
   46 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   47 |       search.PropertiesToLoad.Add(""mail"");
   48 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  49 |       SearchResult sresult = search.FindOne();
   50 |   }
   51 |
   52 |
   53 |
   54 | e string Bad_source()
   55 |
   56 | ring data;
   57 |  (badPrivate)
   58 |
   59 |   data = """"; /* Initialize data */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,72,"
   62 |
   63 | ring data = dataCopy;
   64 | ing (DirectoryEntry de = new DirectoryEntry())
   65 |
   66 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   67 |   using (DirectorySearcher search = new DirectorySearcher(de))
   68 |   {
   69 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   70 |       search.PropertiesToLoad.Add(""mail"");
   71 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  72 |       SearchResult sresult = search.FindOne();
   73 |   }
   74 |
   75 |
   76 |
   77 | ad
   78 | )
   79 | rride void Good()
   80 |
   81 | B();
   82 |
      ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__NetClient_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,71,"
   61 |
   62 | ring data = BadSource();
   63 | ing (DirectoryEntry de = new DirectoryEntry())
   64 |
   65 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   66 |   using (DirectorySearcher search = new DirectorySearcher(de))
   67 |   {
   68 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   69 |       search.PropertiesToLoad.Add(""mail"");
   70 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  71 |       SearchResult sresult = search.FindOne();
   72 |   }
   73 |
   74 |
   75 | mitbad
   76 | GOOD)
   77 | e static string GoodG2BSource()
   78 |
   79 | ring data;
   80 |  FIX: Use a hardcoded string */
   81 | ta = ""foo"";
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,44,"
  34 |  POTENTIAL FLAW: Read data from a querystring using Params.Get */
  35 | ta = req.Params.Get(""name"");
  36 | ing (DirectoryEntry de = new DirectoryEntry())
  37 |
  38 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  39 |   using (DirectorySearcher search = new DirectorySearcher(de))
  40 |   {
  41 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  42 |       search.PropertiesToLoad.Add(""mail"");
  43 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 44 |       SearchResult sresult = search.FindOne();
  45 |   }
  46 |
  47 |
  48 | mitbad
  49 | GOOD)
  50 |  override void Good(HttpRequest req, HttpResponse resp)
  51 |
  52 | odG2B(req, resp);
  53 |
  54 |
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing true to false */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,60,"
   50 |   data = null;
   51 |
   52 | ing (DirectoryEntry de = new DirectoryEntry())
   53 |
   54 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   55 |   using (DirectorySearcher search = new DirectorySearcher(de))
   56 |   {
   57 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   58 |       search.PropertiesToLoad.Add(""mail"");
   59 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  60 |       SearchResult sresult = search.FindOne();
   61 |   }
   62 |
   63 |
   64 | mitbad
   65 | GOOD)
   66 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   67 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   68 |
   69 | ring data;
   70 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,60,"
   50 |   data = null;
   51 |
   52 | ing (DirectoryEntry de = new DirectoryEntry())
   53 |
   54 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   55 |   using (DirectorySearcher search = new DirectorySearcher(de))
   56 |   {
   57 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   58 |       search.PropertiesToLoad.Add(""mail"");
   59 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  60 |       SearchResult sresult = search.FindOne();
   61 |   }
   62 |
   63 |
   64 | mitbad
   65 | GOOD)
   66 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   67 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   68 |
   69 | ring data;
   70 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,67,"
   57 |   data = null;
   58 |
   59 | ing (DirectoryEntry de = new DirectoryEntry())
   60 |
   61 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   62 |   using (DirectorySearcher search = new DirectorySearcher(de))
   63 |   {
   64 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   65 |       search.PropertiesToLoad.Add(""mail"");
   66 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  67 |       SearchResult sresult = search.FindOne();
   68 |   }
   69 |
   70 |
   71 | mitbad
   72 | GOOD)
   73 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
   74 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   75 |
   76 | ring data;
   77 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,52,"
  42 |   data = ""foo"";
  43 |
  44 | ing (DirectoryEntry de = new DirectoryEntry())
  45 |
  46 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  47 |   using (DirectorySearcher search = new DirectorySearcher(de))
  48 |   {
  49 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  50 |       search.PropertiesToLoad.Add(""mail"");
  51 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 52 |       SearchResult sresult = search.FindOne();
  53 |   }
  54 |
  55 |
  56 | mitbad
  57 | GOOD)
  58 | dG2B() - use goodsource and badsink by changing the ""if"" so that
  59 | h branches use the GoodSource */
  60 | e void GoodG2B(HttpRequest req, HttpResponse resp)
  61 |
  62 | ring data;
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,53,"
   43 |   data = null;
   44 |
   45 | ing (DirectoryEntry de = new DirectoryEntry())
   46 |
   47 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   48 |   using (DirectorySearcher search = new DirectorySearcher(de))
   49 |   {
   50 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   51 |       search.PropertiesToLoad.Add(""mail"");
   52 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  53 |       SearchResult sresult = search.FindOne();
   54 |   }
   55 |
   56 |
   57 | mitbad
   58 | GOOD)
   59 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   60 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   61 |
   62 | ring data;
   63 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,54,"
   44 |   break;
   45 |
   46 | ing (DirectoryEntry de = new DirectoryEntry())
   47 |
   48 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   49 |   using (DirectorySearcher search = new DirectorySearcher(de))
   50 |   {
   51 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   52 |       search.PropertiesToLoad.Add(""mail"");
   53 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  54 |       SearchResult sresult = search.FindOne();
   55 |   }
   56 |
   57 |
   58 | mitbad
   59 | GOOD)
   60 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   61 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   62 |
   63 | ring data = null;
   64 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,48,"
  38 |   break;
  39 |
  40 | ing (DirectoryEntry de = new DirectoryEntry())
  41 |
  42 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  43 |   using (DirectorySearcher search = new DirectorySearcher(de))
  44 |   {
  45 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  46 |       search.PropertiesToLoad.Add(""mail"");
  47 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 48 |       SearchResult sresult = search.FindOne();
  49 |   }
  50 |
  51 |
  52 | mitbad
  53 | GOOD)
  54 | dG2B() - use goodsource and badsink */
  55 | e void GoodG2B(HttpRequest req, HttpResponse resp)
  56 |
  57 | ring data;
  58 | ile (true)
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,46,"
  36 | nt i = 0; i < 1; i++)
  37 |
  38 | ing (DirectoryEntry de = new DirectoryEntry())
  39 |
  40 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  41 |   using (DirectorySearcher search = new DirectorySearcher(de))
  42 |   {
  43 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  44 |       search.PropertiesToLoad.Add(""mail"");
  45 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 46 |       SearchResult sresult = search.FindOne();
  47 |   }
  48 |
  49 |
  50 |
  51 | ad
  52 | )
  53 | () - use goodsource and badsink by reversing the block outside the
  54 | tement with the one in the for statement */
  55 | id GoodG2B(HttpRequest req, HttpResponse resp)
  56 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,47,"
   37 | dPrivate = true;
   38 | ta = Bad_source(req, resp);
   39 | ing (DirectoryEntry de = new DirectoryEntry())
   40 |
   41 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   42 |   using (DirectorySearcher search = new DirectorySearcher(de))
   43 |   {
   44 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   45 |       search.PropertiesToLoad.Add(""mail"");
   46 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  47 |       SearchResult sresult = search.FindOne();
   48 |   }
   49 |
   50 |
   51 |
   52 | e string Bad_source(HttpRequest req, HttpResponse resp)
   53 |
   54 | ring data;
   55 |  (badPrivate)
   56 |
   57 |   /* POTENTIAL FLAW: Read data from a querystring using Params.Get */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,51,"
  41 |
  42 | ring data = dataCopy;
  43 | ing (DirectoryEntry de = new DirectoryEntry())
  44 |
  45 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  46 |   using (DirectorySearcher search = new DirectorySearcher(de))
  47 |   {
  48 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  49 |       search.PropertiesToLoad.Add(""mail"");
  50 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 51 |       SearchResult sresult = search.FindOne();
  52 |   }
  53 |
  54 |
  55 |
  56 | ad
  57 | )
  58 | rride void Good(HttpRequest req, HttpResponse resp)
  59 |
  60 | B(req, resp);
  61 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__Params_Get_Web_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,50,"
  40 |
  41 | ring data = BadSource(req, resp);
  42 | ing (DirectoryEntry de = new DirectoryEntry())
  43 |
  44 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  45 |   using (DirectorySearcher search = new DirectorySearcher(de))
  46 |   {
  47 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  48 |       search.PropertiesToLoad.Add(""mail"");
  49 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 50 |       SearchResult sresult = search.FindOne();
  51 |   }
  52 |
  53 |
  54 | mitbad
  55 | GOOD)
  56 | e static string GoodG2BSource(HttpRequest req, HttpResponse resp)
  57 |
  58 | ring data;
  59 |  FIX: Use a hardcoded string */
  60 | ta = ""foo"";
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_01.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,50,"
  40 |   }
  41 |
  42 | ing (DirectoryEntry de = new DirectoryEntry())
  43 |
  44 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  45 |   using (DirectorySearcher search = new DirectorySearcher(de))
  46 |   {
  47 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  48 |       search.PropertiesToLoad.Add(""mail"");
  49 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 50 |       SearchResult sresult = search.FindOne();
  51 |   }
  52 |
  53 |
  54 | mitbad
  55 | GOOD)
  56 |  override void Good(HttpRequest req, HttpResponse resp)
  57 |
  58 | odG2B(req, resp);
  59 |
  60 |
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_02.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing true to false */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (false)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_03.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing 5==5 to 5!=5 */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (5 != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_04.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,66,"
   56 |   data = null;
   57 |
   58 | ing (DirectoryEntry de = new DirectoryEntry())
   59 |
   60 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   61 |   using (DirectorySearcher search = new DirectorySearcher(de))
   62 |   {
   63 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   64 |       search.PropertiesToLoad.Add(""mail"");
   65 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  66 |       SearchResult sresult = search.FindOne();
   67 |   }
   68 |
   69 |
   70 | mitbad
   71 | GOOD)
   72 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_TRUE to PRIVATE_CONST_FALSE */
   73 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   74 |
   75 | ring data;
   76 |  (PRIVATE_CONST_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_05.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,66,"
   56 |   data = null;
   57 |
   58 | ing (DirectoryEntry de = new DirectoryEntry())
   59 |
   60 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   61 |   using (DirectorySearcher search = new DirectorySearcher(de))
   62 |   {
   63 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   64 |       search.PropertiesToLoad.Add(""mail"");
   65 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  66 |       SearchResult sresult = search.FindOne();
   67 |   }
   68 |
   69 |
   70 | mitbad
   71 | GOOD)
   72 | dG2B1() - use goodsource and badsink by changing privateTrue to privateFalse */
   73 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   74 |
   75 | ring data;
   76 |  (privateFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_06.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,65,"
   55 |   data = null;
   56 |
   57 | ing (DirectoryEntry de = new DirectoryEntry())
   58 |
   59 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   60 |   using (DirectorySearcher search = new DirectorySearcher(de))
   61 |   {
   62 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   63 |       search.PropertiesToLoad.Add(""mail"");
   64 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  65 |       SearchResult sresult = search.FindOne();
   66 |   }
   67 |
   68 |
   69 | mitbad
   70 | GOOD)
   71 | dG2B1() - use goodsource and badsink by changing PRIVATE_CONST_FIVE==5 to PRIVATE_CONST_FIVE!=5 */
   72 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   73 |
   74 | ring data;
   75 |  (PRIVATE_CONST_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_07.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,65,"
   55 |   data = null;
   56 |
   57 | ing (DirectoryEntry de = new DirectoryEntry())
   58 |
   59 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   60 |   using (DirectorySearcher search = new DirectorySearcher(de))
   61 |   {
   62 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   63 |       search.PropertiesToLoad.Add(""mail"");
   64 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  65 |       SearchResult sresult = search.FindOne();
   66 |   }
   67 |
   68 |
   69 | mitbad
   70 | GOOD)
   71 | dG2B1() - use goodsource and badsink by changing privateFive==5 to privateFive!=5 */
   72 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   73 |
   74 | ring data;
   75 |  (privateFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_08.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,73,"
   63 |   data = null;
   64 |
   65 | ing (DirectoryEntry de = new DirectoryEntry())
   66 |
   67 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   68 |   using (DirectorySearcher search = new DirectorySearcher(de))
   69 |   {
   70 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   71 |       search.PropertiesToLoad.Add(""mail"");
   72 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  73 |       SearchResult sresult = search.FindOne();
   74 |   }
   75 |
   76 |
   77 | mitbad
   78 | GOOD)
   79 | dG2B1() - use goodsource and badsink by changing PrivateReturnsTrue() to PrivateReturnsFalse() */
   80 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   81 |
   82 | ring data;
   83 |  (PrivateReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_09.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_TRUE to IO.STATIC_READONLY_FALSE */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (IO.STATIC_READONLY_FALSE)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_10.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing IO.staticTrue to IO.staticFalse */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (IO.staticFalse)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_11.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing IO.StaticReturnsTrue() to IO.StaticReturnsFalse() */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (IO.StaticReturnsFalse())
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_12.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,58,"
  48 |   data = ""foo"";
  49 |
  50 | ing (DirectoryEntry de = new DirectoryEntry())
  51 |
  52 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  53 |   using (DirectorySearcher search = new DirectorySearcher(de))
  54 |   {
  55 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  56 |       search.PropertiesToLoad.Add(""mail"");
  57 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 58 |       SearchResult sresult = search.FindOne();
  59 |   }
  60 |
  61 |
  62 | mitbad
  63 | GOOD)
  64 | dG2B() - use goodsource and badsink by changing the ""if"" so that
  65 | h branches use the GoodSource */
  66 | e void GoodG2B(HttpRequest req, HttpResponse resp)
  67 |
  68 | ring data;
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_13.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing IO.STATIC_READONLY_FIVE==5 to IO.STATIC_READONLY_FIVE!=5 */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (IO.STATIC_READONLY_FIVE != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_14.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,59,"
   49 |   data = null;
   50 |
   51 | ing (DirectoryEntry de = new DirectoryEntry())
   52 |
   53 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   54 |   using (DirectorySearcher search = new DirectorySearcher(de))
   55 |   {
   56 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   57 |       search.PropertiesToLoad.Add(""mail"");
   58 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  59 |       SearchResult sresult = search.FindOne();
   60 |   }
   61 |
   62 |
   63 | mitbad
   64 | GOOD)
   65 | dG2B1() - use goodsource and badsink by changing IO.staticFive==5 to IO.staticFive!=5 */
   66 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   67 |
   68 | ring data;
   69 |  (IO.staticFive != 5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_15.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,60,"
   50 |   break;
   51 |
   52 | ing (DirectoryEntry de = new DirectoryEntry())
   53 |
   54 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   55 |   using (DirectorySearcher search = new DirectorySearcher(de))
   56 |   {
   57 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   58 |       search.PropertiesToLoad.Add(""mail"");
   59 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  60 |       SearchResult sresult = search.FindOne();
   61 |   }
   62 |
   63 |
   64 | mitbad
   65 | GOOD)
   66 | dG2B1() - use goodsource and badsink by changing the  switch to switch(5) */
   67 | e void GoodG2B1(HttpRequest req, HttpResponse resp)
   68 |
   69 | ring data = null;
   70 | itch (5)
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_16.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,54,"
  44 |   break;
  45 |
  46 | ing (DirectoryEntry de = new DirectoryEntry())
  47 |
  48 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  49 |   using (DirectorySearcher search = new DirectorySearcher(de))
  50 |   {
  51 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  52 |       search.PropertiesToLoad.Add(""mail"");
  53 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 54 |       SearchResult sresult = search.FindOne();
  55 |   }
  56 |
  57 |
  58 | mitbad
  59 | GOOD)
  60 | dG2B() - use goodsource and badsink */
  61 | e void GoodG2B(HttpRequest req, HttpResponse resp)
  62 |
  63 | ring data;
  64 | ile (true)
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_17.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,52,"
  42 | nt i = 0; i < 1; i++)
  43 |
  44 | ing (DirectoryEntry de = new DirectoryEntry())
  45 |
  46 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  47 |   using (DirectorySearcher search = new DirectorySearcher(de))
  48 |   {
  49 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  50 |       search.PropertiesToLoad.Add(""mail"");
  51 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 52 |       SearchResult sresult = search.FindOne();
  53 |   }
  54 |
  55 |
  56 |
  57 | ad
  58 | )
  59 | () - use goodsource and badsink by reversing the block outside the
  60 | tement with the one in the for statement */
  61 | id GoodG2B(HttpRequest req, HttpResponse resp)
  62 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_21.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,47,"
   37 | dPrivate = true;
   38 | ta = Bad_source(req, resp);
   39 | ing (DirectoryEntry de = new DirectoryEntry())
   40 |
   41 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
   42 |   using (DirectorySearcher search = new DirectorySearcher(de))
   43 |   {
   44 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
   45 |       search.PropertiesToLoad.Add(""mail"");
   46 |       search.PropertiesToLoad.Add(""telephonenumber"");
>  47 |       SearchResult sresult = search.FindOne();
   48 |   }
   49 |
   50 |
   51 |
   52 | e string Bad_source(HttpRequest req, HttpResponse resp)
   53 |
   54 | ring data;
   55 |  (badPrivate)
   56 |
   57 |   data = """"; /* initialize data in case id is not in query string */
      ^ Col 10
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_31.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,57,"
  47 |
  48 | ring data = dataCopy;
  49 | ing (DirectoryEntry de = new DirectoryEntry())
  50 |
  51 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  52 |   using (DirectorySearcher search = new DirectorySearcher(de))
  53 |   {
  54 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  55 |       search.PropertiesToLoad.Add(""mail"");
  56 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 57 |       SearchResult sresult = search.FindOne();
  58 |   }
  59 |
  60 |
  61 |
  62 | ad
  63 | )
  64 | rride void Good(HttpRequest req, HttpResponse resp)
  65 |
  66 | B(req, resp);
  67 |
     ^ Col 14
",c_sharp.c_sharp_ldap_injection
107. LDAP injection,CWE-90,Potentially untrusted HTTP request input reaches an LDAP statement in NIST/src/testcases/CWE90_LDAP_Injection/CWE90_LDAP_Injection__QueryString_Web_42.cs,CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N/E:P/RL:O/RC:X,https://docs.fluidattacks.com/criteria/vulnerabilities/107,skims,SAST,56,"
  46 |
  47 | ring data = BadSource(req, resp);
  48 | ing (DirectoryEntry de = new DirectoryEntry())
  49 |
  50 |   /* POTENTIAL FLAW: data concatenated into LDAP search, which could result in LDAP Injection */
  51 |   using (DirectorySearcher search = new DirectorySearcher(de))
  52 |   {
  53 |       search.Filter = ""(&(objectClass=user)(employeename="" + data + ""))"";
  54 |       search.PropertiesToLoad.Add(""mail"");
  55 |       search.PropertiesToLoad.Add(""telephonenumber"");
> 56 |       SearchResult sresult = search.FindOne();
  57 |   }
  58 |
  59 |
  60 | mitbad
  61 | GOOD)
  62 | e static string GoodG2BSource(HttpRequest req, HttpResponse resp)
  63 |
  64 | ring data;
  65 |  FIX: Use a hardcoded string */
  66 | ta = ""foo"";
     ^ Col 10
",c_sharp.c_sharp_ldap_injection
Summary: 140 vulnerabilities were found in your targets.