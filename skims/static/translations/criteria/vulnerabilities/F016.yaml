---
f016.csharp_weak_protocol:
  en: The application makes use of the {protocol} protocol which is insecure
  es: La aplicación hace uso del protocolo {protocol} el cual es inseguro
f016.serves_content_over_insecure_protocols:
  en: The application makes use of an insecure protocol
  es: La aplicación hace uso de un protocolo inseguro
f016.service_point_manager_disabled:
  en: A AppContext.SetSwitch method call sets
    Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols
    to true
  es: Una llamada al método AppContext.SetSwitch establece
    Switch.System.ServiceModel.DisableUsingServicePointManagerSecurityProtocols
    en verdadero
f016.insecure_shared_access_protocol:
  en: Using the GetSharedAccessSignature method to generate a Shared Access Signature
    (SAS) with specifying protocols as HttpsOrHttp.
  es: Usar el método GetSharedAccessSignature para generar una firma de acceso
    compartido (SAS) con protocolos específicos como HttpsOrHttp.
f016.httpclient_no_revocation_list:
  en: Usar System.Net.Http.HttpClient con su propiedad CheckCertificateRevocationList
    no establecida en true permitirá que HttpClient acepte los certificados revocados
    como válidos.
  es: Using System.Net.Http.HttpClient with its CheckCertificateRevocationList property
    not set to true will allow HttpClient to accept revoked certificates as valid.
f016.aws_elb_without_sslpolicy:
  en: Property SslPolicy is either missing or misconfigured
  es: Falta la propiedad SslPolicy o está mal configurada
f016.elbv2_uses_insecure_ssl_protocol:
  en: Listeners use unsafe SSL protocol
  es: Listeners usan protocolos SSL inseguros
f016.elbv2_uses_insecure_ssl_cipher:
  en: ELB Load Balancers allow insecure SSL ciphers
  es: Balanceadores de carga ELB permiten cifrados SSL inseguros
f016.default_http_client_deprecated:
  en: DefaultHttpClient is deprecated. Further, it does not support connections using TLS1.2, which
    makes using DefaultHttpClient a security hazard. Use SystemDefaultHttpClient instead.
  es: DefaultHttpClient está obsoleto. Además, no soporta conexiones usando TLS1.2,
    lo que  hace que el uso de DefaultHttpClient sea un peligro para la seguridad.
    Utilice en su lugar SystemDefaultHttpClient.
lib_ssl.analyze_protocol.sslv3_enabled:
  en: Server accepts connections with SSLv3
  es: El servidor acepta conexiones con SSLv3
lib_ssl.analyze_protocol.tlsv1_enabled:
  en: Server accepts connections with TLSv1.0
  es: El servidor acepta conexiones con TLSv1.0
lib_ssl.analyze_protocol.tlsv1_1_enabled:
  en: Server accepts connections with TLSv1.1
  es: el servidor acepta conexiones con TLSv1.1
lib_ssl.analyze_protocol.tlsv1_2_or_higher_disabled:
  en: Server refuses connections with TLSv1.2 or TLSv1.3
  es: El servidor rechaza conexiones con TLSv1.2 o TLSv1.3
lib_ssl.analyze_protocol.fallback_scsv_disabled:
  en: Server does not handle TLS_FALLBACK_SCSV correctly
  es: El servidor no maneja de manera correcta TLS_FALLBACK_SCSV
lib_ssl.analyze_protocol.tlsv1_3_downgrade:
  en: Server allows TLSv1.3 downgrade to {v_name}
  es: El servidor permite degradar TLSv1.3 a {v_name}
lib_ssl.analyze_protocol.heartbleed_possible:
  en: Server is vulnerable to heartbleed attacks in {v_name}
  es: El servidor es vulnerable a ataques heartbleed {v_name}
lib_ssl.analyze_protocol.freak_possible:
  en: Server is vulnerable to FREAK attacks in {v_name}
  es: El servidor es vulnerable a ataques FREAK in {v_name}
