from decimal import (
    Decimal,
)
from freezegun import (
    freeze_time,
)
import pytest
from pytest_mock import (
    MockerFixture,
)
from schedulers import (
    machine_vulnerability_notification,
)
from unittest import (
    mock,
)


@pytest.mark.asyncio
@pytest.mark.resolver_test_group("machine_vulnerability_notification")
@freeze_time("2018-04-08T6:00:30.280182")
async def test_machine_vulnerability_notification(
    *, populate: bool, mocker: MockerFixture
) -> None:
    assert populate
    mail_spy = mocker.spy(
        machine_vulnerability_notification, "mail_vulnerability_report"
    )

    await machine_vulnerability_notification.main()

    assert mail_spy.call_count == 1
    mail_spy.assert_any_call(
        loaders=mock.ANY,
        group_name="group1",
        finding_title="001. SQL injection - C Sharp SQL API",
        finding_id="3c475384-834c-47b0-ac71-a41a022e401c",
        vulnerabilities_properties=mock.ANY,
        responsible="hacker@gmail.com",
        severity_score=Decimal("4.1"),
        severity_level="medium",
    )
