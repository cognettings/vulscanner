# pylint: disable=import-error, useless-suppression, too-many-arguments
from model import (
    Credentials,
)
from selenium.webdriver.common.by import (
    By,
)
from selenium.webdriver.remote.webdriver import (
    WebDriver,
)
from selenium.webdriver.support import (
    expected_conditions as ec,
)
from selenium.webdriver.support.wait import (
    WebDriverWait,
)
import utils


def test_vulnerability_evidences(
    driver: WebDriver,
    credentials: Credentials,
    asm_endpoint: str,
    timeout: int,
    jwt_secret: str,
    jwt_encryption_key: str,
) -> None:
    utils.login(
        driver, asm_endpoint, credentials, jwt_secret, jwt_encryption_key
    )
    driver.get(
        f"{asm_endpoint}/orgs/okada/groups/unittesting/vulns/422286126/evidence"  # noqa: E501 pylint: disable=line-too-long
    )
    utils.dismiss_tour_by_class_name(driver, "close")
    # wait for the image with highest weight to be ready
    WebDriverWait(driver, timeout).until(
        ec.visibility_of_element_located(
            (
                By.XPATH,
                "//img[@alt='evidence2']",
            )
        )
    )
    images = driver.find_elements(By.TAG_NAME, "img")
    # skip the logo svg and the remove logo both with role=img.
    sources = [image.get_attribute("src") for image in images[2:]]
    for src in sources:
        driver.get(src)
        assert WebDriverWait(driver, timeout).until(
            ec.visibility_of_element_located(
                (
                    By.XPATH,
                    "/html/body/img",
                )
            )
        )


def test_vulnerability_severity_icons(
    driver: WebDriver,
    credentials: Credentials,
    asm_endpoint: str,
    timeout: int,
    jwt_secret: str,
    jwt_encryption_key: str,
) -> None:
    utils.login(
        driver, asm_endpoint, credentials, jwt_secret, jwt_encryption_key
    )
    driver.get(
        f"{asm_endpoint}/orgs/okada/groups/unittesting/vulns/422286126/severity"  # noqa: E501 pylint: disable=line-too-long
    )
    utils.dismiss_tour_by_class_name(driver, "close")

    WebDriverWait(driver, timeout).until(
        ec.visibility_of_element_located(
            (By.XPATH, '//*[@id="reportConfidenceTooltip"]')
        )
    )

    svg_icons = driver.find_elements(By.CLASS_NAME, "injected-svg")
    sources = [svg.get_attribute("data-src") for svg in svg_icons]
    assert len(sources) == 11
    for src in sources:
        driver.get(src)
        assert WebDriverWait(driver, timeout).until(
            ec.visibility_of_element_located((By.TAG_NAME, "svg"))
        )
