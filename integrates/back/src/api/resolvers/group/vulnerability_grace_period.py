from .schema import (
    GROUP,
)
from dataloaders import (
    Dataloaders,
)
from db_model.constants import (
    DEFAULT_VULNERABILITY_GRACE_PERIOD,
)
from db_model.groups.types import (
    Group,
)
from graphql.type.definition import (
    GraphQLResolveInfo,
)
from organizations import (
    utils as orgs_utils,
)


@GROUP.field("vulnerabilityGracePeriod")
async def resolve(
    parent: Group,
    info: GraphQLResolveInfo,
    **_kwargs: None,
) -> int:
    if parent.policies:
        return (
            parent.policies.vulnerability_grace_period
            or DEFAULT_VULNERABILITY_GRACE_PERIOD
        )

    loaders: Dataloaders = info.context.loaders
    organization = await orgs_utils.get_organization(
        loaders, parent.organization_id
    )

    return (
        organization.policies.vulnerability_grace_period
        or DEFAULT_VULNERABILITY_GRACE_PERIOD
    )
