"Git repositories composed of code"
type GitRoot implements IRoot {
  "Repository branch to be tested"
  branch: String!
  "Cloning status of GitRoot"
  cloningStatus: GitRootCloningStatus!
  "Date of creation"
  createdAt: DateTime
  "User who added GitRoot"
  createdBy: String
  "Credentials used to clone the repository"
  credentials: Credentials
  "AWS s3 presigned url to download the git root"
  downloadUrl: String
  "Kind of environment to test. E.g. production, QA, etc."
  environment: String!
  "URLs to access the environment"
  environmentUrls: [String!]!
    @deprecated(
      reason: """
      This field will be removed after 2023/08/14.
      Use `gitEnvironmentUrls` instead.
      """
    )
  "URLs to access the environment"
  gitEnvironmentUrls: [GitEnvironmentUrl]!
  "Repository paths to be ignored"
  gitignore: [String!]!
  "ID of the root"
  id: ID!
  "Analyze already existing code"
  includesHealthCheck: Boolean!
  "Last time the root cloning state was modified"
  lastCloningStatusUpdate: DateTime!
  "Last time the root was modified"
  lastEditedAt: DateTime
  "Last user who modified the root"
  lastEditedBy: String
  "Last time the root status was modified"
  lastStateStatusUpdate: DateTime!
  "Nickname for the repository"
  nickname: String!
  "Secrets for the environment"
  secrets: [Secret!]!
  "Whether the root is active or not"
  state: ResourceState!
  "AWS s3 presigned url to upload the git root"
  uploadUrl: String
  "Repository URL"
  url: String!
  "Repository requires vpn to clone"
  useVpn: Boolean!
  "Vulnerabilities associated to the root"
  vulnerabilities: [Vulnerability!]
}
