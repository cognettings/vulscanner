"Vulnerability type definition"
type Vulnerability {
  "Advisory information for SCA vulnerabilities."
  advisories: VulnerabilityAdvisories
  "Date when the vulnerability was closed"
  closingDate: String
  "Commit hash to get to the vulnerability"
  commitHash: String
  "How many requested reattacks this vulnerability has"
  cycles: Int!
  "Remediation effectiveness"
  efficacy: Float!
  "Identifier of the last Event keeping this Vulnerability's reattack on hold"
  eventId: String
  "The URL to the ticket in the Bug Tracking System (BTS) of preference"
  externalBugTrackingSystem: String
  "The Finding this Vulnerability is associated with"
  finding: Finding!
  "Identifier of the Finding this Vulnerability is associated with"
  findingId: String!
  "Identifier of the Group this Vulnerability is associated with"
  groupName: String!
  "Last user who changed the vulnerability's state"
  hacker: String
  "Historic configuration of the Vulnerability"
  historicState: [VulnerabilityHistoricState!]
    @deprecated(
      reason: """
      This field will be removed after 2023/12/13. Use `state` instead.
      """
    )
  "Historic configuration of the treatments this Vulnerability has had"
  historicTreatmentConnection(
    "The cursor for the forward pagination"
    after: String
    "The maximum amount of treatments to return"
    first: Int
  ): VulnerabilityHistoricTreatmentConnection!
  "Historic configuration of the treatments this Vulnerability has had"
  historicTreatmentStatus: [Treatment!]
    @deprecated(
      reason: """
      This field will be removed after 2023/12/16. Use `historicTreatmentConnection` instead.
      """
    )
  "Identifier of the Vulnerability"
  id: String!
  """
  The date of the last VERIFIED status on the vulnerability
  (i.e. the date on which a Fluid Attacks Hacker verifies
  a re-attack and whether a fix was effective)
  """
  lastReattackDate: String
  "Last stakeholder who has requested a re-attack"
  lastReattackRequester: String
  "Date of last REQUESTED status (i.e. when the last re-attack was requested)"
  lastRequestedReattackDate: String
  "Date from last state status"
  lastStateDate: String
  "Date from last treatment status"
  lastTreatmentDate: String
  "Date from last verification status"
  lastVerificationDate: String
  "Is this vulnerability currently requested for a reattack/remediation?"
  remediated: Boolean!
  "Report date of this vulnerability"
  reportDate: String
  "Nickname of the root where the Vulnerability was found"
  rootNickname: String
  """
  Custom severity score, not corresponding to a CVSS score.
  Must be a positive number and can be greater than 10.0
  """
  severity: String
  """
  CVSS temporal score, derived from the associated vector string
  """
  severityTemporalScore: Float!
  """
  CVSS vector string associated to the Vulnerability
  """
  severityVector: String!
  """
  If the vulnerability is of type lines, it returns a portion of
  code where the vulnerability was found
  """
  snippet: Snippet
  "Detection source of the Vulnerability"
  source: String!
  """
  Specific location of the Vulnerability, can be a line of code,
  a field or a port
  """
  specific: String!
  "Whether the vulnerability is safe or vulnerable"
  state: VulnerabilityState!
  "Stream to get to the vulnerability"
  stream: String
  "All the tags associated with this Vulnerability in concatenated string form"
  tag: String
  "List of all the tags associated with this Vulnerability"
  tags: [String!]
  "Technique used in the discovery of the vulnerability"
  technique: Technique
  """
  Date stipulated in the temporarily accepted treatment
  (if the date arrives and the vulnerability has not been closed,
  the treatment goes from ACCEPTED to UNTREATED)
  """
  treatmentAcceptanceDate: String
  """
  Status of the request of the application of the permanently
  accepted treatment to a vulnerability
  """
  treatmentAcceptanceStatus: String
  "Email address of the user who is assigned"
  treatmentAssigned: String
  "Total number of times a treatment in that vulnerability has changed"
  treatmentChanges: Int!
  "The last comment was made in the treatment of vulnerability"
  treatmentJustification: String
  "The current treatment of the vulnerability"
  treatmentStatus: VulnerabilityTreatment
  "Email address of the user who assign treatment"
  treatmentUser: String
  """
  Current status of the reattack which could be:
  On hold, Verified or Requested
  """
  verification: String
  "Type of vulnerability could be: Input, lines or ports"
  vulnerabilityType: String!
  "General location of the Vulnerability, can be a file, an URL or an IP"
  where: String!
  """
  Status of that vulnerability which requested that treatment
  which could be:
  Confirmed, Rejected or Requested
  """
  zeroRisk: String
}

"Vulnerability Edge type definition"
type VulnerabilityEdge implements Edge {
  "The cursor for the edge"
  cursor: String!
  "The node with the payload"
  node: Vulnerability!
}

"Vulnerabilities Connection type definition"
type VulnerabilitiesConnection {
  "A list of Vulnerabilities edges"
  edges: [VulnerabilityEdge]!
  "Information to aid in pagination"
  pageInfo: PageInfo!
  "Total vulnerabilities found"
  total: Int
}
