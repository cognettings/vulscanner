/* eslint-disable react/forbid-component-props */
import React, { useMemo } from "react";
import { useTranslation } from "react-i18next";

import { PanelCollapseHeader } from "./styles";

import { Col, Row } from "components/Layout";
import { Graphic } from "graphics/components/Graphic";
import { ChartsGenericViewExtras } from "scenes/Dashboard/components/ChartsGenericView/Extras";
import type {
  EntityType,
  IChartsGenericViewProps,
} from "scenes/Dashboard/components/ChartsGenericView/types";

export const ChartsView: React.FC<IChartsGenericViewProps> = ({
  bgChange,
  entity,
  reportMode,
  subject,
}: IChartsGenericViewProps): JSX.Element => {
  const { t } = useTranslation();
  const graphInfoLink =
    "https://docs.fluidattacks.com/machine/platform/analytics/";

  const doesEntityMatch: (entities: EntityType[]) => boolean = (
    entities: EntityType[]
  ): boolean => entities.includes(entity);

  const reportModeClassName: string = useMemo((): string => {
    return reportMode ? "report-mode" : "";
  }, [reportMode]);
  const backgroundColorClassName: string = useMemo((): string => {
    return bgChange ? "report-bg-change" : "";
  }, [bgChange]);
  const reportClassName: string = useMemo((): string => {
    return `${reportModeClassName} ${backgroundColorClassName}`.trim();
  }, [reportModeClassName, backgroundColorClassName]);

  return (
    <React.StrictMode>
      {reportMode ? undefined : (
        <div className={"center ph3 mb3"}>
          <ChartsGenericViewExtras
            bgChange={bgChange}
            entity={entity}
            reportMode={reportMode}
            subject={subject}
          />
        </div>
      )}
      <div className={reportClassName}>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"exposedOverTimeCvssf"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common#exposure-over-time`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.stackedBarChart.exposedOverTimeCvssf.title")}
            />
          </Col>
        </Row>
        <Row justify={"between"}>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"vulnerabilitiesRemediationCreated"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#sprint-exposure-increment`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.remediationCreated.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"vulnerabilitiesRemediationSolved"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#sprint-exposure-decrement`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.remediationSolved.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"vulnerabilitiesRemediationRemediated"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#sprint-exposure-change-overall`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.remediationRemediated.title")}
            />
          </Col>
        </Row>
        <Row justify={"between"}>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"remediationRateCvssf"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#remediation-rate`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.remediationRate.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"openVulnerabilities"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#open-vulnerabilities`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.openVulnerabilities.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"vulnerabilitiesWithUndefinedTreatment"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#vulnerabilities-with-no-treatment`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.vulnsWithUndefinedTreatment.title")}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"riskOverTimeCvssf"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.stackedBarChart.riskOverTime.title")}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"distributionOverTimeCvssf"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t(
                "analytics.stackedBarChart.distributionOverTimeCvssf.title"
              )}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"exposureBenchmarkingCvssf"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common#exposure-benchmark`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.barChart.exposureBenchmarkingCvssf")}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"exposureTrendsByCategories"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common#exposure-trends-by-vulnerability-category`}
              reportMode={reportMode}
              shouldDisplayAll={false}
              subject={subject}
              title={t("analytics.barChart.exposureTrendsByCategories")}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"daysSinceLastRemediation"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#days-since-last-remediation`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.daysSinceLastRemediation.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"meanTimeToReattack"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#mean-time-to-request-reattacks`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.meanTimeToReattack.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"findingsBeingReattacked"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#vulnerabilities-being-re-attacked`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.findingsBeingReattacked.title")}
            />
          </Col>
          <Col>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"daysUntilZeroExposition"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#days-until-zero-exposure`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.daysUntilZeroExposition.title")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row justify={"center"}>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"cvssfBenchmarking"}
                documentType={"stackedBarChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"stackedBarChart"}
                infoLink={`${graphInfoLink}${entity}#remediation-rate-benchmark`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.stackedBarChart.cvssfBenchmarking.title")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      <div className={reportClassName}>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"mttrBenchmarkingCvssf"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.barChart.mttrBenchmarking.title")}
            />
          </Col>
        </Row>
        <Row justify={"center"}>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"meanTimeToRemediateCvssf"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.meanRemediate")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"remediatedAcceptedGroup"}
                documentType={"stackedBarChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"stackedBarChart"}
                infoLink={`${graphInfoLink}${entity}#distribution-of-vulnerabilities-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.remediatedAcceptedVuln")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      <div className={reportClassName}>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"acceptedVulnerabilitiesBySeverity"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common#accepted-vulnerabilities-by-cvss-severity`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.acceptedVulnerabilitiesBySeverity")}
            />
          </Col>
        </Row>
        <Row>
          <Col lg={50} md={50} sm={50}>
            <Graphic
              bsHeight={160}
              className={"g2"}
              documentName={"assignedVulnerabilities"}
              documentType={"pieChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"c3"}
              infoLink={`${graphInfoLink}common#vulnerabilities-by-assignment`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.assignedVulnerabilities")}
            />
          </Col>
          <Col lg={50} md={50} sm={50}>
            <Graphic
              bsHeight={160}
              className={"g2"}
              documentName={"assignedVulnerabilitiesStatus"}
              documentType={"pieChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"c3"}
              infoLink={`${graphInfoLink}common#status-of-assigned-vulnerabilities`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.assignedVulnerabilitiesStatus")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col lg={50} md={50} sm={50}>
              <Graphic
                bsHeight={160}
                className={"g2"}
                documentName={"openVulnerabilitiesStatus"}
                documentType={"pieChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"c3"}
                infoLink={`${graphInfoLink}${entity}#open-vulnerabilities-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.openVulnsGroups")}
              />
            </Col>
            <Col lg={50} md={50} sm={50}>
              <Graphic
                bsHeight={160}
                className={"g2"}
                documentName={"vulnerabilitiesWithUndefinedTreatment"}
                documentType={"pieChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"c3"}
                infoLink={`${graphInfoLink}${entity}#undefined-treatment-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.undefinedTitle")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      <div className={reportClassName}>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"topVulnerabilitiesCvssf"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.barChart.topVulnerabilities.title")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"exposedByGroups"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#exposure-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.barChart.exposureByGroups")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"openFindings"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#open-vulnerability-types-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.openFindingsGroup")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      <div className={reportClassName}>
        <Row>
          <Col lg={50} md={50} sm={50}>
            <Graphic
              bsHeight={160}
              className={"g2"}
              documentName={"treatmentCvssf"}
              documentType={"pieChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"c3"}
              infoLink={`${graphInfoLink}common#vulnerabilities-treatment`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.pieChart.treatment.title")}
            />
          </Col>
          <Col lg={50} md={50} sm={50}>
            <Graphic
              bsHeight={160}
              className={"g2"}
              documentName={"reportTechnique"}
              documentType={"pieChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"c3"}
              infoLink={`${graphInfoLink}common#report-technique`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.reportTechnique")}
            />
          </Col>
        </Row>
        <Row>
          <Col lg={50} md={50} sm={50}>
            <Graphic
              bsHeight={160}
              className={"g2"}
              documentName={"rootResources"}
              documentType={"pieChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"c3"}
              infoLink={`${graphInfoLink}common#active-resources-distribution`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.pieChart.resources.title")}
            />
          </Col>
          {doesEntityMatch(["group"]) ? (
            <Col lg={50} md={50} sm={50}>
              <Graphic
                bsHeight={160}
                className={"g2"}
                documentName={"availability"}
                documentType={"pieChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"c3"}
                infoLink={`${graphInfoLink}groups#group-availability`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.pieChart.availability.title")}
              />
            </Col>
          ) : undefined}
        </Row>
        <Row>
          <Col lg={33} md={33} sm={50}>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"totalFindings"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#total-types`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.totalTypes.title")}
            />
          </Col>
          <Col lg={33} md={33} sm={50}>
            <Graphic
              bsHeight={80}
              className={"g3"}
              documentName={"totalVulnerabilities"}
              documentType={"textBox"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"textBox"}
              infoLink={`${graphInfoLink}common#total-vulnerabilities`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.textBox.totalVulnerabilities.title")}
            />
          </Col>
        </Row>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"vulnerabilitiesByTag"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common#vulnerabilities-by-tag`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.vulnerabilitiesByTag")}
            />
          </Col>
        </Row>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"vulnerabilitiesByLevel"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common#vulnerabilities-by-level`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.vulnerabilitiesByLevel")}
            />
          </Col>
        </Row>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"acceptedVulnerabilitiesByUser"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common#accepted-vulnerabilities-by-user`}
              reportMode={reportMode}
              subject={subject}
              title={t("tagIndicator.acceptedVulnerabilitiesByUser")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"eventualities"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#unsolved-events-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.barChart.eventualities")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"finding"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#vulnerability-types-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.findingsGroup")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"topOldestFindings"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#oldest-vulnerability-types`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.topOldestFindings")}
              />
            </Col>
          </Row>
          <Row>
            <Col lg={50} md={50} sm={50}>
              <Graphic
                bsHeight={160}
                className={"g2"}
                documentName={"totalVulnerabilitiesStatus"}
                documentType={"pieChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"c3"}
                infoLink={`${graphInfoLink}${entity}#vulnerabilities-by-group`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.vulnsGroups")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      <div className={reportClassName}>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"assignedVulnerabilitiesCvssf"}
              documentType={"stackedBarChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"stackedBarChart"}
              infoLink={`${graphInfoLink}common`}
              reportMode={reportMode}
              subject={subject}
              title={t(
                "analytics.stackedBarChart.assignedVulnerabilities.title"
              )}
            />
          </Col>
        </Row>
        <Row>
          <Col>
            <Graphic
              bsHeight={320}
              className={"g1"}
              documentName={"touchedFiles"}
              documentType={"barChart"}
              entity={entity}
              generatorName={"generic"}
              generatorType={"barChart"}
              infoLink={`${graphInfoLink}common#files-with-open-vulnerabilities-in-the-last-20-weeks`}
              reportMode={reportMode}
              subject={subject}
              title={t("analytics.barChart.touchedFiles.title")}
            />
          </Col>
        </Row>
      </div>
      {doesEntityMatch(["organization", "portfolio"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"availability"}
                documentType={"stackedBarChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"stackedBarChart"}
                infoLink={`${graphInfoLink}${entity}#overall-availability-of-groups`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.groupsAvailability")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"oldestEvents"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}${entity}#days-since-groups-are-failing`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.oldestGroupEvent")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"groupsByTag"}
                documentType={"heatMapChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"heatMapChart"}
                infoLink={`${graphInfoLink}${entity}#tags-by-groups`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.heatMapChart.groupsByTag")}
              />
            </Col>
          </Row>
        </div>
      ) : undefined}
      {doesEntityMatch(["group"]) ? (
        <div className={reportClassName}>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"oldestEvents"}
                documentType={"barChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"barChart"}
                infoLink={`${graphInfoLink}groups#days-since-group-is-failing`}
                reportMode={reportMode}
                subject={subject}
                title={t("tagIndicator.oldestEvent")}
              />
            </Col>
          </Row>
          <Row>
            <Col>
              <Graphic
                bsHeight={320}
                className={"g1"}
                documentName={"findingsByTag"}
                documentType={"heatMapChart"}
                entity={entity}
                generatorName={"generic"}
                generatorType={"heatMapChart"}
                infoLink={`${graphInfoLink}groups#findings-by-tags`}
                reportMode={reportMode}
                subject={subject}
                title={t("analytics.heatMapChart.findingsByTag")}
              />
            </Col>
          </Row>
          <hr />
          <div className={"center"}>
            <Row>
              <Col>
                <PanelCollapseHeader>
                  <h1>{t("analytics.sections.forces.title")}</h1>
                </PanelCollapseHeader>
              </Col>
            </Row>
            <div className={"pt4"} />
            <Row>
              <Col>
                <Graphic
                  bsHeight={80}
                  className={"g3"}
                  documentName={"forcesStatus"}
                  documentType={"textBox"}
                  entity={entity}
                  generatorName={"generic"}
                  generatorType={"textBox"}
                  infoLink={`${graphInfoLink}groups#service-status`}
                  reportMode={reportMode}
                  subject={subject}
                  title={t("analytics.textBox.forcesStatus.title")}
                />
              </Col>
              <Col>
                <Graphic
                  bsHeight={80}
                  className={"g3"}
                  documentName={"forcesUsage"}
                  documentType={"textBox"}
                  entity={entity}
                  generatorName={"generic"}
                  generatorType={"textBox"}
                  infoLink={`${graphInfoLink}groups#service-usage`}
                  reportMode={reportMode}
                  subject={subject}
                  title={t("analytics.textBox.forcesUsage.title")}
                />
              </Col>
              <Col>
                <Graphic
                  bsHeight={80}
                  className={"g3"}
                  documentName={"forcesRepositoriesAndBranches"}
                  documentType={"textBox"}
                  entity={entity}
                  generatorName={"generic"}
                  generatorType={"textBox"}
                  infoLink={`${graphInfoLink}groups#repositories-and-branches`}
                  reportMode={reportMode}
                  subject={subject}
                  title={t(
                    "analytics.textBox.forcesRepositoriesAndBranches.title"
                  )}
                />
              </Col>
            </Row>
            <Row>
              <Col lg={50} md={50} sm={50}>
                <Graphic
                  bsHeight={160}
                  className={"g2"}
                  documentName={"forcesSecurityCommitment"}
                  documentType={"gauge"}
                  entity={entity}
                  generatorName={"generic"}
                  generatorType={"c3"}
                  infoLink={`${graphInfoLink}groups#your-commitment-towards-security`}
                  reportMode={reportMode}
                  subject={subject}
                  title={t("analytics.gauge.forcesSecurityCommitment.title")}
                />
              </Col>
              <Col lg={50} md={50} sm={50}>
                <Graphic
                  bsHeight={160}
                  className={"g2"}
                  documentName={"forcesBuildsRisk"}
                  documentType={"gauge"}
                  entity={entity}
                  generatorName={"generic"}
                  generatorType={"c3"}
                  infoLink={`${graphInfoLink}groups#builds-risk`}
                  reportMode={reportMode}
                  subject={subject}
                  title={t("analytics.gauge.forcesBuildsRisk.title")}
                />
              </Col>
            </Row>
          </div>
        </div>
      ) : undefined}
    </React.StrictMode>
  );
};
