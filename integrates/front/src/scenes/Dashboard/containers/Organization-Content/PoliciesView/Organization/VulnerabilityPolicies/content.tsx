import type { ColumnDef } from "@tanstack/react-table";
import type { FC } from "react";
import React, { StrictMode } from "react";
import { useTranslation } from "react-i18next";

import { policiesActions } from "./Accions";
import { statusFormatter } from "./formatter";
import { policiesName } from "./Name";
import { policiesTags } from "./Tags";
import type { IVulnerabilityPoliciesData } from "./types";

import { Table } from "components/Table";
import { formatDate } from "utils/formatHelpers";

const tPath = "organization.tabs.policies.findings.";

interface IVulnerabilityPoliciesProps {
  data: IVulnerabilityPoliciesData[];
  extraButtons: JSX.Element;
  organizationId: string;
}

const VulnerabilityPoliciesTable: FC<IVulnerabilityPoliciesProps> = ({
  data,
  extraButtons,
  organizationId,
}: Readonly<IVulnerabilityPoliciesProps>): JSX.Element => {
  const { t } = useTranslation();

  const tableColumns: ColumnDef<IVulnerabilityPoliciesData>[] = [
    {
      accessorKey: "name",
      cell: policiesName,
      header: t(`${tPath}type`),
    },
    {
      accessorKey: "tags",
      cell: policiesTags,
    },
    {
      accessorKey: "status",
      cell: (cell): JSX.Element => statusFormatter(cell.getValue()),
      header: t(`${tPath}status`),
    },
    {
      accessorKey: "action",
      cell: (cell): JSX.Element | null =>
        policiesActions({
          cell: cell.row.original,
          organizationId,
        }),
      header: t(`${tPath}action`),
    },
    {
      accessorKey: "lastStatusUpdate",
      cell: (cell): string => formatDate(cell.getValue()),
      header: t(`${tPath}date`),
    },
  ];

  return (
    <StrictMode>
      <Table
        columns={tableColumns}
        data={data}
        extraButtons={extraButtons}
        id={"tblVulnPolicies"}
      />
    </StrictMode>
  );
};

export { VulnerabilityPoliciesTable };
