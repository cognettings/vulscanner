import React, { useCallback } from "react";
import { useTranslation } from "react-i18next";

import type { IConfirmVulnerabilityCheckBoxProps } from "./types";

import { MixedCheckBoxButton } from "components/MixedCheckBoxButton";

const ConfirmVulnerabilityCheckBox: React.FC<IConfirmVulnerabilityCheckBoxProps> =
  (props: IConfirmVulnerabilityCheckBoxProps): JSX.Element => {
    const { approveFunction, deleteFunction, vulnerabilityRow } = props;

    const { t } = useTranslation();

    const handleOnApprove = useCallback((): void => {
      approveFunction(vulnerabilityRow);
    }, [approveFunction, vulnerabilityRow]);

    const handleOnDelete = useCallback((): void => {
      deleteFunction(vulnerabilityRow);
    }, [deleteFunction, vulnerabilityRow]);

    return (
      <React.StrictMode>
        <div style={{ width: "150px" }}>
          <MixedCheckBoxButton
            fontSize={"fs-checkbox"}
            id={"confirmVulnerabilityCheckBox"}
            isNoEnabled={vulnerabilityRow.acceptance !== "APPROVED"}
            isSelected={vulnerabilityRow.acceptance !== ""}
            isYesEnabled={vulnerabilityRow.acceptance !== "REJECTED"}
            noLabel={
              vulnerabilityRow.acceptance === "REJECTED"
                ? t(
                    "searchFindings.tabVuln.handleAcceptanceModal.submittedForm.submittedTable.rejected"
                  ).toUpperCase()
                : t(
                    "searchFindings.tabVuln.handleAcceptanceModal.submittedForm.submittedTable.reject"
                  ).toUpperCase()
            }
            onApprove={handleOnApprove}
            onDelete={handleOnDelete}
            yesLabel={
              vulnerabilityRow.acceptance === "APPROVED"
                ? t(
                    "searchFindings.tabVuln.handleAcceptanceModal.submittedForm.submittedTable.confirmed"
                  ).toUpperCase()
                : t(
                    "searchFindings.tabVuln.handleAcceptanceModal.submittedForm.submittedTable.confirm"
                  ).toUpperCase()
            }
          />
        </div>
      </React.StrictMode>
    );
  };

export { ConfirmVulnerabilityCheckBox };
